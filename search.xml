<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Backend - API Controllers &amp; Routers</title>
    <url>/2023/06/09/Backend-API-Controllers-Routers/</url>
    <content><![CDATA[<p>設置 API Controllers 及 Routers 處理前端請求，並回應響應數據。</p>
<span id="more"></span>

<h1 id="Controllers"><a href="#Controllers" class="headerlink" title="Controllers"></a>Controllers</h1><p>安裝 bcrypt，用於 hash 密碼。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i bcrypt</span><br></pre></td></tr></table></figure>

<h2 id="usersController-js"><a href="#usersController-js" class="headerlink" title="usersController.js"></a>usersController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/usersController.js</span></span><br><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all users</span></span><br><span class="line"><span class="comment">// @route GET /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllUsers</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> users = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">select</span>(<span class="string">&quot;-password&quot;</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!users) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No users found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">json</span>(users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new user</span></span><br><span class="line"><span class="comment">// @route POST /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, roles &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!username || !password) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// hash password</span></span><br><span class="line">  <span class="keyword">const</span> hashedPwd = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>) <span class="comment">// salt rounds</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷是否提供 roles</span></span><br><span class="line">  <span class="keyword">const</span> userObject =</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) || !roles.<span class="property">length</span></span><br><span class="line">      ? &#123; username, <span class="attr">password</span>: hashedPwd &#125;</span><br><span class="line">      : &#123; username, <span class="attr">password</span>: hashedPwd, roles &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">create</span>(userObject)</span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`New user <span class="subst">$&#123;username&#125;</span> created`</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid user data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update user</span></span><br><span class="line"><span class="comment">// @route PATCH /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, username, password, roles, active &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    !id ||</span><br><span class="line">    !username ||</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) ||</span><br><span class="line">    !roles.<span class="property">length</span> ||</span><br><span class="line">    <span class="keyword">typeof</span> active !== <span class="string">&quot;boolean&quot;</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">      .<span class="title function_">status</span>(<span class="number">400</span>)</span><br><span class="line">      .<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields except password are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  user.<span class="property">username</span> = username</span><br><span class="line">  user.<span class="property">roles</span> = roles</span><br><span class="line">  user.<span class="property">active</span> = active</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (password) &#123;</span><br><span class="line">    <span class="comment">// hash password</span></span><br><span class="line">    user.<span class="property">password</span> = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedUser = <span class="keyword">await</span> user.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`<span class="subst">$&#123;updatedUser.username&#125;</span> updated`</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Delete user</span></span><br><span class="line"><span class="comment">// @route DELETE /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User ID Required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">user</span>: id &#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User has assigned notes&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 確認 user 存在</span></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> user.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Username <span class="subst">$&#123;result.username&#125;</span> with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllUsers,</span><br><span class="line">  createNewUser,</span><br><span class="line">  updateUser,</span><br><span class="line">  deleteUser,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="notesController-js"><a href="#notesController-js" class="headerlink" title="notesController.js"></a>notesController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/notesController.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all notes</span></span><br><span class="line"><span class="comment">// @route GET /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllNotes</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> notes = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!notes.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No notes found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> notesWithUser = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(</span><br><span class="line">    notes.<span class="title function_">map</span>(<span class="keyword">async</span> (note) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(note.<span class="property">user</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">      <span class="keyword">return</span> &#123; ...note, <span class="attr">username</span>: user.<span class="property">username</span> &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(notesWithUser)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new note</span></span><br><span class="line"><span class="comment">// @route POST /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user, title, text &#125; = req.<span class="property">body</span></span><br><span class="line">  <span class="keyword">if</span> (!user || !title || !text) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">create</span>(&#123; user, title, text &#125;)</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;New note created&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid note data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update note</span></span><br><span class="line"><span class="comment">// @route PATCH /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, user, title, text, completed &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id || !user || !title || !text || <span class="keyword">typeof</span> completed !== <span class="string">&quot;boolean&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  note.<span class="property">user</span> = user</span><br><span class="line">  note.<span class="property">title</span> = title</span><br><span class="line">  note.<span class="property">text</span> = text</span><br><span class="line">  note.<span class="property">completed</span> = completed</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedNote = <span class="keyword">await</span> note.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(<span class="string">`&#x27;<span class="subst">$&#123;updatedNote.title&#125;</span>&#x27; updated`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @desc Delete note</span></span><br><span class="line"><span class="comment">// @route DELETE /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note ID required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> note.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Note &#x27;<span class="subst">$&#123;result.title&#125;</span>&#x27; with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllNotes,</span><br><span class="line">  createNewNote,</span><br><span class="line">  updateNote,</span><br><span class="line">  deleteNote,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Routers"><a href="#Routers" class="headerlink" title="Routers"></a>Routers</h1><h2 id="userRoutes-js"><a href="#userRoutes-js" class="headerlink" title="userRoutes.js"></a>userRoutes.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/userRoutes.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> usersController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/usersController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(usersController.<span class="property">getAllUsers</span>)</span><br><span class="line">  .<span class="title function_">post</span>(usersController.<span class="property">createNewUser</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(usersController.<span class="property">updateUser</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(usersController.<span class="property">deleteUser</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="noteRouter-js"><a href="#noteRouter-js" class="headerlink" title="noteRouter.js"></a>noteRouter.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/noteRouters.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> notesController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/notesController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(notesController.<span class="property">getAllNotes</span>)</span><br><span class="line">  .<span class="title function_">post</span>(notesController.<span class="property">createNewNote</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(notesController.<span class="property">updateNote</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(notesController.<span class="property">deleteNote</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h1 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h1><p>安裝 express-async-errors，用於處理異步錯誤，不需編寫 <code>try/catch</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express-async-errors</span><br></pre></td></tr></table></figure>

<p>啟用 Routers。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;express-async-errors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Routers</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/users&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/userRoutes&quot;</span>))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/notes&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/noteRoutes&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - API 的靜態頁面</title>
    <url>/2023/06/08/Backend-API%E7%9A%84%E9%9D%9C%E6%85%8B%E9%A0%81%E9%9D%A2/</url>
    <content><![CDATA[<p>當訪問 API url 時所展示的頁面，用於測試 API 是否可以正常訪問。</p>
<span id="more"></span>

<h1 id="API-的靜態頁面"><a href="#API-的靜態頁面" class="headerlink" title="API 的靜態頁面"></a>API 的靜態頁面</h1><p>安裝 Express :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure>

<h2 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h2><p>在 server.js 中提供靜態頁面，並設置 root 路由。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="root-js"><a href="#root-js" class="headerlink" title="root.js"></a>root.js</h2><p>root 路由中響應 index.html 檔案。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/root.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 響應 index.html 檔案</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;^/$|/index(.html)?&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;index.html&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>訪問 API 展示 index.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>techNotes API<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 因為 server.js 中有提供 &#x27;/public&#x27; 靜態檔案，所以可以直接找到 style.css --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="404-html"><a href="#404-html" class="headerlink" title="404.html"></a>404.html</h2><p>訪問未知 url 展示 404.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/404.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sorry!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The resource you have requested does not exist.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Database</title>
    <url>/2023/06/08/Backend-Database/</url>
    <content><![CDATA[<p>建立 MongoDB Atlas Database ，使用 MongoDB，設定 Models 管理、儲存資料。</p>
<span id="more"></span>

<h1 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h1><p>安裝 dotenv，用於管理環境變數 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i dotenv</span><br></pre></td></tr></table></figure>

<p>在 server.js 中引入 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="comment">// As early as possible in your application.</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br></pre></td></tr></table></figure>

<p>創建 .env 檔，設定環境變數。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NODE_ENV = development</span><br><span class="line">DATABASE_URI = mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</span><br></pre></td></tr></table></figure>

<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="建立資料庫"><a href="#建立資料庫" class="headerlink" title="建立資料庫"></a>建立資料庫</h2><p><a href="https://www.mongodb.com/cloud/atlas/lp/try4?utm_source=google&utm_campaign=search_gs_pl_evergreen_atlas_core-high-int_prosp-brand_gic-null_apac-tw_ps-all_desktop_eng_lead&utm_term=mongodb%20atlas&utm_medium=cpc_paid_search&utm_ad=e&utm_ad_campaign_id=19638446771&adgroup=144342468903&cq_cmp=19638446771&gad=1&gclid=CjwKCAjw-IWkBhBTEiwA2exyO-W4mhTJ8AVnaRVqQF-w5iIbrhSRQL-VSsydB5Dwwbq0JPe39YzEFxoC4kcQAvD_BwE/" title="MongoDB Atlas">MongoDB Atlas</a> 建立 Database，取得 connection string: <code>mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</code></p>
<h2 id="建立-Models"><a href="#建立-Models" class="headerlink" title="建立 Models"></a>建立 Models</h2><p>安裝 mongoose :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i mongoose</span><br></pre></td></tr></table></figure>

<p>創建 User Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// models/User.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">roles</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">String</span>],</span><br><span class="line">    <span class="attr">default</span>: [<span class="string">&quot;Employee&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">active</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;User&quot;</span>, userSchema)</span><br></pre></td></tr></table></figure>

<p>安裝 @typegoose&#x2F;auto-increment，用於自增項 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @typegoose/auto-increment</span><br></pre></td></tr></table></figure>

<p>創建 Note Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AutoIncrementID</span> = <span class="built_in">require</span>(<span class="string">&quot;@typegoose/auto-increment&quot;</span>).<span class="property">AutoIncrementID</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> noteSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">user</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: mongoose.<span class="property">Schema</span>.<span class="property">Types</span>.<span class="property">ObjectId</span>,</span><br><span class="line">      <span class="attr">ref</span>: <span class="string">&quot;User&quot;</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">text</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">completed</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">ticket</span>: <span class="title class_">Number</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">timestamps</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">noteSchema.<span class="title function_">plugin</span>(<span class="title class_">AutoIncrementID</span>, &#123; <span class="attr">field</span>: <span class="string">&quot;ticket&quot;</span>, <span class="attr">startAt</span>: <span class="number">500</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;Note&quot;</span>, noteSchema)</span><br></pre></td></tr></table></figure>

<h3 id="連接資料庫"><a href="#連接資料庫" class="headerlink" title="連接資料庫"></a>連接資料庫</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/dbConnection.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">connectDB</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> mongoose.<span class="title function_">connect</span>(process.<span class="property">env</span>.<span class="property">DATABASE_URI</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = connectDB</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Middleware</title>
    <url>/2023/06/08/Backend-Middleware/</url>
    <content><![CDATA[<p>Middleware : 中介軟體，只發出 HTTP 請求後，至應用程式收到回應前，處理特定用途的程式。</p>
<span id="more"></span>

<h1 id="Middleware"><a href="#Middleware" class="headerlink" title="Middleware"></a>Middleware</h1><p>安裝 date-fns 與 uuid :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i date-fns uuid</span><br></pre></td></tr></table></figure>

<h2 id="logger-js"><a href="#logger-js" class="headerlink" title="logger.js"></a>logger.js</h2><p>創建 logger.js，紀錄請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/logger.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; format &#125; = <span class="built_in">require</span>(<span class="string">&quot;date-fns&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">v4</span>: uuid &#125; = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fsPromises = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="property">promises</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logEvent</span> = <span class="keyword">async</span> (<span class="params">message, logFileName</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> dateTime = <span class="title function_">format</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&quot;yyyyMMdd\tHH:mm:ss&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> logItem = <span class="string">`<span class="subst">$&#123;dateTime&#125;</span>\t<span class="subst">$&#123;uuid()&#125;</span>\t<span class="subst">$&#123;message&#125;</span>\n`</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 若 logs 檔案不存在，則創建 logs</span></span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))) &#123;</span><br><span class="line">      <span class="keyword">await</span> fsPromises.<span class="title function_">mkdir</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> fsPromises.<span class="title function_">appendFile</span>(</span><br><span class="line">      path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>, logFileName),</span><br><span class="line">      logItem</span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logger</span> = (<span class="params">req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成請求紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(<span class="string">`<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>, <span class="string">&quot;reqLog.log&quot;</span>)</span><br><span class="line">  <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  logEvent,</span><br><span class="line">  logger,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="errorHandler-js"><a href="#errorHandler-js" class="headerlink" title="errorHandler.js"></a>errorHandler.js</h2><p>創建 errorHandler.js，處理錯誤並記錄。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/errorHandler.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./logger&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">errorHandler</span> = (<span class="params">err, req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成錯誤紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.name&#125;</span>: <span class="subst">$&#123;err.message&#125;</span>\t<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;errLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> status = res.<span class="property">statusCode</span> ? res.<span class="property">statusCode</span> : <span class="number">500</span> <span class="comment">// server error</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">status</span>(status)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: err.<span class="property">message</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = errorHandler</span><br></pre></td></tr></table></figure>

<h2 id="cookie-parser"><a href="#cookie-parser" class="headerlink" title="cookie-parser"></a>cookie-parser</h2><p>安裝 cookie-parser，用於解析 cookie :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cookie-parser</span><br></pre></td></tr></table></figure>

<h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><p>安裝 cors，用於解決跨域問題 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cors</span><br></pre></td></tr></table></figure>

<p>創建 allowedOrigins.js，設定允許的 url。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/allowedOrigins.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = [</span><br><span class="line">  <span class="comment">// 部署前須修改</span></span><br><span class="line">  <span class="string">&quot;http://localhost:5173&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = allowedOrigins</span><br></pre></td></tr></table></figure>

<p>創建 corsOptions.js，設定 cors 的 options。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/corsOptions.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = <span class="built_in">require</span>(<span class="string">&quot;./allowedOrigins&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> corsOptions = &#123;</span><br><span class="line">  <span class="attr">origin</span>: <span class="function">(<span class="params">origin, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">indexOf</span>(origin) !== -<span class="number">1</span> || !origin) &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Not allowed by CORS&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">credentials</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">optionsSuccessStatus</span>: <span class="number">200</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = corsOptions</span><br></pre></td></tr></table></figure>

<h2 id="啟用-Middleware"><a href="#啟用-Middleware" class="headerlink" title="啟用 Middleware"></a>啟用 Middleware</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 errorHandler</span></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
</search>
