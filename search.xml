<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Backend - API 的靜態頁面</title>
    <url>/Backend-API%E7%9A%84%E9%9D%9C%E6%85%8B%E9%A0%81%E9%9D%A2/</url>
    <content><![CDATA[<p>當訪問 API url 時所展示的頁面，用於測試 API 是否可以正常訪問。</p>
<span id="more"></span>

<h1 id="API-的靜態頁面"><a href="#API-的靜態頁面" class="headerlink" title="API 的靜態頁面"></a>API 的靜態頁面</h1><p>安裝 Express :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure>

<h2 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h2><p>在 server.js 中提供靜態頁面，並設置 root 路由。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="root-js"><a href="#root-js" class="headerlink" title="root.js"></a>root.js</h2><p>root 路由中響應 index.html 檔案。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/root.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 響應 index.html 檔案</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;^/$|/index(.html)?&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;index.html&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>訪問 API 展示 index.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>techNotes API<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 因為 server.js 中有提供 &#x27;/public&#x27; 靜態檔案，所以可以直接找到 style.css --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="404-html"><a href="#404-html" class="headerlink" title="404.html"></a>404.html</h2><p>訪問未知 url 展示 404.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/404.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sorry!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The resource you have requested does not exist.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Database</title>
    <url>/Backend-Database/</url>
    <content><![CDATA[<p>建立 MongoDB Atlas Database ，使用 MongoDB，設定 Models 管理、儲存資料。</p>
<span id="more"></span>

<h1 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h1><p>安裝 dotenv，用於管理環境變數 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i dotenv</span><br></pre></td></tr></table></figure>

<p>在 server.js 中引入 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="comment">// As early as possible in your application.</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br></pre></td></tr></table></figure>

<p>創建 .env 檔，設定環境變數。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NODE_ENV = development</span><br><span class="line">DATABASE_URI = mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</span><br></pre></td></tr></table></figure>

<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="建立資料庫"><a href="#建立資料庫" class="headerlink" title="建立資料庫"></a>建立資料庫</h2><p><a href="https://www.mongodb.com/cloud/atlas/lp/try4?utm_source=google&utm_campaign=search_gs_pl_evergreen_atlas_core-high-int_prosp-brand_gic-null_apac-tw_ps-all_desktop_eng_lead&utm_term=mongodb%20atlas&utm_medium=cpc_paid_search&utm_ad=e&utm_ad_campaign_id=19638446771&adgroup=144342468903&cq_cmp=19638446771&gad=1&gclid=CjwKCAjw-IWkBhBTEiwA2exyO-W4mhTJ8AVnaRVqQF-w5iIbrhSRQL-VSsydB5Dwwbq0JPe39YzEFxoC4kcQAvD_BwE/" title="MongoDB Atlas">MongoDB Atlas</a> 建立 Database，取得 connection string: <code>mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</code></p>
<h2 id="建立-Models"><a href="#建立-Models" class="headerlink" title="建立 Models"></a>建立 Models</h2><p>安裝 mongoose :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i mongoose</span><br></pre></td></tr></table></figure>

<p>創建 User Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// models/User.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">roles</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">String</span>],</span><br><span class="line">    <span class="attr">default</span>: [<span class="string">&quot;Employee&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">active</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;User&quot;</span>, userSchema)</span><br></pre></td></tr></table></figure>

<p>安裝 @typegoose&#x2F;auto-increment，用於自增項 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @typegoose/auto-increment</span><br></pre></td></tr></table></figure>

<p>創建 Note Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AutoIncrementID</span> = <span class="built_in">require</span>(<span class="string">&quot;@typegoose/auto-increment&quot;</span>).<span class="property">AutoIncrementID</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> noteSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">user</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: mongoose.<span class="property">Schema</span>.<span class="property">Types</span>.<span class="property">ObjectId</span>,</span><br><span class="line">      <span class="attr">ref</span>: <span class="string">&quot;User&quot;</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">text</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">completed</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">ticket</span>: <span class="title class_">Number</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">timestamps</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">noteSchema.<span class="title function_">plugin</span>(<span class="title class_">AutoIncrementID</span>, &#123; <span class="attr">field</span>: <span class="string">&quot;ticket&quot;</span>, <span class="attr">startAt</span>: <span class="number">500</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;Note&quot;</span>, noteSchema)</span><br></pre></td></tr></table></figure>

<h3 id="連接資料庫"><a href="#連接資料庫" class="headerlink" title="連接資料庫"></a>連接資料庫</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/dbConnection.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">connectDB</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> mongoose.<span class="title function_">connect</span>(process.<span class="property">env</span>.<span class="property">DATABASE_URI</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = connectDB</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Middleware</title>
    <url>/Backend-Middleware/</url>
    <content><![CDATA[<p>Middleware : 中介軟體，在發出 HTTP 請求後，至應用程式收到回應前，處理特定用途的程式。</p>
<span id="more"></span>

<h1 id="Middleware"><a href="#Middleware" class="headerlink" title="Middleware"></a>Middleware</h1><p>安裝 date-fns 與 uuid :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i date-fns uuid</span><br></pre></td></tr></table></figure>

<h2 id="logger-js"><a href="#logger-js" class="headerlink" title="logger.js"></a>logger.js</h2><p>創建 logger.js，紀錄請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/logger.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; format &#125; = <span class="built_in">require</span>(<span class="string">&quot;date-fns&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">v4</span>: uuid &#125; = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fsPromises = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="property">promises</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logEvent</span> = <span class="keyword">async</span> (<span class="params">message, logFileName</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> dateTime = <span class="title function_">format</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&quot;yyyyMMdd\tHH:mm:ss&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> logItem = <span class="string">`<span class="subst">$&#123;dateTime&#125;</span>\t<span class="subst">$&#123;uuid()&#125;</span>\t<span class="subst">$&#123;message&#125;</span>\n`</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 若 logs 檔案不存在，則創建 logs</span></span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))) &#123;</span><br><span class="line">      <span class="keyword">await</span> fsPromises.<span class="title function_">mkdir</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> fsPromises.<span class="title function_">appendFile</span>(</span><br><span class="line">      path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>, logFileName),</span><br><span class="line">      logItem</span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logger</span> = (<span class="params">req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成請求紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(<span class="string">`<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>, <span class="string">&quot;reqLog.log&quot;</span>)</span><br><span class="line">  <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  logEvent,</span><br><span class="line">  logger,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="errorHandler-js"><a href="#errorHandler-js" class="headerlink" title="errorHandler.js"></a>errorHandler.js</h2><p>創建 errorHandler.js，處理錯誤並記錄。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/errorHandler.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./logger&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">errorHandler</span> = (<span class="params">err, req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成錯誤紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.name&#125;</span>: <span class="subst">$&#123;err.message&#125;</span>\t<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;errLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> status = res.<span class="property">statusCode</span> ? res.<span class="property">statusCode</span> : <span class="number">500</span> <span class="comment">// server error</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">status</span>(status)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: err.<span class="property">message</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = errorHandler</span><br></pre></td></tr></table></figure>

<h2 id="cookie-parser"><a href="#cookie-parser" class="headerlink" title="cookie-parser"></a>cookie-parser</h2><p>安裝 cookie-parser，用於解析 cookie :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cookie-parser</span><br></pre></td></tr></table></figure>

<h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><p>安裝 cors，用於解決跨域問題 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cors</span><br></pre></td></tr></table></figure>

<p>創建 allowedOrigins.js，設定允許的 url。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/allowedOrigins.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = [</span><br><span class="line">  <span class="comment">// 部署前須修改</span></span><br><span class="line">  <span class="string">&quot;http://localhost:5173&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = allowedOrigins</span><br></pre></td></tr></table></figure>

<p>創建 corsOptions.js，設定 cors 的 options。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/corsOptions.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = <span class="built_in">require</span>(<span class="string">&quot;./allowedOrigins&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> corsOptions = &#123;</span><br><span class="line">  <span class="attr">origin</span>: <span class="function">(<span class="params">origin, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">indexOf</span>(origin) !== -<span class="number">1</span> || !origin) &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Not allowed by CORS&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">credentials</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">optionsSuccessStatus</span>: <span class="number">200</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = corsOptions</span><br></pre></td></tr></table></figure>

<h2 id="啟用-Middleware"><a href="#啟用-Middleware" class="headerlink" title="啟用 Middleware"></a>啟用 Middleware</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 errorHandler</span></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - API Controllers &amp; Routers</title>
    <url>/Backend-API-Controllers-Routers/</url>
    <content><![CDATA[<p>設置 API Controllers 及 Routers 處理前端請求，並回應響應數據。</p>
<span id="more"></span>

<h1 id="Controllers"><a href="#Controllers" class="headerlink" title="Controllers"></a>Controllers</h1><p>安裝 bcrypt，用於 hash 密碼。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i bcrypt</span><br></pre></td></tr></table></figure>

<h2 id="usersController-js"><a href="#usersController-js" class="headerlink" title="usersController.js"></a>usersController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/usersController.js</span></span><br><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all users</span></span><br><span class="line"><span class="comment">// @route GET /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllUsers</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> users = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">select</span>(<span class="string">&quot;-password&quot;</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!users) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No users found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">json</span>(users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new user</span></span><br><span class="line"><span class="comment">// @route POST /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, roles &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!username || !password) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// hash password</span></span><br><span class="line">  <span class="keyword">const</span> hashedPwd = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>) <span class="comment">// salt rounds</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷是否提供 roles</span></span><br><span class="line">  <span class="keyword">const</span> userObject =</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) || !roles.<span class="property">length</span></span><br><span class="line">      ? &#123; username, <span class="attr">password</span>: hashedPwd &#125;</span><br><span class="line">      : &#123; username, <span class="attr">password</span>: hashedPwd, roles &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">create</span>(userObject)</span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`New user <span class="subst">$&#123;username&#125;</span> created`</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid user data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update user</span></span><br><span class="line"><span class="comment">// @route PATCH /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, username, password, roles, active &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    !id ||</span><br><span class="line">    !username ||</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) ||</span><br><span class="line">    !roles.<span class="property">length</span> ||</span><br><span class="line">    <span class="keyword">typeof</span> active !== <span class="string">&quot;boolean&quot;</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">      .<span class="title function_">status</span>(<span class="number">400</span>)</span><br><span class="line">      .<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields except password are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  user.<span class="property">username</span> = username</span><br><span class="line">  user.<span class="property">roles</span> = roles</span><br><span class="line">  user.<span class="property">active</span> = active</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (password) &#123;</span><br><span class="line">    <span class="comment">// hash password</span></span><br><span class="line">    user.<span class="property">password</span> = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedUser = <span class="keyword">await</span> user.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`<span class="subst">$&#123;updatedUser.username&#125;</span> updated`</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Delete user</span></span><br><span class="line"><span class="comment">// @route DELETE /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User ID Required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">user</span>: id &#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User has assigned notes&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 確認 user 存在</span></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> user.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Username <span class="subst">$&#123;result.username&#125;</span> with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllUsers,</span><br><span class="line">  createNewUser,</span><br><span class="line">  updateUser,</span><br><span class="line">  deleteUser,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="notesController-js"><a href="#notesController-js" class="headerlink" title="notesController.js"></a>notesController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/notesController.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all notes</span></span><br><span class="line"><span class="comment">// @route GET /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllNotes</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> notes = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!notes.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No notes found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> notesWithUser = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(</span><br><span class="line">    notes.<span class="title function_">map</span>(<span class="keyword">async</span> (note) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(note.<span class="property">user</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">      <span class="keyword">return</span> &#123; ...note, <span class="attr">username</span>: user.<span class="property">username</span> &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(notesWithUser)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new note</span></span><br><span class="line"><span class="comment">// @route POST /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user, title, text &#125; = req.<span class="property">body</span></span><br><span class="line">  <span class="keyword">if</span> (!user || !title || !text) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">create</span>(&#123; user, title, text &#125;)</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;New note created&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid note data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update note</span></span><br><span class="line"><span class="comment">// @route PATCH /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, user, title, text, completed &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id || !user || !title || !text || <span class="keyword">typeof</span> completed !== <span class="string">&quot;boolean&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  note.<span class="property">user</span> = user</span><br><span class="line">  note.<span class="property">title</span> = title</span><br><span class="line">  note.<span class="property">text</span> = text</span><br><span class="line">  note.<span class="property">completed</span> = completed</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedNote = <span class="keyword">await</span> note.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(<span class="string">`&#x27;<span class="subst">$&#123;updatedNote.title&#125;</span>&#x27; updated`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @desc Delete note</span></span><br><span class="line"><span class="comment">// @route DELETE /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note ID required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> note.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Note &#x27;<span class="subst">$&#123;result.title&#125;</span>&#x27; with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllNotes,</span><br><span class="line">  createNewNote,</span><br><span class="line">  updateNote,</span><br><span class="line">  deleteNote,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Routers"><a href="#Routers" class="headerlink" title="Routers"></a>Routers</h1><h2 id="userRoutes-js"><a href="#userRoutes-js" class="headerlink" title="userRoutes.js"></a>userRoutes.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/userRoutes.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> usersController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/usersController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(usersController.<span class="property">getAllUsers</span>)</span><br><span class="line">  .<span class="title function_">post</span>(usersController.<span class="property">createNewUser</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(usersController.<span class="property">updateUser</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(usersController.<span class="property">deleteUser</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="noteRouter-js"><a href="#noteRouter-js" class="headerlink" title="noteRouter.js"></a>noteRouter.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/noteRouters.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> notesController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/notesController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(notesController.<span class="property">getAllNotes</span>)</span><br><span class="line">  .<span class="title function_">post</span>(notesController.<span class="property">createNewNote</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(notesController.<span class="property">updateNote</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(notesController.<span class="property">deleteNote</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h1 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h1><p>安裝 express-async-errors，用於處理異步錯誤，不需編寫 <code>try/catch</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express-async-errors</span><br></pre></td></tr></table></figure>

<p>啟用 Routers。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;express-async-errors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Routers</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/users&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/userRoutes&quot;</span>))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/notes&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/noteRoutes&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS - Grid</title>
    <url>/CSS-Grid/</url>
    <content><![CDATA[<p>不同於 Flex 一維「由上到下」的排版方式，Grid 為二維的 CSS 格線系統，可以定義容器區塊中的 row 及 column，並將元素依照格線規則設置任意的排列布局。</p>
<span id="more"></span>

<h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>定義結構 :</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;A&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;B&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;C&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;D&quot;</span>&gt;</span>D<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>設置固定的 <code>grid-template-rows</code> 與 <code>grid-template-columns</code>，在限制的區域範圍內布局。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span> auto;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-template-areas</span>:</span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B2 B2 B2 B2&quot;</span>;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.A</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B1;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d4d2d5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.B</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B2;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfafa6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.C</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B3;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#aa968a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.D</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B4;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6e6a6f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<iframe src="https://codepen.io/fan94105/embed/bGQdGgg?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h2 id="進階用法"><a href="#進階用法" class="headerlink" title="進階用法"></a>進階用法</h2><p>設置 <code>grid-auto-rows</code> 與 <code>grid-auto-columns</code>，當布局超出範圍時則自動生成格線。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">2px</span> solid <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-auto-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.A</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d4d2d5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.B</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">2</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfafa6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.C</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">2</span>/<span class="number">4</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">3</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#aa968a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.D</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">4</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">3</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6e6a6f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<iframe src="https://codepen.io/fan94105/embed/gOQpbVd?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h1 id="CSS-Grid-屬性"><a href="#CSS-Grid-屬性" class="headerlink" title="CSS Grid 屬性"></a>CSS Grid 屬性</h1><p>內容參考 <a href="https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-gap">A Complete Guide to CSS Grid</a>。</p>
<h2 id="Grid-Container"><a href="#Grid-Container" class="headerlink" title="Grid Container"></a>Grid Container</h2><h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><p>設定 grid 容器。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid | inline-grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-template-rows-amp-grid-template-columns"><a href="#grid-template-rows-amp-grid-template-columns" class="headerlink" title="grid-template-rows &amp; grid-template-columns"></a>grid-template-rows &amp; grid-template-columns</h3><p>設定 template 中 rows 與 columns 數量及大小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: ... ...;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: ... ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-template-area"><a href="#grid-template-area" class="headerlink" title="grid-template-area"></a>grid-template-area</h3><p>搭配 Grid Item 的 <code>grid-area</code> 名稱，定義 Grid Item 在 template 上的位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template</span>-area:</span><br><span class="line">    <span class="string">&quot;header header header&quot;</span></span><br><span class="line">    <span class="string">&quot;main main main&quot;</span></span><br><span class="line">    <span class="string">&quot;footer footer footer&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-a</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-b</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: main;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-c</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: footer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-auto-rows-amp-grid-auto-columns"><a href="#grid-auto-rows-amp-grid-auto-columns" class="headerlink" title="grid-auto-rows &amp; grid-auto-columns"></a>grid-auto-rows &amp; grid-auto-columns</h3><p>不明確指定 rows 與 columns 的數量及大小，而使用自動生成的 grid 網格。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-columns</span>: ...;</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-auto-flow"><a href="#grid-auto-flow" class="headerlink" title="grid-auto-flow"></a>grid-auto-flow</h3><p>設定 Grid Items 的排列方向。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: row | column | row dense | column dense;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>dense</code> : 使較小的項目先填入網格中。可能改變項目顯示順序，不利於 accessibility。</li>
</ul>
<h3 id="gap"><a href="#gap" class="headerlink" title="gap"></a>gap</h3><p>設定 Grid Items 之間的間隔。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">gap</span>: &lt;grid-row-gap&gt; &lt;grid-column-gap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-items"><a href="#justify-items" class="headerlink" title="justify-items"></a>justify-items</h3><p>設定 Grid Items 在網格中的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  justify-items: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>stretch</code> : 預設值，填滿網格。</li>
</ul>
<h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><p>設定 Grid Items 在網格中的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-items"><a href="#place-items" class="headerlink" title="place-items"></a>place-items</h3><p>同時設定 <code>align-items</code> 與 <code>justify-items</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  place-items: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>設定整體網格在 Grid Container 中的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: start | end | center | stretch | space-around | space-between</span><br><span class="line">    | space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>設定整體網格在 Grid Container 中的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: start | end | center | stretch | space-around | space-between |</span><br><span class="line">    space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-content"><a href="#place-content" class="headerlink" title="place-content"></a>place-content</h3><p>同時設定 <code>align-content</code> 與 <code>justify-content</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  place-<span class="attribute">content</span>: &lt;align-content&gt; &lt;justify-content&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Grid-Items"><a href="#Grid-Items" class="headerlink" title="Grid Items"></a>Grid Items</h2><h3 id="grid-row-amp-grid-column"><a href="#grid-row-amp-grid-column" class="headerlink" title="grid-row &amp; grid-column"></a>grid-row &amp; grid-column</h3><p>設定 row 與 column 的起始即結束位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;</span><br><span class="line">  <span class="attribute">grid-column</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>span</code> : 表示跨越幾個面。</li>
<li>可以以負數表示，<code>-1</code> 為最後一條線。</li>
<li>當沒有設定結束位置時，預設為跨越一個面。</li>
</ul>
<h3 id="grid-area"><a href="#grid-area" class="headerlink" title="grid-area"></a>grid-area</h3><p>設定 Grid Item 的名稱，也可以作為 <code>grid-row-start</code>+<code>grid-column-start</code>+<code>grid-row-end</code>+<code>grid-column-end</code> 的簡寫。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: &lt;name&gt; | &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-self"><a href="#justify-self" class="headerlink" title="justify-self"></a>justify-self</h3><p>設定 Grid Item 在網格內的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  justify-self: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>設定 Grid Item 在網格內的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-self"><a href="#place-self" class="headerlink" title="place-self"></a>place-self</h3><p>同時設定 <code>align-self</code> 與 <code>justify-self</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  place-self: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Special-Units-amp-Function"><a href="#Special-Units-amp-Function" class="headerlink" title="Special Units &amp; Function"></a>Special Units &amp; Function</h1><h2 id="fr-units"><a href="#fr-units" class="headerlink" title="fr units"></a>fr units</h2><p>代表剩餘空間的一部分。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">3</span>fr;</span><br></pre></td></tr></table></figure>

<p>上例表示設定兩欄，將空間分為 4 等份，第一欄分配一等份，因此寬度為總網格寬的 1&#x2F;4，第二欄分配三等份，寬度為總網格寬的 3&#x2F;4。</p>
<h2 id="min-content-amp-max-content"><a href="#min-content-amp-max-content" class="headerlink" title="min-content &amp; max-content"></a>min-content &amp; max-content</h2><p>網格大小依內容空間改變。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: max-content min-content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>min-content</code> : 依內容中最長單字的尺寸為整體尺寸。</li>
<li><code>max-content</code> : 依內容的最大尺寸為整體尺寸。</li>
</ul>
<h2 id="fit-content"><a href="#fit-content" class="headerlink" title="fit-content()"></a>fit-content()</h2><p>設定尺寸為 <code>min-content</code> 到給定參數之間的大小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">fit-content</span>(<span class="number">150px</span>);</span><br></pre></td></tr></table></figure>

<p>上例 <code>fit-content(150px)</code>，表示最終渲染尺寸為 <code>min-content ~ 150px</code> 之間。<br>但若 <code>fit-content()</code> 中的值比 <code>max-content</code> 大，則最終渲染尺寸為 <code>min-content ~ max-content</code> 之間。</p>
<h2 id="minmax"><a href="#minmax" class="headerlink" title="minmax()"></a>minmax()</h2><p>設定尺寸的最小值與最大值。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">minmax</span>(min, max);</span><br></pre></td></tr></table></figure>

<h2 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h2><p>設定重複的尺寸值。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等同於 */</span></span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">5</span>, <span class="number">1</span>fr);</span><br><span class="line"></span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(auto-fit, <span class="built_in">minmax</span>(<span class="number">250px</span>, <span class="number">1</span>fr));</span><br></pre></td></tr></table></figure>

<ul>
<li><code>auto-fill</code> : 自動填滿軌道。</li>
<li><code>auto-fit</code> : 延展每一個 Grid Item，填滿軌道。</li>
</ul>
<p><code>auto-fill</code> 與 <code>auto-fit</code> 比較 :  </p>
<iframe src="https://codepen.io/fan94105/embed/abQOyLO?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h1 id="Grid-Garden"><a href="#Grid-Garden" class="headerlink" title="Grid Garden"></a>Grid Garden</h1><p>用來學習 CSS Grid 的 <a href="https://cssgridgarden.com/#zh-tw">遊戲</a>。</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>grid</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React App</title>
    <url>/Frontend-React-App/</url>
    <content><![CDATA[<p>後端 API 建立完成後，即開始建構前端頁面，使用 React Router 搭建網頁的基本路由，並完成使用者登入後所展示的頁面。</p>
<span id="more"></span>

<h1 id="React-Router"><a href="#React-Router" class="headerlink" title="React Router"></a>React Router</h1><p>安裝 react-router-dom。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i react-router-dom</span><br></pre></td></tr></table></figure>

<p>main.jsx 建立 Router 模板 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>App.jsx 建構網站路由 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>

<h1 id="Dash-頁面"><a href="#Dash-頁面" class="headerlink" title="Dash 頁面"></a>Dash 頁面</h1><p>安裝 <a href="https://fontawesome.com/v5/docs/web/use-with/react">Font Awesome</a> 的 React Component，在頁面中加入 icon。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @fortawesome/fontawesome-svg-core</span><br><span class="line">npm i @fortawesome/free-solid-svg-icons</span><br><span class="line">npm i @fortawesome/react-fontawesome</span><br></pre></td></tr></table></figure>

<p>使用者登入後展示的頁面 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashLayout.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashHeader</span> <span class="keyword">from</span> <span class="string">&quot;./DashHeader&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashFooter</span> <span class="keyword">from</span> <span class="string">&quot;./DashFooter&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashLayout</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-layout border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">DashHeader</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">DashFooter</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashLayout</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的 Header 組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashHeader.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashHeader</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;dash-header flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__title&quot;</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__nav&quot;</span>&gt;</span>&#123;/* nav buttons */&#125;<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashHeader</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的子組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Welcome.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Welcome</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">  <span class="keyword">const</span> today = <span class="keyword">new</span> <span class="title class_">Intl</span>.<span class="title class_">DateTimeFormat</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;full&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;).<span class="title function_">format</span>(date)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;welcome&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;today&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;link&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/notes&quot;</span>&gt;</span>View techNotes<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/users&quot;</span>&gt;</span>View User Settings<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Welcome</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的 Footer 組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashFooter.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faHouse &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashFooter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; pathname &#125; = <span class="title function_">useLocation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onGoHomeClicked</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">&quot;/dash&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> goHomeButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (pathname !== <span class="string">&quot;/dash&quot;</span>) &#123;</span><br><span class="line">    goHomeButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Home&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onGoHomeClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faHouse&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">className</span>=<span class="string">&quot;dash-footer flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;goHomeButton&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>Current User:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Status:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashFooter</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>React Router</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React Redux &amp; RTK Query</title>
    <url>/Frontend-React-Redux-RTK-Query/</url>
    <content><![CDATA[<p>使用 Redux 管理 App 中的數據，並藉由 RTK Query 向後端 API 發送請求獲取並快取數據。</p>
<span id="more"></span>

<p>安裝 React Redux 和 Redux Toolkit。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @reduxjs/toolkit react-redux</span><br></pre></td></tr></table></figure>

<h1 id="React-Redux-amp-RTK-Query"><a href="#React-Redux-amp-RTK-Query" class="headerlink" title="React Redux &amp; RTK Query"></a>React Redux &amp; RTK Query</h1><h2 id="apiSlice-js"><a href="#apiSlice-js" class="headerlink" title="apiSlice.js"></a>apiSlice.js</h2><p>建立 apiSlice.js ，集中管理向後端 API 發送請求的方法 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/api/apiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApi, fetchBaseQuery &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query/react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiSlice = <span class="title function_">createApi</span>(&#123;</span><br><span class="line">  <span class="attr">baseQuery</span>: <span class="title function_">fetchBaseQuery</span>(&#123; <span class="attr">baseUrl</span>: <span class="string">&quot;http://localhost:3500&quot;</span> &#125;),</span><br><span class="line">  <span class="attr">tagTypes</span>: [<span class="string">&quot;Note&quot;</span>, <span class="string">&quot;User&quot;</span>],</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;&#125;),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="store-js"><a href="#store-js" class="headerlink" title="store.js"></a>store.js</h2><p>建立 store 並定義 reducer :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/store.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setupListeners &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;./api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">configureStore</span>(&#123;</span><br><span class="line">  <span class="attr">reducer</span>: &#123;</span><br><span class="line">    [apiSlice.<span class="property">reducerPath</span>]: apiSlice.<span class="property">reducer</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">middleware</span>: <span class="function">(<span class="params">getDefaultMiddleware</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">getDefaultMiddleware</span>().<span class="title function_">concat</span>(apiSlice.<span class="property">middleware</span>),</span><br><span class="line">  <span class="attr">devTools</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 refetchOnFocus 與 refetchOnReconnect</span></span><br><span class="line"><span class="title function_">setupListeners</span>(store.<span class="property">dispatch</span>)</span><br></pre></td></tr></table></figure>

<p>將 store 提供給 App :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;./app/store&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;/* 向 App 提供 store */&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="usersApiSlice-js-amp-notesApiSlice-js"><a href="#usersApiSlice-js-amp-notesApiSlice-js" class="headerlink" title="usersApiSlice.js &amp; notesApiSlice.js"></a>usersApiSlice.js &amp; notesApiSlice.js</h2><p>usersApiSlice.js，處理與 user 相關的請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/usersApiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSelector, createEntityAdapter &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供數據標準化方法</span></span><br><span class="line"><span class="keyword">const</span> usersAdapter = <span class="title function_">createEntityAdapter</span>(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成空的 &#123;ids: [], entities: &#123;&#125;&#125; 物件</span></span><br><span class="line"><span class="keyword">const</span> initialState = usersAdapter.<span class="title function_">getInitialState</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> usersApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getUsers</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedUsers = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          user.<span class="property">id</span> = user.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> user</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> usersAdapter.<span class="title function_">setAll</span>(initialState, loadedUsers)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useGetUsersQuery &#125; = usersApiSlice</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成新的 selector，並回傳 query 結果物件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> selectUsersResult = usersApiSlice.<span class="property">endpoints</span>.<span class="property">getUsers</span>.<span class="title function_">select</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建 memoized selector</span></span><br><span class="line"><span class="keyword">const</span> selectUsersData = <span class="title function_">createSelector</span>(</span><br><span class="line">  selectUsersResult,</span><br><span class="line">  <span class="function">(<span class="params">usersResult</span>) =&gt;</span> usersResult.<span class="property">data</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 selector</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">selectAll</span>: selectAllUsers,</span><br><span class="line">  <span class="attr">selectById</span>: selectUserById,</span><br><span class="line">  <span class="attr">selectIds</span>: selectUserIds,</span><br><span class="line">&#125; = usersAdapter.<span class="title function_">getSelectors</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> <span class="title function_">selectUsersData</span>(state) ?? initialState)</span><br></pre></td></tr></table></figure>

<p>notesApiSlice.js，處理與 note 相關的請求。程式碼與 usersApiSlice.js 相同，將 user 改為 note 即可。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/notesApiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSelector, createEntityAdapter &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供數據標準化方法</span></span><br><span class="line"><span class="keyword">const</span> notesAdapter = <span class="title function_">createEntityAdapter</span>(&#123;</span><br><span class="line">  <span class="comment">// 數據排序</span></span><br><span class="line">  <span class="attr">sortComparer</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span></span><br><span class="line">    a.<span class="property">completed</span> === b.<span class="property">completed</span> ? <span class="number">0</span> : a.<span class="property">completed</span> ? <span class="number">1</span> : -<span class="number">1</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成空的 &#123;ids: [], entities: &#123;&#125;&#125; 物件</span></span><br><span class="line"><span class="keyword">const</span> initialState = notesAdapter.<span class="title function_">getInitialState</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notesApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getNotes</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedNotes = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">note</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          note.<span class="property">id</span> = note.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> note</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> notesAdapter.<span class="title function_">setAll</span>(initialState, loadedNotes)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useGetNotesQuery &#125; = notesApiSlice</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成新的 selector，並回傳 query 結果物件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> selectNotesResult = notesApiSlice.<span class="property">endpoints</span>.<span class="property">getNotes</span>.<span class="title function_">select</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建 memoized selector</span></span><br><span class="line"><span class="keyword">const</span> selectNotesData = <span class="title function_">createSelector</span>(</span><br><span class="line">  selectNotesResult,</span><br><span class="line">  <span class="function">(<span class="params">notesResult</span>) =&gt;</span> notesResult.<span class="property">data</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 selector</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">selectAll</span>: selectAllNotes,</span><br><span class="line">  <span class="attr">selectById</span>: selectNoteById,</span><br><span class="line">  <span class="attr">selectIds</span>: selectNoteIds,</span><br><span class="line">&#125; = notesAdapter.<span class="title function_">getSelectors</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> <span class="title function_">selectNotesData</span>(state) ?? initialState)</span><br></pre></td></tr></table></figure>

<h3 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h3><ol>
<li>調用 <code>createEntityAdapter</code> 為數據提供標準化方法。</li>
<li>由 <code>usersAdapter.getInitialState()</code> 生成空的 <code>&#123;ids: [], entities:&#123;&#125;&#125;</code> 物件。</li>
<li>由 <code>apiSlice.injectEndpoints()</code> 創建 <code>usersApiSlice</code> 並設定 endpoints。<ul>
<li><code>transformResponse</code> 中設定 <code>usersAdapter</code> 數據。</li>
</ul>
</li>
<li>為了創建 memoized selector，以 <code>usersApiSlice.endpoints.getNotes.select()</code> 生成新的 selector，並回傳 query 結果物件。</li>
<li><code>createSelector</code> 創建 memoized selector。</li>
<li><code>usersAdapter.getSelector()</code> 取得預設的 selector。</li>
</ol>
<h1 id="使用-RTK-Query"><a href="#使用-RTK-Query" class="headerlink" title="使用 RTK Query"></a>使用 RTK Query</h1><p>安裝 react-spinners :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i react-spinners</span><br></pre></td></tr></table></figure>

<h2 id="展示-Users"><a href="#展示-Users" class="headerlink" title="展示 Users"></a>展示 Users</h2><h3 id="UsersList-jsx"><a href="#UsersList-jsx" class="headerlink" title="UsersList.jsx"></a>UsersList.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/UsersList.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">User</span> <span class="keyword">from</span> <span class="string">&quot;./User&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">UsersList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="attr">data</span>: users,</span><br><span class="line">    isLoading,</span><br><span class="line">    isSuccess,</span><br><span class="line">    isError,</span><br><span class="line">    error,</span><br><span class="line">  &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">pollingInterval</span>: <span class="number">60000</span>, <span class="comment">// 輪詢間隔(ms)</span></span><br><span class="line">    <span class="attr">refetchOnFocus</span>: <span class="literal">true</span>, <span class="comment">// 是否在獲取焦點時重新加載數據</span></span><br><span class="line">    <span class="attr">refetchOnMountOrArgChange</span>: <span class="literal">true</span>, <span class="comment">// 是否每次都重新加載數據，false 正常使用快取</span></span><br><span class="line">    <span class="attr">refetchOnReconnect</span>: <span class="literal">true</span>, <span class="comment">// 是否在重新連接時重新加載數據</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>&#123;error?.data.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ids &#125; = users</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tableContent = ids?.<span class="property">length</span></span><br><span class="line">      ? ids.<span class="title function_">map</span>(<span class="function">(<span class="params">userId</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">User</span> <span class="attr">key</span>=<span class="string">&#123;userId&#125;</span> <span class="attr">userId</span>=<span class="string">&#123;userId&#125;</span> /&gt;</span></span>)</span><br><span class="line">      : <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">className</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">thead</span> <span class="attr">className</span>=<span class="string">&quot;table__thead&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Username</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Roles</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Edit</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>&#123;tableContent&#125;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">UsersList</span></span><br></pre></td></tr></table></figure>

<h3 id="User-jsx"><a href="#User-jsx" class="headerlink" title="User.jsx :"></a>User.jsx :</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/User.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">User</span> = (<span class="params">&#123; userId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">user</span>: data?.<span class="property">entities</span>[userId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/users/<span class="subst">$&#123;userId&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> userRolesString = user.<span class="property">roles</span>.<span class="title function_">toString</span>().<span class="title function_">replaceAll</span>(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;, &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> cellStatus = user.<span class="property">active</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;table__cell--inactive&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;user.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;userRolesString&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">User</span></span><br></pre></td></tr></table></figure>

<h2 id="展示-Notes"><a href="#展示-Notes" class="headerlink" title="展示 Notes"></a>展示 Notes</h2><h3 id="NotesList-jsx"><a href="#NotesList-jsx" class="headerlink" title="NotesList.jsx"></a>NotesList.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NotesList.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Note</span> <span class="keyword">from</span> <span class="string">&quot;./Note&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NotesList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="attr">data</span>: notes,</span><br><span class="line">    isLoading,</span><br><span class="line">    isSuccess,</span><br><span class="line">    isError,</span><br><span class="line">    error,</span><br><span class="line">  &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">pollingInterval</span>: <span class="number">15000</span>, <span class="comment">// 輪詢間隔(ms)</span></span><br><span class="line">    <span class="attr">refetchOnFocus</span>: <span class="literal">true</span>, <span class="comment">// 是否在獲取焦點時重新加載數據</span></span><br><span class="line">    <span class="attr">refetchOnMountOrArgChange</span>: <span class="literal">true</span>, <span class="comment">// 是否每次都重新加載數據，false 正常使用快取</span></span><br><span class="line">    <span class="attr">refetchOnReconnect</span>: <span class="literal">true</span>, <span class="comment">// 是否在重新連接時重新加載數據</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>&#123;error?.data.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ids &#125; = notes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tableContent = ids?.<span class="property">length</span></span><br><span class="line">      ? ids.<span class="title function_">map</span>(<span class="function">(<span class="params">noteId</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Note</span> <span class="attr">key</span>=<span class="string">&#123;noteId&#125;</span> <span class="attr">noteId</span>=<span class="string">&#123;noteId&#125;</span> /&gt;</span></span>)</span><br><span class="line">      : <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">className</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">thead</span> <span class="attr">className</span>=<span class="string">&quot;table__thead&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Status</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Created</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Updated</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Title</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Owner</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Edit</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>&#123;tableContent&#125;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NotesList</span></span><br></pre></td></tr></table></figure>

<h3 id="Note-jsx"><a href="#Note-jsx" class="headerlink" title="Note.jsx :"></a>Note.jsx :</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/Note.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Note</span> = (<span class="params">&#123; noteId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[noteId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/notes/<span class="subst">$&#123;noteId&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell note__status&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;note.completed ? (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--completed&quot;</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ) : (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--open&quot;</span>&gt;</span>Open<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.title&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Note</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Authentication with JWT</title>
    <url>/Backend-Authentication-with-JWT/</url>
    <content><![CDATA[<p>建立 auth 路由，登入、刷新與登出的 API，並使用 JWT 設定 access token 與 refresh token，當用戶登入時，取得 access token 以確認身分，當 access token 失效，使用 cookie 中的 refresh token 以取得新的 access token，以保持登入狀態。</p>
<span id="more"></span>

<h1 id="Rate-Limit"><a href="#Rate-Limit" class="headerlink" title="Rate Limit"></a>Rate Limit</h1><p>安裝 express-rate-limit，限制請求登入的次數 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express-rate-limit</span><br></pre></td></tr></table></figure>

<h2 id="loginLimiter-js"><a href="#loginLimiter-js" class="headerlink" title="loginLimiter.js"></a>loginLimiter.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/loginLimiter.js</span></span><br><span class="line"><span class="keyword">const</span> rateLimit = <span class="built_in">require</span>(<span class="string">&quot;express-rate-limit&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./logger&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> loginLimiter = <span class="title function_">rateLimit</span>(&#123;</span><br><span class="line">  <span class="attr">windowMs</span>: <span class="number">60</span> * <span class="number">1000</span>, <span class="comment">// 請求時間範圍</span></span><br><span class="line">  <span class="attr">max</span>: <span class="number">5</span>, <span class="comment">// 指定時間範圍內的請求數量</span></span><br><span class="line">  <span class="attr">message</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>:</span><br><span class="line">      <span class="string">&quot;Too many login attempts from this IP, please try again after a 60 second pause&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">handler</span>: <span class="function">(<span class="params">req, res, next, options</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">logEvent</span>(</span><br><span class="line">      <span class="string">`Too Many Request: <span class="subst">$&#123;options.message.message&#125;</span>\t<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>,</span><br><span class="line">      <span class="string">&quot;errLog.log&quot;</span></span><br><span class="line">    )</span><br><span class="line">    res.<span class="title function_">status</span>(options.<span class="property">statusCode</span>).<span class="title function_">send</span>(options.<span class="property">message</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">standardHeaders</span>: <span class="literal">true</span>, <span class="comment">// 在 headers 的 RateLimit-* 中包含 rate limit 資訊</span></span><br><span class="line">  <span class="attr">legacyHeaders</span>: <span class="literal">false</span>, <span class="comment">// 禁用 X-RateLimit-* headers</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = loginLimiter</span><br></pre></td></tr></table></figure>

<h1 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h1><p>安裝 jsonwebtoken :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i jsonwebtoken</span><br></pre></td></tr></table></figure>

<p>藉由 Node 內建的 crypto 模組，生成 <code>ACCESS_TOKEN_SECRET</code> 與 <code>REFRESH_TOKEN_SECRET</code> :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node</span><br><span class="line">require(&#x27;crypto&#x27;).randomBytes(64).toString(&#x27;hex&#x27;)</span><br></pre></td></tr></table></figure>

<h2 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ACCESS_TOKEN_SECRET=951fadcde6a0069229b51c15638ab7404a97ce65f3b4d2453dcee45aeffa329337937e4fac62759ab0671f9e321960ac72ae891528b92a3badb366cea4742dd5</span><br><span class="line">REFRESH_TOKEN_SECRET=4a950dcda36c1f2b52d5bdc481f752695f0d740ca70112b9f741b454ebb1f00bd56a158650ab85744146c72b2181c7bf41f5485bc10b8e90f493339618504abf</span><br></pre></td></tr></table></figure>

<h2 id="authController-js"><a href="#authController-js" class="headerlink" title="authController.js"></a>authController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/authController.js</span></span><br><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Login</span></span><br><span class="line"><span class="comment">// @route POST /auth</span></span><br><span class="line"><span class="comment">// @access Public</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!username || !password) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> foundUser = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;).<span class="title function_">exec</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!foundUser || !foundUser.<span class="property">active</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> match = <span class="keyword">await</span> bcrypt.<span class="title function_">compare</span>(password, foundUser.<span class="property">password</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!match) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> accessToken = jwt.<span class="title function_">sign</span>(</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="title class_">UserInfo</span>: &#123;</span><br><span class="line">        <span class="attr">username</span>: foundUser.<span class="property">username</span>,</span><br><span class="line">        <span class="attr">roles</span>: foundUser.<span class="property">roles</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    process.<span class="property">env</span>.<span class="property">ACCESS_TOKEN_SECRET</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">expiresIn</span>: <span class="string">&quot;15m&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">const</span> refreshToken = jwt.<span class="title function_">sign</span>(</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">username</span>: foundUser.<span class="property">username</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    process.<span class="property">env</span>.<span class="property">REFRESH_TOKEN_SECRET</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">expiresIn</span>: <span class="string">&quot;7d&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// create secure cookie with refresh token</span></span><br><span class="line">  res.<span class="title function_">cookie</span>(<span class="string">&quot;jwt&quot;</span>, refreshToken, &#123;</span><br><span class="line">    <span class="attr">httpOnly</span>: <span class="literal">true</span>, <span class="comment">// 是否只能在 HTTP 請求訪問 cookie，不能透過 JS 訪問</span></span><br><span class="line">    <span class="attr">secure</span>: <span class="literal">true</span>, <span class="comment">// 是否只在 HTTPS 中傳送 cookie</span></span><br><span class="line">    <span class="attr">sameSite</span>: <span class="string">&quot;None&quot;</span>, <span class="comment">// 是否在跨站請求中發送 cookie</span></span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>, <span class="comment">// cookie 的有效時間</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; accessToken &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Refresh</span></span><br><span class="line"><span class="comment">// @route GET /auth/refresh</span></span><br><span class="line"><span class="comment">// @access Public</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">refresh</span> = (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> cookies = req.<span class="property">cookies</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!cookies?.<span class="property">jwt</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> refreshToken = cookies.<span class="property">jwt</span></span><br><span class="line"></span><br><span class="line">  jwt.<span class="title function_">verify</span>(</span><br><span class="line">    refreshToken,</span><br><span class="line">    process.<span class="property">env</span>.<span class="property">REFRESH_TOKEN_SECRET</span>,</span><br><span class="line">    <span class="keyword">async</span> (err, decoded) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Forbidden&quot;</span> &#125;)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> foundUser = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123;</span><br><span class="line">        <span class="attr">username</span>: decoded.<span class="property">username</span>,</span><br><span class="line">      &#125;).<span class="title function_">exec</span>()</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!foundUser) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> accessToken = jwt.<span class="title function_">sign</span>(</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="title class_">UserInfo</span>: &#123;</span><br><span class="line">            <span class="attr">username</span>: foundUser.<span class="property">username</span>,</span><br><span class="line">            <span class="attr">roles</span>: foundUser.<span class="property">roles</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">        process.<span class="property">env</span>.<span class="property">ACCESS_TOKEN_SECRET</span>,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">expiresIn</span>: <span class="string">&quot;15m&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      res.<span class="title function_">json</span>(&#123; accessToken &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Logout</span></span><br><span class="line"><span class="comment">// @route POST /auth/logout</span></span><br><span class="line"><span class="comment">// @access Public</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logout</span> = (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> cookies = req.<span class="property">cookies</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!cookies?.<span class="property">jwt</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">sendStatus</span>(<span class="number">204</span>) <span class="comment">// No content</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">clearCookie</span>(<span class="string">&quot;jwt&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">httpOnly</span>: <span class="literal">true</span>, <span class="comment">// 是否只能在 HTTP 請求訪問 cookie，不能透過 JS 訪問</span></span><br><span class="line">    <span class="attr">secure</span>: <span class="literal">true</span>, <span class="comment">// 是否只在 HTTPS 中傳送 cookie</span></span><br><span class="line">    <span class="attr">sameSite</span>: <span class="string">&quot;None&quot;</span>, <span class="comment">// 是否在跨站請求中發送 cookie</span></span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>, <span class="comment">// cookie 的有效時間</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Cookie cleared&quot;</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  login,</span><br><span class="line">  refresh,</span><br><span class="line">  logout,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="authRoutes-js"><a href="#authRoutes-js" class="headerlink" title="authRoutes.js"></a>authRoutes.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/authRoutes.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> authController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/authController&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> loginLimiter = <span class="built_in">require</span>(<span class="string">&quot;../middleware/loginLimiter&quot;</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>).<span class="title function_">post</span>(loginLimiter, authController.<span class="property">login</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">route</span>(<span class="string">&quot;/refresh&quot;</span>).<span class="title function_">get</span>(authController.<span class="property">refresh</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">route</span>(<span class="string">&quot;/logout&quot;</span>).<span class="title function_">post</span>(authController.<span class="property">logout</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h2><p>啟用 auth 路由。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/auth&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/authRoutes&quot;</span>))</span><br></pre></td></tr></table></figure>

<h1 id="Middleware"><a href="#Middleware" class="headerlink" title="Middleware"></a>Middleware</h1><h2 id="verifyJWT-js"><a href="#verifyJWT-js" class="headerlink" title="verifyJWT.js"></a>verifyJWT.js</h2><p>驗證 JWT 的 middleware。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/verifyJWT.js</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">verifyJWT</span> = (<span class="params">req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> authHeader = req.<span class="property">headers</span>.<span class="property">authorization</span> || req.<span class="property">headers</span>.<span class="property">Authorization</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!authHeader?.<span class="title function_">startsWith</span>(<span class="string">&quot;Bearer &quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">401</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Unauthorized&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> token = authHeader.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">  jwt.<span class="title function_">verify</span>(token, process.<span class="property">env</span>.<span class="property">ACCESS_TOKEN_SECRET</span>, <span class="function">(<span class="params">err, decoded</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">403</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Forbidden&quot;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">user</span> = decoded.<span class="property">UserInfo</span>.<span class="property">username</span></span><br><span class="line">    req.<span class="property">roles</span> = decoded.<span class="property">UserInfo</span>.<span class="property">roles</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = verifyJWT</span><br></pre></td></tr></table></figure>

<h2 id="userRoutes-js-amp-noteRoutes-js"><a href="#userRoutes-js-amp-noteRoutes-js" class="headerlink" title="userRoutes.js &amp; noteRoutes.js"></a>userRoutes.js &amp; noteRoutes.js</h2><p>在 userRoutes.js 與 noteRoutes.js 中啟用 middleware，確保只有登入後的使用者才能訪問數據。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> verifyJWT = <span class="built_in">require</span>(<span class="string">&quot;../middleware/verifyJWT&quot;</span>)</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">use</span>(verifyJWT)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
        <tag>JWT</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React Form with Redux &amp; RTK Query</title>
    <url>/Frontend-React-Form-with-Redux-RTK-Query/</url>
    <content><![CDATA[<p>建立完善 CRUD HTTP 請求方法，透過 RTK Query 發出 HTTP 請求，完成 user 及 note 編輯頁面與功能。</p>
<span id="more"></span>

<h1 id="Redux-amp-RTK-Query"><a href="#Redux-amp-RTK-Query" class="headerlink" title="Redux &amp; RTK Query"></a>Redux &amp; RTK Query</h1><h2 id="usersApiSlice-js"><a href="#usersApiSlice-js" class="headerlink" title="usersApiSlice.js"></a>usersApiSlice.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/usersApiSlice.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> usersApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getUsers</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedUsers = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          user.<span class="property">id</span> = user.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> user</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> usersAdapter.<span class="title function_">setAll</span>(initialState, loadedUsers)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">addNewUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialUserData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialUserData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">updateUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialUserData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialUserData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">deleteUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">&#123; id &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          id,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  useGetUsersQuery,</span><br><span class="line">  useAddNewUserMutation,</span><br><span class="line">  useUpdateUserMutation,</span><br><span class="line">  useDeleteUserMutation,</span><br><span class="line">&#125; = usersApiSlice</span><br></pre></td></tr></table></figure>

<h2 id="notesApiSlice-js"><a href="#notesApiSlice-js" class="headerlink" title="notesApiSlice.js"></a>notesApiSlice.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/notesApiSlice.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notesApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getNotes</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedNotes = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">note</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          note.<span class="property">id</span> = note.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> note</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> notesAdapter.<span class="title function_">setAll</span>(initialState, loadedNotes)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">addNewNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialNoteData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialNoteData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">updateNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialNoteData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialNoteData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">deleteNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">&#123; id &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123; id &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  useGetNotesQuery,</span><br><span class="line">  useAddNewNoteMutation,</span><br><span class="line">  useUpdateNoteMutation,</span><br><span class="line">  useDeleteNoteMutation,</span><br><span class="line">&#125; = notesApiSlice</span><br></pre></td></tr></table></figure>

<h1 id="RTK-Quert-Subscriptions"><a href="#RTK-Quert-Subscriptions" class="headerlink" title="RTK Quert Subscriptions"></a>RTK Quert Subscriptions</h1><p>實現數據即時更新的功能。當伺服器端的數據變化時，將自動更新用戶端數據，使應用程式可以實時獲取最新數據，無需手動刷新頁面。</p>
<h2 id="Prefetch-jsx"><a href="#Prefetch-jsx" class="headerlink" title="Prefetch.jsx"></a>Prefetch.jsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Prefetch.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/store&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; notesApiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../notes/notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; usersApiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Prefetch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    store.<span class="title function_">dispatch</span>(</span><br><span class="line">      notesApiSlice.<span class="property">util</span>.<span class="title function_">prefetch</span>(<span class="string">&quot;getNotes&quot;</span>, <span class="string">&quot;notesList&quot;</span>, &#123; <span class="attr">force</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    )</span><br><span class="line">    store.<span class="title function_">dispatch</span>(</span><br><span class="line">      usersApiSlice.<span class="property">util</span>.<span class="title function_">prefetch</span>(<span class="string">&quot;getUsers&quot;</span>, <span class="string">&quot;usersList&quot;</span>, &#123; <span class="attr">force</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    )</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Prefetch</span></span><br></pre></td></tr></table></figure>

<h1 id="React-Form"><a href="#React-Form" class="headerlink" title="React Form"></a>React Form</h1><p>建立與 user 和 note 的新增與編輯頁面。</p>
<h2 id="roles-js"><a href="#roles-js" class="headerlink" title="roles.js"></a>roles.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/roles.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">ROLES</span> = &#123;</span><br><span class="line">  <span class="title class_">Employee</span>: <span class="string">&quot;Employee&quot;</span>,</span><br><span class="line">  <span class="title class_">Manager</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">  <span class="title class_">Admin</span>: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="新增-User"><a href="#新增-User" class="headerlink" title="新增 User"></a>新增 User</h2><h3 id="NewUserForm-jsx"><a href="#NewUserForm-jsx" class="headerlink" title="NewUserForm.jsx"></a>NewUserForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/NewUserForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useAddNewUserMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">ROLES</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../config/roles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">USER_REGEX</span> = <span class="regexp">/^[A-z]&#123;3,20&#125;$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PWD_REGEX</span> = <span class="regexp">/^[A-z0-9!@#$%]&#123;4,12&#125;$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewUserForm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [addNewUser, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useAddNewUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validUsername, setValidUsername] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validPassword, setValidPassword] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [roles, setRoles] = <span class="title function_">useState</span>([<span class="string">&quot;Employee&quot;</span>])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidUsername</span>(<span class="variable constant_">USER_REGEX</span>.<span class="title function_">test</span>(username))</span><br><span class="line">  &#125;, [username])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidPassword</span>(<span class="variable constant_">PWD_REGEX</span>.<span class="title function_">test</span>(password))</span><br><span class="line">  &#125;, [password])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setRoles</span>([])</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUsernameChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onPasswordChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onRolesChanged</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> values = <span class="title class_">Array</span>.<span class="title function_">from</span>(</span><br><span class="line">      e.<span class="property">target</span>.<span class="property">selectedOptions</span>, <span class="comment">//HTMLCollection</span></span><br><span class="line">      <span class="function">(<span class="params">option</span>) =&gt;</span> option.<span class="property">value</span></span><br><span class="line">    )</span><br><span class="line">    <span class="title function_">setRoles</span>(values)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave =</span><br><span class="line">    [roles.<span class="property">length</span>, validUsername, validPassword].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveUserClicked</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addNewUser</span>(&#123; username, password, roles &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable constant_">ROLES</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">role</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;role&#125;</span> <span class="attr">value</span>=<span class="string">&#123;role&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;role&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validUserClass = !validUsername ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validPwdClass = !validPassword ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validRolesClass = !<span class="title class_">Boolean</span>(roles.<span class="property">length</span>)</span><br><span class="line">    ? <span class="string">&quot;form__input--incomplete&quot;</span></span><br><span class="line">    : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;error?.data?.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;onSaveUserClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>New User<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span> <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Username: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[3-20 letters]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validUserClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUsernameChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Password: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[4-12 chars incl. !@#$%]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validPwdClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onPasswordChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;roles&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ASSIGNED ROLES:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__select</span> $&#123;<span class="attr">validRolesClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">multiple</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;3&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;roles&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onRolesChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;options&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewUserForm</span></span><br></pre></td></tr></table></figure>

<h2 id="編輯-User"><a href="#編輯-User" class="headerlink" title="編輯 User"></a>編輯 User</h2><h3 id="EditUser-jsx"><a href="#EditUser-jsx" class="headerlink" title="EditUser.jsx"></a>EditUser.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/EditUser.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./EditUserForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditUser</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = <span class="title function_">useParams</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; user &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">user</span>: data?.<span class="property">entities</span>[id],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">EditUserForm</span> <span class="attr">user</span>=<span class="string">&#123;user&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditUser</span></span><br></pre></td></tr></table></figure>

<h3 id="EditUserForm-jsx"><a href="#EditUserForm-jsx" class="headerlink" title="EditUserForm.jsx"></a>EditUserForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/EditUserForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave, faTrashCan &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useUpdateUserMutation, useDeleteUserMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">ROLES</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../config/roles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">USER_REGEX</span> = <span class="regexp">/^[A-z]&#123;3,20&#125;$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PWD_REGEX</span> = <span class="regexp">/^[A-z0-9!@#$%]&#123;4,12&#125;$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditUserForm</span> = (<span class="params">&#123; user &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [updateUser, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useUpdateUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [</span><br><span class="line">    deleteUser,</span><br><span class="line">    &#123; <span class="attr">isSuccess</span>: isDelSuccess, <span class="attr">isError</span>: isDelError, <span class="attr">error</span>: delerror &#125;,</span><br><span class="line">  ] = <span class="title function_">useDeleteUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(user.<span class="property">username</span>)</span><br><span class="line">  <span class="keyword">const</span> [validUsername, setValidUsername] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validPassword, setValidPassword] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [roles, setRoles] = <span class="title function_">useState</span>(user.<span class="property">roles</span>)</span><br><span class="line">  <span class="keyword">const</span> [active, setActive] = <span class="title function_">useState</span>(user.<span class="property">active</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidUsername</span>(<span class="variable constant_">USER_REGEX</span>.<span class="title function_">test</span>(username))</span><br><span class="line">  &#125;, [username])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidPassword</span>(<span class="variable constant_">PWD_REGEX</span>.<span class="title function_">test</span>(password))</span><br><span class="line">  &#125;, [password])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess || isDelSuccess) &#123;</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setRoles</span>([])</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, isDelSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUsernameChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onPasswordChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onRolesChanged</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> values = <span class="title class_">Array</span>.<span class="title function_">from</span>(</span><br><span class="line">      e.<span class="property">target</span>.<span class="property">selectedOptions</span>,</span><br><span class="line">      <span class="function">(<span class="params">option</span>) =&gt;</span> option.<span class="property">value</span></span><br><span class="line">    )</span><br><span class="line">    <span class="title function_">setRoles</span>(values)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onActiveChanged</span> = (<span class="params"></span>) =&gt; <span class="title function_">setActive</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveUserClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (password) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span>, username, password, roles, active &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span>, username, roles, active &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDeleteUserClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> canSave</span><br><span class="line">  <span class="keyword">if</span> (password) &#123;</span><br><span class="line">    canSave =</span><br><span class="line">      [roles.<span class="property">length</span>, validUsername, validPassword].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    canSave = [roles.<span class="property">length</span>, validUsername].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable constant_">ROLES</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">role</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;role&#125;</span> <span class="attr">value</span>=<span class="string">&#123;role&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;role&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError || isDelError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validUserClass = !validUsername ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validPwdClass =</span><br><span class="line">    password &amp;&amp; !validPassword ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validRolesClass = !<span class="title class_">Boolean</span>(roles.<span class="property">length</span>)</span><br><span class="line">    ? <span class="string">&quot;form__input--incomplete&quot;</span></span><br><span class="line">    : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = (error?.<span class="property">data</span>.<span class="property">message</span> || delerror?.<span class="property">data</span>.<span class="property">message</span>) ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Edit User<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveUserClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onDeleteUserClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faTrashCan&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Username: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[3-20 letters]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validUserClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUsernameChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Password: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[4-12 chars incl. !@#$%]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validPwdClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onPasswordChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;user-active&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ACTIVE:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;user-active&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;user-active&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">checked</span>=<span class="string">&#123;active&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onActiveChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;roles&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ASSIGNED ROLES:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__select</span> $&#123;<span class="attr">validRolesClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">multiple</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;3&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;roles&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onRolesChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;options&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditUserForm</span></span><br></pre></td></tr></table></figure>

<h2 id="新增-Note"><a href="#新增-Note" class="headerlink" title="新增 Note"></a>新增 Note</h2><h3 id="NewNote-jsx"><a href="#NewNote-jsx" class="headerlink" title="NewNote.jsx"></a>NewNote.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NewNote.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNoteForm</span> <span class="keyword">from</span> <span class="string">&quot;./NewNoteForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewNote</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; users &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">users</span>: data?.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> data?.<span class="property">entities</span>[id]),</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!users?.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">NewNoteForm</span> <span class="attr">users</span>=<span class="string">&#123;users&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewNote</span></span><br></pre></td></tr></table></figure>

<h3 id="NewNoteForm-jsx"><a href="#NewNoteForm-jsx" class="headerlink" title="NewNoteForm.jsx"></a>NewNoteForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NewNoteForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useAddNewNoteMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewNoteForm</span> = (<span class="params">&#123; users &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [addNewNote, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useAddNewNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [title, setTitle] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [userId, setUserId] = <span class="title function_">useState</span>(users[<span class="number">0</span>].<span class="property">id</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">setTitle</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setText</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setUserId</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTitleChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setTitle</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTextChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setText</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUserIdChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUserId</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave = [title, text, userId].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addNewNote</span>(&#123; title, text, <span class="attr">user</span>: userId &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> usersOptions = users</span><br><span class="line">    .<span class="title function_">filter</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> user.<span class="property">active</span>)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;user.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;user.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;user.username&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    ))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTitleClass = !title ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTextClass = !text ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = error?.<span class="property">data</span>.<span class="property">message</span> ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>New Note<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-title&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Title:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTitleClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTitleChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-text&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Text:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTextClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;text&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTextChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          USER:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__select&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;userId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUserIdChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;usersOptions&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewNoteForm</span></span><br></pre></td></tr></table></figure>

<h2 id="編輯-Note"><a href="#編輯-Note" class="headerlink" title="編輯 Note"></a>編輯 Note</h2><h3 id="EditNote-jsx"><a href="#EditNote-jsx" class="headerlink" title="EditNote.jsx"></a>EditNote.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNote.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNoteForm</span> <span class="keyword">from</span> <span class="string">&quot;./EditNoteForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNote</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = <span class="title function_">useParams</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[id],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; users &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">users</span>: data?.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> data?.<span class="property">entities</span>[id]),</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!note || !users.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">EditNoteForm</span> <span class="attr">note</span>=<span class="string">&#123;note&#125;</span> <span class="attr">users</span>=<span class="string">&#123;users&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNote</span></span><br></pre></td></tr></table></figure>

<h3 id="EditNoteForm-jsx"><a href="#EditNoteForm-jsx" class="headerlink" title="EditNoteForm.jsx"></a>EditNoteForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNoteForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave, faTrashCan &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useUpdateNoteMutation, useDeleteNoteMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNoteForm</span> = (<span class="params">&#123; note, users &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [updateNote, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useUpdateNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [</span><br><span class="line">    deleteNote,</span><br><span class="line">    &#123; <span class="attr">isSuccess</span>: isDelSuccess, <span class="attr">isError</span>: isDelError, <span class="attr">error</span>: delerror &#125;,</span><br><span class="line">  ] = <span class="title function_">useDeleteNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [title, setTitle] = <span class="title function_">useState</span>(note.<span class="property">title</span>)</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(note.<span class="property">text</span>)</span><br><span class="line">  <span class="keyword">const</span> [completed, setCompleted] = <span class="title function_">useState</span>(note.<span class="property">completed</span>)</span><br><span class="line">  <span class="keyword">const</span> [userId, setUserId] = <span class="title function_">useState</span>(note.<span class="property">user</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess || isDelSuccess) &#123;</span><br><span class="line">      <span class="title function_">setTitle</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setText</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setUserId</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, isDelSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTitleChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setTitle</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTextChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setText</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onCompletedChanged</span> = (<span class="params"></span>) =&gt; <span class="title function_">setCompleted</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUserIdChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUserId</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave = [title, text, userId].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span>, title, text, completed, <span class="attr">user</span>: userId &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDeleteNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> usersOptions = users.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;user.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;user.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;user.username&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  ))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError || isDelError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTitleClass = !title ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTextClass = !text ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = (error?.<span class="property">data</span>.<span class="property">message</span> || delerror?.<span class="property">data</span>.<span class="property">message</span>) ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Edit Note #&#123;note.ticket&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onDeleteNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faTrashCan&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-title&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Title:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTitleClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTitleChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-text&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Text:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTextClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;text&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTextChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">htmlFor</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__label form__checkbox-container&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          Completed:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">checked</span>=<span class="string">&#123;completed&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onCompletedChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          USER:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__select&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;userId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUserIdChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;usersOptions&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__divider&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Created:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Updated:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNoteForm</span></span><br></pre></td></tr></table></figure>

<h2 id="App-jsx"><a href="#App-jsx" class="headerlink" title="App.jsx"></a>App.jsx</h2><p>設定 route :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Prefetch</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Prefetch&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUser</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/EditUser&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/NewUserForm&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/EditNote&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NewNote&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Prefetch</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditUser</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewUserForm</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React Login Authentication with Redux</title>
    <url>/Frontend-React-Login-Authentication-with-Redux/</url>
    <content><![CDATA[<p>完成登入及登出功能，使用者登入後取得並儲存 token，登出後即清除 token。</p>
<span id="more"></span>

<h1 id="Redux"><a href="#Redux" class="headerlink" title="Redux"></a>Redux</h1><h2 id="authSlice-js"><a href="#authSlice-js" class="headerlink" title="authSlice.js"></a>authSlice.js</h2><p>儲存登入使用者的資訊(accessToken)。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/authSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSlice &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> authSlice = <span class="title function_">createSlice</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;auth&quot;</span>,</span><br><span class="line">  <span class="attr">initialState</span>: &#123;</span><br><span class="line">    <span class="attr">token</span>: <span class="literal">null</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">reducers</span>: &#123;</span><br><span class="line">    <span class="attr">setCredentials</span>: <span class="function">(<span class="params">state, action</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; accessToken &#125; = action.<span class="property">payload</span></span><br><span class="line">      state.<span class="property">token</span> = accessToken</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">logOut</span>: <span class="function">(<span class="params">state, action</span>) =&gt;</span> &#123;</span><br><span class="line">      state.<span class="property">token</span> = <span class="literal">null</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; setCredentials, logOut &#125; = authSlice.<span class="property">actions</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> authSlice.<span class="property">reducer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">selectCurrentToken</span> = (<span class="params">state</span>) =&gt; state.<span class="property">auth</span>.<span class="property">token</span></span><br></pre></td></tr></table></figure>

<h2 id="authApiSlice-js"><a href="#authApiSlice-js" class="headerlink" title="authApiSlice.js"></a>authApiSlice.js</h2><p>處理 login、refresh、logout 請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/authApiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/api/apiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; logOut &#125; <span class="keyword">from</span> <span class="string">&quot;./authSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setCredentials &#125; <span class="keyword">from</span> <span class="string">&quot;./authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> authApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">login</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">credentials</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/auth&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...credentials,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">sendLogout</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/auth/logout&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="keyword">async</span> <span class="title function_">onQueryStarted</span>(<span class="params">arg, &#123; dispatch, queryFulfilled &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> queryFulfilled</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 移除 Redux state 中的 token</span></span><br><span class="line">          <span class="title function_">dispatch</span>(<span class="title function_">logOut</span>())</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 重置 Redux 中的 api</span></span><br><span class="line">          <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">dispatch</span>(apiSlice.<span class="property">util</span>.<span class="title function_">resetApiState</span>())</span><br><span class="line">          &#125;, <span class="number">1000</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">refresh</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/auth/refresh&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="keyword">async</span> <span class="title function_">onQueryStarted</span>(<span class="params">arg, &#123; dispatch, queryFulfilled &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> queryFulfilled</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">          <span class="keyword">const</span> &#123; accessToken &#125; = data</span><br><span class="line">          <span class="title function_">dispatch</span>(<span class="title function_">setCredentials</span>(&#123; accessToken &#125;))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useLoginMutation, useSendLogoutMutation, useRefreshQuery &#125; =</span><br><span class="line">  authApiSlice</span><br></pre></td></tr></table></figure>

<h2 id="store-js"><a href="#store-js" class="headerlink" title="store.js"></a>store.js</h2><p>註冊 authReducer。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// api/store.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setupListeners &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;./api/apiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> authReducer <span class="keyword">from</span> <span class="string">&quot;../features/auth/authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">configureStore</span>(&#123;</span><br><span class="line">  <span class="attr">reducer</span>: &#123;</span><br><span class="line">    [apiSlice.<span class="property">reducerPath</span>]: apiSlice.<span class="property">reducer</span>,</span><br><span class="line">    <span class="attr">auth</span>: authReducer,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">middleware</span>: <span class="function">(<span class="params">getDefaultMiddleware</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">getDefaultMiddleware</span>().<span class="title function_">concat</span>(apiSlice.<span class="property">middleware</span>),</span><br><span class="line">  <span class="attr">devTools</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 refetchOnFocus 與 refetchOnReconnect</span></span><br><span class="line"><span class="title function_">setupListeners</span>(store.<span class="property">dispatch</span>)</span><br></pre></td></tr></table></figure>

<h1 id="Login-amp-Logout"><a href="#Login-amp-Logout" class="headerlink" title="Login &amp; Logout"></a>Login &amp; Logout</h1><h2 id="Login-jsx"><a href="#Login-jsx" class="headerlink" title="Login.jsx"></a>Login.jsx</h2><p>建立登入頁面。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Login.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useDispatch &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useLoginMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./authApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setCredentials &#125; <span class="keyword">from</span> <span class="string">&quot;./authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Login</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> userRef = <span class="title function_">useRef</span>()</span><br><span class="line">  <span class="keyword">const</span> errRef = <span class="title function_">useRef</span>()</span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [errMsg, setErrMsg] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="title function_">useDispatch</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [login, &#123; isLoading &#125;] = <span class="title function_">useLoginMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    userRef.<span class="property">current</span>.<span class="title function_">focus</span>()</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setErrMsg</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  &#125;, [username, password])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSubmit</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; accessToken &#125; = <span class="keyword">await</span> <span class="title function_">login</span>(&#123; username, password &#125;).<span class="title function_">unwrap</span>()</span><br><span class="line">      <span class="title function_">dispatch</span>(<span class="title function_">setCredentials</span>(&#123; accessToken &#125;))</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!err.<span class="property">status</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;No Server Response&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">status</span> === <span class="number">400</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;Missing Username or Password&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;Unauthorized&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(err.<span class="property">data</span>?.<span class="property">message</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      errRef.<span class="property">current</span>.<span class="title function_">focus</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleUserInput</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handlePwdInput</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = errMsg ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;public&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Employee Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">main</span> <span class="attr">className</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">ref</span>=<span class="string">&#123;errRef&#125;</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span> <span class="attr">aria-live</span>=<span class="string">&quot;assertive&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;errMsg&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;handleSubmit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Username:</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;form__input&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">ref</span>=<span class="string">&#123;userRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;handleUserInput&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">required</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Password:</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;form__input&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">ref</span>=<span class="string">&#123;userRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;handlePwdInput&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">required</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;form__submit-button border&quot;</span>&gt;</span>Sign In<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">className</span>=<span class="string">&quot;backHome&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Back to Home 🚀</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Login</span></span><br></pre></td></tr></table></figure>

<h2 id="DashHeader-jsx"><a href="#DashHeader-jsx" class="headerlink" title="DashHeader.jsx"></a>DashHeader.jsx</h2><p>在 DashHeader 中加入 Logout 按鈕。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashHeader.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faRightFromBracket &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useSendLogoutMutation &#125; <span class="keyword">from</span> <span class="string">&quot;../features/auth/authApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashHeader</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [sendLogout, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useSendLogoutMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onLogoutClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">sendLogout</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Error: &#123;error?.data?.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> logoutButton = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Logout&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onLogoutClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faRightFromBracket&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;dash-header flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__title&quot;</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__nav&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;/* nav buttons */&#125;</span></span><br><span class="line"><span class="language-xml">          &#123;logoutButton&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashHeader</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - JWT Authentication|Persist Login State on Refresh</title>
    <url>/Frontend-JWT-Authentication-Persist-Login-State-on-Refresh/</url>
    <content><![CDATA[<p>將登入時收到的 token 加入 headers 中，且於後續的請求中一起發送至伺服器，以此辨別使用者是否登入，並完成保持使用者登入狀態的功能。</p>
<span id="more"></span>

<h1 id="RTK-Query"><a href="#RTK-Query" class="headerlink" title="RTK Query"></a>RTK Query</h1><h2 id="apiSlice-js"><a href="#apiSlice-js" class="headerlink" title="apiSlice.js"></a>apiSlice.js</h2><p>修改 apiSlice.js，取得 Redux state 中的 token，並在發送請求時一起發送至伺服器，以驗證使用者身分。並在 token 過期時發送 refresh 請求以 refresh token 取得新的 access token。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/api/apiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApi, fetchBaseQuery &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query/react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; setCredentials &#125; <span class="keyword">from</span> <span class="string">&quot;../../features/auth/authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseQuery = <span class="title function_">fetchBaseQuery</span>(&#123;</span><br><span class="line">  <span class="attr">baseUrl</span>: <span class="string">&quot;http://localhost:3500&quot;</span>,</span><br><span class="line">  <span class="comment">// 在每個請求中都發送 token</span></span><br><span class="line">  <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">  <span class="comment">// 設置請求 headers</span></span><br><span class="line">  <span class="attr">prepareHeaders</span>: <span class="function">(<span class="params">headers, &#123; getState &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">getState</span>().<span class="property">auth</span>.<span class="property">token</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      headers.<span class="title function_">set</span>(<span class="string">&quot;Authorization&quot;</span>, <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">baseQueryWithReauth</span> = <span class="keyword">async</span> (<span class="params">args, api, extraOptions</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(args, api, extraOptions)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (result?.<span class="property">error</span>?.<span class="property">status</span> === <span class="number">403</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sending refresh token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 發送 refresh 請求與 refresh token 以取得新的 access token</span></span><br><span class="line">    <span class="keyword">const</span> refreshResult = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(<span class="string">&quot;/auth/refresh&quot;</span>, api, extraOptions)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (refreshResult.<span class="property">data</span>) &#123;</span><br><span class="line">      <span class="comment">// 儲存新的 token</span></span><br><span class="line">      api.<span class="title function_">dispatch</span>(<span class="title function_">setCredentials</span>(&#123; ...refreshResult.<span class="property">data</span> &#125;))</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 以新的 access token 重新請求</span></span><br><span class="line">      result = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(args, api, extraOptions)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (refreshResult?.<span class="property">error</span>?.<span class="property">status</span> === <span class="number">403</span>) &#123;</span><br><span class="line">        refreshResult.<span class="property">error</span>.<span class="property">data</span>.<span class="property">message</span> = <span class="string">&quot;Your login has expired. &quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> refreshResult</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiSlice = <span class="title function_">createApi</span>(&#123;</span><br><span class="line">  <span class="attr">baseQuery</span>: baseQueryWithReauth,</span><br><span class="line">  <span class="attr">tagTypes</span>: [<span class="string">&quot;Note&quot;</span>, <span class="string">&quot;User&quot;</span>],</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;&#125;),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="Persist-Login"><a href="#Persist-Login" class="headerlink" title="Persist Login"></a>Persist Login</h1><h2 id="usePersist-js"><a href="#usePersist-js" class="headerlink" title="usePersist.js"></a>usePersist.js</h2><p>是否在登錄時記住使用者以保持登入狀態。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// hooks/usePersist.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">usePersist</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [persist, setPersist] = <span class="title function_">useState</span>(</span><br><span class="line">    <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;persist&quot;</span>)) || <span class="literal">false</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;persist&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(persist))</span><br><span class="line">  &#125;, [persist])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [persist, setPersist]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> usePersist</span><br></pre></td></tr></table></figure>

<h2 id="Login-jsx"><a href="#Login-jsx" class="headerlink" title="Login.jsx"></a>Login.jsx</h2><p>加入 Remember Me 選框，確認是否記住使用者。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//features/auth/Login.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect, useRef &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useDispatch &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useLoginMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./authApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setCredentials &#125; <span class="keyword">from</span> <span class="string">&quot;./authSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> usePersist <span class="keyword">from</span> <span class="string">&quot;../../hooks/usePersist&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Login</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> userRef = <span class="title function_">useRef</span>()</span><br><span class="line">  <span class="keyword">const</span> errRef = <span class="title function_">useRef</span>()</span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [errMsg, setErrMsg] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [persist, setPersist] = <span class="title function_">usePersist</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="title function_">useDispatch</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [login, &#123; isLoading &#125;] = <span class="title function_">useLoginMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    userRef.<span class="property">current</span>.<span class="title function_">focus</span>()</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setErrMsg</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  &#125;, [username, password])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleSubmit</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; accessToken &#125; = <span class="keyword">await</span> <span class="title function_">login</span>(&#123; username, password &#125;).<span class="title function_">unwrap</span>()</span><br><span class="line">      <span class="title function_">dispatch</span>(<span class="title function_">setCredentials</span>(&#123; accessToken &#125;))</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!err.<span class="property">status</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;No Server Response&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">status</span> === <span class="number">400</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;Missing Username or Password&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (err.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(<span class="string">&quot;Unauthorized&quot;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">setErrMsg</span>(err.<span class="property">data</span>?.<span class="property">message</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      errRef.<span class="property">current</span>.<span class="title function_">focus</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleUserInput</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handlePwdInput</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleToggle</span> = (<span class="params"></span>) =&gt; <span class="title function_">setPersist</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = errMsg ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;public&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Employee Login<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">main</span> <span class="attr">className</span>=<span class="string">&quot;login&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">ref</span>=<span class="string">&#123;errRef&#125;</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span> <span class="attr">aria-live</span>=<span class="string">&quot;assertive&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;errMsg&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;handleSubmit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Username:</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;form__input&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">ref</span>=<span class="string">&#123;userRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;handleUserInput&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">required</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Password:</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">className</span>=<span class="string">&quot;form__input&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onChange</span>=<span class="string">&#123;handlePwdInput&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">required</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;form__submit-button border&quot;</span>&gt;</span>Sign In<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;persist&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">name</span>=<span class="string">&quot;persist&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">id</span>=<span class="string">&quot;persist&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onChange</span>=<span class="string">&#123;handleToggle&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">checked</span>=<span class="string">&#123;persist&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="symbol">&amp;nbsp;</span>Remember Me</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">className</span>=<span class="string">&quot;backHome&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Back to Home 🚀</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Login</span></span><br></pre></td></tr></table></figure>

<h2 id="PersistLogin-jsx"><a href="#PersistLogin-jsx" class="headerlink" title="PersistLogin.jsx"></a>PersistLogin.jsx</h2><p>用以保持登入狀態的組件。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/PersistLogin.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useRef, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span>, <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useSelector &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useRefreshMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./authApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; selectCurrentToken &#125; <span class="keyword">from</span> <span class="string">&quot;./authSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> usePersist <span class="keyword">from</span> <span class="string">&quot;../../hooks/usePersist&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">PersistLogin</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [persist] = <span class="title function_">usePersist</span>()</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title function_">useSelector</span>(selectCurrentToken)</span><br><span class="line">  <span class="keyword">const</span> effectRan = <span class="title function_">useRef</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [trueSuccess, setTrueSuccess] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [refresh, &#123; isUninitialized, isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useRefreshMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (effectRan.<span class="property">current</span> === <span class="literal">true</span> || process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&quot;development&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> <span class="title function_">verifyRefreshToken</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">await</span> <span class="title function_">refresh</span>()</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 確保 refresh 請求確實成功</span></span><br><span class="line">          <span class="title function_">setTrueSuccess</span>(<span class="literal">true</span>)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (!token &amp;&amp; persist) &#123;</span><br><span class="line">        <span class="title function_">verifyRefreshToken</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> (effectRan.<span class="property">current</span> = <span class="literal">true</span>)</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line">  <span class="keyword">if</span> (!persist) &#123;</span><br><span class="line">    <span class="comment">// persist: no</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;no persist&quot;</span>)</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    <span class="comment">// persist: yes, token: no</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;loading&quot;</span>)</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    <span class="comment">// persist: yes, token: no</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;error&quot;</span>)</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;error?.data?.message&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span>&gt;</span>Please login again<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isSuccess &amp;&amp; trueSuccess) &#123;</span><br><span class="line">    <span class="comment">// persist: yes, token: yes</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (token &amp;&amp; isUninitialized) &#123;</span><br><span class="line">    <span class="comment">// persist: yes, token: yes</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;token and uninit&quot;</span>)</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">PersistLogin</span></span><br></pre></td></tr></table></figure>

<h2 id="App-jsx"><a href="#App-jsx" class="headerlink" title="App.jsx"></a>App.jsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Prefetch</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Prefetch&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PersistLogin</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/PersistLogin&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUser</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/EditUser&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/NewUserForm&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/EditNote&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NewNote&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">PersistLogin</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Prefetch</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">            &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">              &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditUser</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewUserForm</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">              &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React 使用者權限控制</title>
    <url>/Frontend-React-%E4%BD%BF%E7%94%A8%E8%80%85%E6%AC%8A%E9%99%90%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<p>依據使用者登入的身分，提供不同的控制與訪問權限。</p>
<span id="more"></span>

<h1 id="判別登入身分"><a href="#判別登入身分" class="headerlink" title="判別登入身分"></a>判別登入身分</h1><p>安裝 jwt-decode，解碼 jwt :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i jwt-decode</span><br></pre></td></tr></table></figure>

<h2 id="useAuth-js"><a href="#useAuth-js" class="headerlink" title="useAuth.js"></a>useAuth.js</h2><p>解碼 access token，判斷登入使用者的身分別。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// hooks/useAuth.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; useSelector &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> jwtDecode <span class="keyword">from</span> <span class="string">&quot;jwt-decode&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; selectCurrentToken &#125; <span class="keyword">from</span> <span class="string">&quot;../features/auth/authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useAuth</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> token = <span class="title function_">useSelector</span>(selectCurrentToken)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> isManager = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> isAdmin = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">let</span> status = <span class="string">&quot;Employee&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="keyword">const</span> decoded = <span class="title function_">jwtDecode</span>(token)</span><br><span class="line">    <span class="keyword">const</span> &#123; username, roles &#125; = decoded.<span class="property">UserInfo</span></span><br><span class="line"></span><br><span class="line">    isManager = roles.<span class="title function_">includes</span>(<span class="string">&quot;Manager&quot;</span>)</span><br><span class="line">    isAdmin = roles.<span class="title function_">includes</span>(<span class="string">&quot;Admin&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isManager) &#123;</span><br><span class="line">      status = <span class="string">&quot;Manager&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (isAdmin) &#123;</span><br><span class="line">      status = <span class="string">&quot;Admin&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      username,</span><br><span class="line">      roles,</span><br><span class="line">      isManager,</span><br><span class="line">      isAdmin,</span><br><span class="line">      status,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">roles</span>: [],</span><br><span class="line">    isManager,</span><br><span class="line">    isAdmin,</span><br><span class="line">    status,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useAuth</span><br></pre></td></tr></table></figure>

<h2 id="DashFooter-jsx"><a href="#DashFooter-jsx" class="headerlink" title="DashFooter.jsx"></a>DashFooter.jsx</h2><p>添加使用者資訊。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashFooter.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faHouse &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashFooter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, status &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; pathname &#125; = <span class="title function_">useLocation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onGoHomeClicked</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">&quot;/dash&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> goHomeButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (pathname !== <span class="string">&quot;/dash&quot;</span>) &#123;</span><br><span class="line">    goHomeButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Home&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onGoHomeClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faHouse&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">className</span>=<span class="string">&quot;dash-footer flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;goHomeButton&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>User: &#123;username&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Status: &#123;status&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashFooter</span></span><br></pre></td></tr></table></figure>

<h1 id="權限控制"><a href="#權限控制" class="headerlink" title="權限控制"></a>權限控制</h1><h2 id="Welcome-jsx"><a href="#Welcome-jsx" class="headerlink" title="Welcome.jsx"></a>Welcome.jsx</h2><p>只有 Manager 和 Admin 才能編輯或新增使用者。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Welcome.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Welcome</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, isManager, isAdmin &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">  <span class="keyword">const</span> today = <span class="keyword">new</span> <span class="title class_">Intl</span>.<span class="title class_">DateTimeFormat</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;full&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;).<span class="title function_">format</span>(date)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;welcome&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;today&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome &#123;username&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;link&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/notes&quot;</span>&gt;</span>View techNotes<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/notes/new&quot;</span>&gt;</span>Add New techNotes<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;/* 只有 Manager 和 Admin 才能編輯或新增使用者 */&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;(isManager || isAdmin) &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/users&quot;</span>&gt;</span>View User Settings<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/users/new&quot;</span>&gt;</span>Add New User<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Welcome</span></span><br></pre></td></tr></table></figure>

<h2 id="DashHeader-jsx"><a href="#DashHeader-jsx" class="headerlink" title="DashHeader.jsx"></a>DashHeader.jsx</h2><p>加入新的 icon。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashHeader.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faRightFromBracket,</span><br><span class="line">  faFileCirclePlus,</span><br><span class="line">  faFilePen,</span><br><span class="line">  faUserGear,</span><br><span class="line">  faUserPlus,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useSendLogoutMutation &#125; <span class="keyword">from</span> <span class="string">&quot;../features/auth/authApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DASH_REGEX</span> = <span class="regexp">/^\/dash(\/)?$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">NOTES_REGEX</span> = <span class="regexp">/^\/dash\/notes(\/)?$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">USERS_REGEX</span> = <span class="regexp">/^\/dash\/users(\/)?$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashHeader</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; isManager, isAdmin &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line">  <span class="keyword">const</span> &#123; pathname &#125; = <span class="title function_">useLocation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [sendLogout, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useSendLogoutMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onNewNoteClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes/new&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onNewUserClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users/new&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onNotesClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUsersClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onLogoutClicked</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">sendLogout</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> newNoteButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable constant_">NOTES_REGEX</span>.<span class="title function_">test</span>(pathname)) &#123;</span><br><span class="line">    newNoteButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">title</span>=<span class="string">&quot;New Note&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;onNewNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faFileCirclePlus&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> newUserButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable constant_">USERS_REGEX</span>.<span class="title function_">test</span>(pathname)) &#123;</span><br><span class="line">    newUserButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">title</span>=<span class="string">&quot;New User&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;onNewUserClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faUserPlus&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> usersButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (isManager || isAdmin) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable constant_">USERS_REGEX</span>.<span class="title function_">test</span>(pathname) &amp;&amp; pathname.<span class="title function_">includes</span>(<span class="string">&quot;/dash&quot;</span>)) &#123;</span><br><span class="line">      usersButton = (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Users&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onUsersClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faUserGear&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> notesButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable constant_">NOTES_REGEX</span>.<span class="title function_">test</span>(pathname) &amp;&amp; pathname.<span class="title function_">includes</span>(<span class="string">&quot;/dash&quot;</span>)) &#123;</span><br><span class="line">    notesButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Notes&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onNotesClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faFilePen&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> logoutButton = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Logout&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onLogoutClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faRightFromBracket&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> buttonContent</span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    buttonContent = <span class="language-xml"><span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#fff&quot;</span> /&gt;</span></span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    buttonContent = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;newNoteButton&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;notesButton&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;newUserButton&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;usersButton&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;logoutButton&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;error?.data?.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;dash-header flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__title&quot;</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">nav</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__nav&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;/* nav buttons */&#125;</span></span><br><span class="line"><span class="language-xml">            &#123;buttonContent&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashHeader</span></span><br></pre></td></tr></table></figure>

<h2 id="NotesList-jsx"><a href="#NotesList-jsx" class="headerlink" title="NotesList.jsx"></a>NotesList.jsx</h2><p>只有 Manager 與 Admin 可以編輯與訪問所有 note，而 Employee 只能編輯與訪問自己的 note。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Note</span> <span class="keyword">from</span> <span class="string">&quot;./Note&quot;</span></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NotesList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, isManager, isAdmin &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="attr">data</span>: notes,</span><br><span class="line">    isLoading,</span><br><span class="line">    isSuccess,</span><br><span class="line">    isError,</span><br><span class="line">    error,</span><br><span class="line">  &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">pollingInterval</span>: <span class="number">15000</span>, <span class="comment">// 輪詢間隔(ms)</span></span><br><span class="line">    <span class="attr">refetchOnFocus</span>: <span class="literal">true</span>, <span class="comment">// 是否在獲取焦點時重新加載數據</span></span><br><span class="line">    <span class="attr">refetchOnMountOrArgChange</span>: <span class="literal">true</span>, <span class="comment">// 是否每次都重新加載數據，false 正常使用快取</span></span><br><span class="line">    <span class="attr">refetchOnReconnect</span>: <span class="literal">true</span>, <span class="comment">// 是否在重新連接時重新加載數據</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>&#123;error?.data.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ids, entities &#125; = notes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> filteredIds</span><br><span class="line">    <span class="comment">// Manager 與 Admin 可操作所有 notes</span></span><br><span class="line">    <span class="keyword">if</span> (isManager || isAdmin) &#123;</span><br><span class="line">      filteredIds = [...ids]</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      filteredIds = ids.<span class="title function_">filter</span>(</span><br><span class="line">        <span class="function">(<span class="params">noteId</span>) =&gt;</span> entities[noteId].<span class="property">username</span> === username</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (filteredIds.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>No notes found...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tableContent =</span><br><span class="line">      ids?.<span class="property">length</span> &amp;&amp;</span><br><span class="line">      filteredIds.<span class="title function_">map</span>(<span class="function">(<span class="params">noteId</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Note</span> <span class="attr">key</span>=<span class="string">&#123;noteId&#125;</span> <span class="attr">noteId</span>=<span class="string">&#123;noteId&#125;</span> /&gt;</span></span>)</span><br><span class="line"></span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">className</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">thead</span> <span class="attr">className</span>=<span class="string">&quot;table__thead&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Status</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Created</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Updated</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Title</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Owner</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Edit</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>&#123;tableContent&#125;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NotesList</span></span><br></pre></td></tr></table></figure>

<h2 id="EditNoteForm-jsx"><a href="#EditNoteForm-jsx" class="headerlink" title="EditNoteForm.jsx"></a>EditNoteForm.jsx</h2><p>只有 Manager 與 Admin 可以刪除 note。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNoteForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave, faTrashCan &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useUpdateNoteMutation, useDeleteNoteMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNoteForm</span> = (<span class="params">&#123; note, users &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; isManager, isAdmin &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [updateNote, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useUpdateNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [</span><br><span class="line">    deleteNote,</span><br><span class="line">    &#123; <span class="attr">isSuccess</span>: isDelSuccess, <span class="attr">isError</span>: isDelError, <span class="attr">error</span>: delerror &#125;,</span><br><span class="line">  ] = <span class="title function_">useDeleteNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [title, setTitle] = <span class="title function_">useState</span>(note.<span class="property">title</span>)</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(note.<span class="property">text</span>)</span><br><span class="line">  <span class="keyword">const</span> [completed, setCompleted] = <span class="title function_">useState</span>(note.<span class="property">completed</span>)</span><br><span class="line">  <span class="keyword">const</span> [userId, setUserId] = <span class="title function_">useState</span>(note.<span class="property">user</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess || isDelSuccess) &#123;</span><br><span class="line">      <span class="title function_">setTitle</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setText</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setUserId</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, isDelSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTitleChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setTitle</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTextChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setText</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onCompletedChanged</span> = (<span class="params"></span>) =&gt; <span class="title function_">setCompleted</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUserIdChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUserId</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave = [title, text, userId].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span>, title, text, completed, <span class="attr">user</span>: userId &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDeleteNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> usersOptions = users.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;user.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;user.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;user.username&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  ))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError || isDelError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTitleClass = !title ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTextClass = !text ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = (error?.<span class="property">data</span>.<span class="property">message</span> || delerror?.<span class="property">data</span>.<span class="property">message</span>) ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> deleteButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (isManager || isAdmin) &#123;</span><br><span class="line">    deleteButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">title</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;onDeleteNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faTrashCan&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Edit Note #&#123;note.ticket&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;deleteButton&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-title&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Title:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTitleClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTitleChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-text&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Text:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTextClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;text&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTextChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">htmlFor</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__label form__checkbox-container&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          Completed:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">checked</span>=<span class="string">&#123;completed&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onCompletedChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          USER:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__select&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;userId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUserIdChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;usersOptions&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__divider&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Created:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Updated:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNoteForm</span></span><br></pre></td></tr></table></figure>

<h1 id="Protected-Routes"><a href="#Protected-Routes" class="headerlink" title="Protected Routes"></a>Protected Routes</h1><h2 id="RequireAuth-jsx"><a href="#RequireAuth-jsx" class="headerlink" title="RequireAuth.jsx"></a>RequireAuth.jsx</h2><p>判斷子路由是否允許目前使用者訪問。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/RequireAuth.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useLocation, <span class="title class_">Navigate</span>, <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">RequireAuth</span> = (<span class="params">&#123; allowedRoles &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> location = <span class="title function_">useLocation</span>()</span><br><span class="line">  <span class="keyword">const</span> &#123; roles &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = roles.<span class="title function_">some</span>(<span class="function">(<span class="params">role</span>) =&gt;</span> allowedRoles.<span class="title function_">includes</span>(role)) ? (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">  ) : (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Navigate</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">state</span>=<span class="string">&#123;&#123;</span> <span class="attr">from:</span> <span class="attr">location</span> &#125;&#125; <span class="attr">replace</span> /&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">RequireAuth</span></span><br></pre></td></tr></table></figure>

<h2 id="App-jsx"><a href="#App-jsx" class="headerlink" title="App.jsx"></a>App.jsx</h2><p>啟用 RequireAuth.jsx，設定每個路由具有訪問權限的身分。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Prefetch</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Prefetch&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PersistLogin</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/PersistLogin&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUser</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/EditUser&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/NewUserForm&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/EditNote&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NewNote&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">RequireAuth</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/RequireAuth&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">ROLES</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./config/roles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        &#123;/* public routes */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;/* protected routes */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">PersistLogin</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">RequireAuth</span> <span class="attr">allowedRoles</span>=<span class="string">&#123;[...Object.values(ROLES)]&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Prefetch</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">              &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">element</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    &lt;<span class="attr">RequireAuth</span> <span class="attr">allowedRoles</span>=<span class="string">&#123;[ROLES.Manager,</span> <span class="attr">ROLES.Admin</span>]&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">                  &#125;</span></span><br><span class="line"><span class="language-xml">                &gt;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditUser</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewUserForm</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">                &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>MERN - Code Refactoring</title>
    <url>/MERN-Code-Refactoring/</url>
    <content><![CDATA[<p>重構程式碼。</p>
<span id="more"></span>

<h1 id="Backend"><a href="#Backend" class="headerlink" title="Backend"></a>Backend</h1><h2 id="errorHandler-js"><a href="#errorHandler-js" class="headerlink" title="errorHandler.js"></a>errorHandler.js</h2><p>為了讓 RTK Query 更好的處理請求中未預期的錯誤，如伺服器端錯誤，可以在響應體中回傳 <code>isError</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/errorHandler.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./logger&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">errorHandler</span> = (<span class="params">err, req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.name&#125;</span>: <span class="subst">$&#123;err.message&#125;</span>\t<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;errLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> status = res.<span class="property">statusCode</span> ? res.<span class="property">statusCode</span> : <span class="number">500</span> <span class="comment">// server error</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">status</span>(status)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 為 RTK Query 提供 isError</span></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: err.<span class="property">message</span>, <span class="attr">isError</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = errorHandler</span><br></pre></td></tr></table></figure>

<h1 id="Frontend"><a href="#Frontend" class="headerlink" title="Frontend"></a>Frontend</h1><h2 id="Note-jsx"><a href="#Note-jsx" class="headerlink" title="Note.jsx"></a>Note.jsx</h2><p>將 Note 組件改為 memorized component，使其不會因為父組件的變動而重新渲染，只會因自身組件的數據改變而重新渲染。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/Note.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; memo &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Note</span> = (<span class="params">&#123; noteId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[noteId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/notes/<span class="subst">$&#123;noteId&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell note__status&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;note.completed ? (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--completed&quot;</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ) : (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--open&quot;</span>&gt;</span>Open<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.title&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> memoizedNote = <span class="title function_">memo</span>(<span class="title class_">Note</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> memoizedNote</span><br></pre></td></tr></table></figure>

<h2 id="User-jsx"><a href="#User-jsx" class="headerlink" title="User.jsx"></a>User.jsx</h2><p>與 Note.jsx 相同，將組件改為 memorized component。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/User.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; memo &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">User</span> = (<span class="params">&#123; userId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">user</span>: data?.<span class="property">entities</span>[userId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/users/<span class="subst">$&#123;userId&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> userRolesString = user.<span class="property">roles</span>.<span class="title function_">toString</span>().<span class="title function_">replaceAll</span>(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;, &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> cellStatus = user.<span class="property">active</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;table__cell--inactive&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;user.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;userRolesString&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> memoizedUser = <span class="title function_">memo</span>(<span class="title class_">User</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> memoizedUser</span><br></pre></td></tr></table></figure>

<h2 id="EditNote-jsx"><a href="#EditNote-jsx" class="headerlink" title="EditNote.jsx"></a>EditNote.jsx</h2><p>增加編輯 Note 的權限限制。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNote.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNoteForm</span> <span class="keyword">from</span> <span class="string">&quot;./EditNoteForm&quot;</span></span><br><span class="line"><span class="keyword">import</span> useAuth <span class="keyword">from</span> <span class="string">&quot;../../hooks/useAuth&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNote</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = <span class="title function_">useParams</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; username, isManager, isAdmin &#125; = <span class="title function_">useAuth</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[id],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; users &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">users</span>: data?.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> data?.<span class="property">entities</span>[id]),</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!note || !users.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!isManager &amp;&amp; !isAdmin) &#123;</span><br><span class="line">    <span class="keyword">if</span> (note.<span class="property">username</span> !== username) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>No access<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">EditNoteForm</span> <span class="attr">note</span>=<span class="string">&#123;note&#125;</span> <span class="attr">users</span>=<span class="string">&#123;users&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNote</span></span><br></pre></td></tr></table></figure>

<h2 id="useTitle-js"><a href="#useTitle-js" class="headerlink" title="useTitle.js"></a>useTitle.js</h2><p>改變網頁 title 的 hooks。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// hooks/useTitle.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useTitle</span> = (<span class="params">title</span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> prevTitle = <span class="variable language_">document</span>.<span class="property">title</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = title</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> (<span class="variable language_">document</span>.<span class="property">title</span> = prevTitle)</span><br><span class="line">  &#125;, [title])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useTitle</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>MERN - Deploy Full Stack App</title>
    <url>/MERN-Deploy-Full-Stack-App/</url>
    <content><![CDATA[<p>使用 <a href="https://render.com/">render</a> 部署前端頁面及後端 API。</p>
<span id="more"></span>

<h1 id="Frontend-前置作業"><a href="#Frontend-前置作業" class="headerlink" title="Frontend - 前置作業"></a>Frontend - 前置作業</h1><p>安裝 disable-react-devtools :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @fvilers/disable-react-devtools</span><br></pre></td></tr></table></figure>

<h2 id="main-jsx"><a href="#main-jsx" class="headerlink" title="main.jsx"></a>main.jsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; disableReactDevTools &#125; <span class="keyword">from</span> <span class="string">&quot;@fvilers/disable-react-devtools&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;./app/store&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&quot;production&quot;</span>) &#123;</span><br><span class="line">  <span class="title function_">disableReactDevTools</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="store-js"><a href="#store-js" class="headerlink" title="store.js"></a>store.js</h2><p>將 <code>devTools</code> 屬性設為 <code>false</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/store.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setupListeners &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;./api/apiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> authReducer <span class="keyword">from</span> <span class="string">&quot;../features/auth/authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">configureStore</span>(&#123;</span><br><span class="line">  <span class="attr">reducer</span>: &#123;</span><br><span class="line">    [apiSlice.<span class="property">reducerPath</span>]: apiSlice.<span class="property">reducer</span>,</span><br><span class="line">    <span class="attr">auth</span>: authReducer,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">middleware</span>: <span class="function"><span class="params">getDefaultMiddleware</span> =&gt;</span></span><br><span class="line">    <span class="title function_">getDefaultMiddleware</span>().<span class="title function_">concat</span>(apiSlice.<span class="property">middleware</span>),</span><br><span class="line">  <span class="attr">devTools</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 refetchOnFocus 與 refetchOnReconnect</span></span><br><span class="line"><span class="title function_">setupListeners</span>(store.<span class="property">dispatch</span>)</span><br></pre></td></tr></table></figure>

<h2 id="apiSlice-js"><a href="#apiSlice-js" class="headerlink" title="apiSlice.js"></a>apiSlice.js</h2><p>將 <code>baseUrl</code> 修改為後端伺服器的 url。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/api/apiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApi, fetchBaseQuery &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query/react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; setCredentials &#125; <span class="keyword">from</span> <span class="string">&quot;../../features/auth/authSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseQuery = <span class="title function_">fetchBaseQuery</span>(&#123;</span><br><span class="line">  <span class="comment">// 後端伺服器的 url !</span></span><br><span class="line">  <span class="attr">baseUrl</span>: <span class="string">&quot;https://technotes-api-msr9.onrender.com&quot;</span>,</span><br><span class="line">  <span class="comment">// 在每個請求中都發送 token</span></span><br><span class="line">  <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">  <span class="comment">// 設置請求 headers</span></span><br><span class="line">  <span class="attr">prepareHeaders</span>: <span class="function">(<span class="params">headers, &#123; getState &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = <span class="title function_">getState</span>().<span class="property">auth</span>.<span class="property">token</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      headers.<span class="title function_">set</span>(<span class="string">&quot;Authorization&quot;</span>, <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> headers</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">baseQueryWithReauth</span> = <span class="keyword">async</span> (<span class="params">args, api, extraOptions</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(args, api, extraOptions)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (result?.<span class="property">error</span>?.<span class="property">status</span> === <span class="number">403</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;sending refresh token&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 發送 refresh 請求與 refresh token 以取得新的 access token</span></span><br><span class="line">    <span class="keyword">const</span> refreshResult = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(<span class="string">&quot;/auth/refresh&quot;</span>, api, extraOptions)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (refreshResult.<span class="property">data</span>) &#123;</span><br><span class="line">      <span class="comment">// 儲存新的 token</span></span><br><span class="line">      api.<span class="title function_">dispatch</span>(<span class="title function_">setCredentials</span>(&#123; ...refreshResult.<span class="property">data</span> &#125;))</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 以新的 access token 重新請求</span></span><br><span class="line">      result = <span class="keyword">await</span> <span class="title function_">baseQuery</span>(args, api, extraOptions)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (refreshResult?.<span class="property">error</span>?.<span class="property">status</span> === <span class="number">403</span>) &#123;</span><br><span class="line">        refreshResult.<span class="property">error</span>.<span class="property">data</span>.<span class="property">message</span> = <span class="string">&quot;Your login has expired.&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> refreshResult</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiSlice = <span class="title function_">createApi</span>(&#123;</span><br><span class="line">  <span class="attr">baseQuery</span>: baseQueryWithReauth,</span><br><span class="line">  <span class="attr">tagTypes</span>: [<span class="string">&quot;Note&quot;</span>, <span class="string">&quot;User&quot;</span>],</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function"><span class="params">builder</span> =&gt;</span> (&#123;&#125;),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="Frontend-Deploy"><a href="#Frontend-Deploy" class="headerlink" title="Frontend - Deploy"></a>Frontend - Deploy</h1><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><p>將 Frontend 程式碼上傳至 GitHub 後，使用 <a href="https://render.com/">render</a> 部署靜態網站。</p>
<ol>
<li><p>創建 Static Site(靜態網站) : 選擇要連結的 repository。</p>
</li>
<li><p>基礎設定</p>
<blockquote>
<p>Publish directory : 因使用 vite 開發，所以設為 dist。</p>
</blockquote>
<p><img src="/MERN-Deploy-Full-Stack-App/basic-setting.JPG" alt="基礎設定畫面"></p>
</li>
<li><p>Redirects&#x2F;Rewrites 設定 : 使 refresh 正常運作。<br><img src="/MERN-Deploy-Full-Stack-App/redirect-setting.JPG" alt="重定向設定畫面"></p>
</li>
<li><p>建立成功<br><img src="/MERN-Deploy-Full-Stack-App/build-success.JPG" alt="建立成功畫面"></p>
</li>
</ol>
<h1 id="Backend-前置作業"><a href="#Backend-前置作業" class="headerlink" title="Backend - 前置作業"></a>Backend - 前置作業</h1><h2 id="allowedOrigins-js"><a href="#allowedOrigins-js" class="headerlink" title="allowedOrigins.js"></a>allowedOrigins.js</h2><p>將允許訪問的 url 設為前端靜態網站的 url。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/allowedOrigin.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = [<span class="string">&quot;https://technotes-6dqc.onrender.com&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = allowedOrigins</span><br></pre></td></tr></table></figure>

<h1 id="Backend-Deploy"><a href="#Backend-Deploy" class="headerlink" title="Backend - Deploy"></a>Backend - Deploy</h1><h2 id="render-1"><a href="#render-1" class="headerlink" title="render"></a>render</h2><p>如同 Frontend ，將程式碼上傳至 GitHub 後，使用 <a href="https://render.com/">render</a> 部署後端 API。</p>
<ol>
<li><p>創建 Web Service : 選擇要連結的 repository。</p>
</li>
<li><p>基礎設定<br><img src="/MERN-Deploy-Full-Stack-App/backend-setting.JPG" alt="基礎設定畫面"></p>
</li>
<li><p>設定 Environment</p>
<blockquote>
<p>NODE_VERSION : 16.16.0</p>
</blockquote>
<p><img src="/MERN-Deploy-Full-Stack-App/env-setting.JPG" alt="Environment 設定畫面"></p>
</li>
<li><p>建立成功<br><img src="/MERN-Deploy-Full-Stack-App/backend-success.JPG" alt="建立成功畫面"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>MongoDB</tag>
        <tag>React</tag>
        <tag>Deploy</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - JS Engine and Runtime</title>
    <url>/JavaScript-JS-Engine-and-Runtime/</url>
    <content><![CDATA[<p>JS 引擎中包含 Call Stack 與 Heap，在程式碼進入 Call Stack 之前，會先進行解析與編譯的過程，JavaScript 為即時編譯語言，可以比直譯語言更快的執行程式碼，提升運行速度。</p>
<span id="more"></span>

<h1 id="JS-引擎"><a href="#JS-引擎" class="headerlink" title="JS 引擎"></a>JS 引擎</h1><p>引擎中包含兩個部分 :</p>
<ol>
<li>呼叫堆疊(Call Stack) : 程式的執行區域。</li>
<li>堆積(Heap) : 物件儲存的區域。</li>
</ol>
<p><img src="/JavaScript-JS-Engine-and-Runtime/js_engine.JPG" alt="JavaScript 引擎"></p>
<h2 id="直譯-amp-編譯-amp-即時編譯"><a href="#直譯-amp-編譯-amp-即時編譯" class="headerlink" title="直譯 &amp; 編譯 &amp; 即時編譯"></a>直譯 &amp; 編譯 &amp; 即時編譯</h2><p>將程式語言轉換成機器語言的過程。</p>
<p>直譯(Interpretation) : 程式碼一行一行的執行，同時轉換成機器碼。<br><img src="/JavaScript-JS-Engine-and-Runtime/interpretation.JPG" alt="Interpretation"></p>
<p>編譯(Compilation) : 程式碼先編譯成機器碼，建立 protable file，之後隨時執行程式。<br><img src="/JavaScript-JS-Engine-and-Runtime/compilation.JPG" alt="Compilation"></p>
<p>即時編譯(Just-in-time compilation) : 程式碼先編譯成機器碼，之後立刻執行程式。<br><img src="/JavaScript-JS-Engine-and-Runtime/jit.JPG" alt="JIT compilation"></p>
<h2 id="即時編譯過程"><a href="#即時編譯過程" class="headerlink" title="即時編譯過程"></a>即時編譯過程</h2><p><img src="/JavaScript-JS-Engine-and-Runtime/js_engine_process.JPG" alt="JS engine process"><br>JavaScript 的即時編譯過程 :</p>
<ol>
<li>解析(Parsing) : 將程式碼解析成 AST(abstract syntax tree ，抽象語法樹)，並檢查語法錯誤。</li>
<li>編譯(Compilation) : 將 AST 編譯成機器語言。<ul>
<li>為了盡速執行，所以先產生未優化的機器碼。</li>
</ul>
</li>
<li>執行(Execution) : 立即於 call stack 中執行。</li>
<li>優化(Optimization) : 將最初編譯的未優化機器碼進行優化，並重新編譯。</li>
</ol>
<h1 id="Runtime"><a href="#Runtime" class="headerlink" title="Runtime"></a>Runtime</h1><p>瀏覽器中的 Runtime :<br><img src="/JavaScript-JS-Engine-and-Runtime/browser_runtime.JPG" alt="瀏覽器中的 Runtime"></p>
<p>Node.js 中的 Runtime :<br><img src="/JavaScript-JS-Engine-and-Runtime/node_runtime.JPG" alt="Node.js 中的 Runtime"></p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - 作用域(Scope)與作用域鏈(Scope Chain)</title>
    <url>/JavaScript-%E4%BD%9C%E7%94%A8%E5%9F%9F-Scope-%E8%88%87%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%8F%88-Scope-Chain/</url>
    <content><![CDATA[<p>作用域定義 JavaScript 中變數的影響範圍。作用域鏈為作用域對父級作用域的引用形成的關聯。</p>
<span id="more"></span>

<h1 id="作用域-Scope"><a href="#作用域-Scope" class="headerlink" title="作用域(Scope)"></a>作用域(Scope)</h1><p>程式碼中定義變數時，這些變數在程式中的可見性(visibility)和可存取性(accessibility)的範圍。</p>
<p><a href="https://www.w3schools.com/js/js_scope.asp">w3schools</a> 上描述 :</p>
<blockquote>
<p>Scope determines the accessibility (visibility) of variables.</p>
</blockquote>
<p>JavaScript 有下列作用域 :</p>
<ul>
<li>全域作用域(Global Scope)</li>
<li>函式作用域(Function Scope)</li>
<li>區塊作用域(Block Scope)</li>
</ul>
<h2 id="全域作用域-Global-Scope"><a href="#全域作用域-Global-Scope" class="headerlink" title="全域作用域(Global Scope)"></a>全域作用域(Global Scope)</h2><p>在函式(function)及區塊(block)外宣告的變數，可以在任何地方被存取。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;ABen&quot;</span> <span class="comment">// Global scope</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> age = <span class="number">2</span> <span class="comment">// Global scope</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> color = <span class="string">&quot;brindle&quot;</span> <span class="comment">// Global scope</span></span><br></pre></td></tr></table></figure>

<h2 id="函式作用域-Function-Scope"><a href="#函式作用域-Function-Scope" class="headerlink" title="函式作用域(Function Scope)"></a>函式作用域(Function Scope)</h2><p>每一個函式都會建立一個函式作用域。在函式內部宣告的變數，只能在函式中被存取。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> name = <span class="string">&quot;ABen&quot;</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name) <span class="comment">// ABen</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>()</span><br></pre></td></tr></table></figure>

<p>以 <code>var</code> 宣告的變數具有函式作用域 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> scope = <span class="string">&quot;function scope&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(scope) <span class="comment">// function scope</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(scope) <span class="comment">// ReferenceError: scope is not defined</span></span><br></pre></td></tr></table></figure>

<p>在<strong>嚴格模式</strong>下，函式為區塊作用域 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">func</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;block scope&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">func</span>() <span class="comment">// block scope</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func</span>() <span class="comment">// ReferenceError: func is not defined</span></span><br></pre></td></tr></table></figure>

<h2 id="區塊作用域-Block-Scope"><a href="#區塊作用域-Block-Scope" class="headerlink" title="區塊作用域(Block Scope)"></a>區塊作用域(Block Scope)</h2><p>因 ES6 的 <code>let</code> 與 <code>const</code> 變數宣告，<code>&#123;&#125;</code>內部宣告的變數於外部無法存取。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i) <span class="comment">// Uncaught ReferenceError: i is not defined</span></span><br></pre></td></tr></table></figure>

<h1 id="作用域鏈-Scope-Chain"><a href="#作用域鏈-Scope-Chain" class="headerlink" title="作用域鏈(Scope Chain)"></a>作用域鏈(Scope Chain)</h1><p>作用域擁有對父級作用域變數的引用，因此多個嵌套的作用域即形成作用域鏈。</p>
<p>變數查找(Variable Lookup) : 當一個作用域中需要使用某個變數，但在當前作用域下無法存取時，會在作用域鏈中查找，父層作用域是否存在該變數，若最終在全域沒找到則拋出錯誤。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="string">&quot;ABen&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">first</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> age = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">second</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> color = <span class="string">&quot;brindle&quot;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span> is a <span class="subst">$&#123;age&#125;</span>-year-old <span class="subst">$&#123;color&#125;</span> dog.`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">second</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">first</span>() <span class="comment">// ABen is a 2-year-old brindle dog.</span></span><br></pre></td></tr></table></figure>

<p>程式碼中在 second 函式存取的 <code>name</code> 與 <code>age</code> 並非是在自身函式內部宣告的變數，而是通過作用域鏈向外部作用域查找所取得的變數。</p>
<h1 id="語彙環境-Lexical-Environment"><a href="#語彙環境-Lexical-Environment" class="headerlink" title="語彙環境(Lexical Environment)"></a>語彙環境(Lexical Environment)</h1><p>是 JS 引擎內部的(抽象)結構，儲存變數和函式名稱與對應的物件或原始值之間的映射關係。每個語彙環境會保有對父級語彙環境的引用。</p>
<p>當定義一個變數或函式時，它們會被儲存在當前的語彙環境中。當在程式碼中使用這些變數時，JS 引擎會通過查找語彙環境鏈來找到對應的值。</p>
<p>語彙環境由兩部分組成 :</p>
<ol>
<li>環境紀錄(Environmental Record) : 保存當前語彙環境的變數資料。</li>
<li>外部語彙環境的引用(a reference to outer lexical environment) : 保存對父級語彙環境的引用。</li>
</ol>
<h1 id="語彙範疇-Lexical-Scope"><a href="#語彙範疇-Lexical-Scope" class="headerlink" title="語彙範疇(Lexical Scope)"></a>語彙範疇(Lexical Scope)</h1><p>程式執行時 JavaScript 是如何將值對應到正確的變數呢 ?</p>
<p>程式語言一般有兩種類型 :</p>
<ol>
<li>靜態範疇(Static Scoping) :<ul>
<li>注重變數在程式碼中聲明的位置。當前位置找不到變數則向父級查找。</li>
<li>C、Java、JavaScript、Python 等語言採用靜態範疇。</li>
</ul>
</li>
<li>動態範疇(Dynamic Scoping) :<ul>
<li>注重函式呼叫的位置。</li>
<li>Perl 採用動態範疇。</li>
</ul>
</li>
</ol>
<p>程式範例 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;ABen&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">boo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> name = <span class="string">&quot;Black&quot;</span></span><br><span class="line">  <span class="title function_">foo</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">boo</span>() <span class="comment">// ABen</span></span><br></pre></td></tr></table></figure>

<p>上面的程式在全域作用域及函式作用域中分別各宣告一個 <code>name</code> 變數，在 boo 函式執行時調用了 foo 函式，因為 JavaScript 採用靜態範疇，所以當在 foo 中找不到 <code>name</code> 時，不會因為是在 boo 中被呼叫就使用 boo 中宣告的 <code>name</code>，而是向當前位置的父級範疇查找，最後就在全域中取得變數。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a><br><a href="https://medium.com/@anilakgunes/scope-lexical-environment-and-scope-chain-in-javascript-559aadb7dca8">Anıl Akgüneş - Scope, Lexical Environment and Scope Chain in JavaScript</a><br><a href="https://medium.com/itsems-frontend/javascript-scope-and-scope-chain-ca17a1068c96">itsems - [JavaScript] Javascript 的作用域 (Scope) 與範圍鏈 (Scope Chain)：往外找</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - 執行環境(Execution Context)與執行堆疊(Call Stack)</title>
    <url>/JavaScript-%E5%9F%B7%E8%A1%8C%E7%92%B0%E5%A2%83-Execution-Context-%E8%88%87%E5%91%BC%E5%8F%AB%E5%A0%86%E7%96%8A-Call-Stack/</url>
    <content><![CDATA[<p>每呼叫一個函式就會產生一個 Execution Context，並且放入 Call Stack 中等待執行，JavaScript 就是藉由 Call<br>Stack 來追蹤程式的運行。</p>
<span id="more"></span>

<h1 id="執行環境-Execution-Context"><a href="#執行環境-Execution-Context" class="headerlink" title="執行環境(Execution Context)"></a>執行環境(Execution Context)</h1><p>全域與函式程式碼的 JS 內部構造。</p>
<p>JavaScript 的兩種執行環境 :</p>
<ul>
<li>全域執行環境(Global Execution Context)</li>
<li>函式執行環境(Function Execution Context)</li>
</ul>
<p>執行環境包含兩個階段 : 創建階段(creation phase)、執行階段(execution phase)。</p>
<h2 id="全域執行環境-Global-Execution-Context"><a href="#全域執行環境-Global-Execution-Context" class="headerlink" title="全域執行環境(Global Execution Context)"></a>全域執行環境(Global Execution Context)</h2><p>一開始執行 JS 程式碼時所創建的執行環境。</p>
<p>創建階段(creation phase) :</p>
<ol>
<li>創建 global object。(瀏覽器的 window object 或 Node.js 的 global object。)</li>
<li>建立 scope。</li>
<li>創建 <code>this</code>，並綁定至 global object。</li>
<li>將 variables、class 和 function 分配至記憶體。(hoisting)</li>
</ol>
<p>執行階段(execution phase) :</p>
<ol>
<li>逐行執行程式碼。</li>
<li>遇到遞迴時，使用 Call Stack 排定執行順序。</li>
</ol>
<h2 id="函式執行環境-Function-Execution-Context"><a href="#函式執行環境-Function-Execution-Context" class="headerlink" title="函式執行環境(Function Execution Context)"></a>函式執行環境(Function Execution Context)</h2><p>每次調用函式即創建的執行環境。</p>
<p>創建階段(creation phase) :</p>
<ol>
<li>創建 arguments object。</li>
<li>建立 scope。</li>
<li>創建 <code>this</code>。</li>
<li>將 variables、class 和 function 分配至記憶體。(hoisting)</li>
</ol>
<p>執行階段(execution phase) :</p>
<ol>
<li>逐行執行程式碼。</li>
<li>遇到遞迴時，使用 Call Stack 排定執行順序。</li>
</ol>
<h1 id="呼叫堆疊-Call-Stack"><a href="#呼叫堆疊-Call-Stack" class="headerlink" title="呼叫堆疊(Call Stack)"></a>呼叫堆疊(Call Stack)</h1><p>是 JS 引擎追蹤本身在調用多個函式的程式碼中所在位置的機制。可以幫助我們知道 JS 引擎當前正在運行什麼函式，以及該從函式中調用那些函式。</p>
<p>JavaScript 為單執行緒(single thread)的程式語言，指一次只能執行一個任務，而其他任務會依序添加到堆疊中，等待被執行。</p>
<blockquote>
<p>堆疊(Stack) : 具有後進先出(LIFO, Last In First Out)特性的資料結構。</p>
</blockquote>
<p>執行以下程式碼 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">func1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func1 開始執行&quot;</span>)</span><br><span class="line">  <span class="title function_">func2</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func1 結束執行&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">func2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func2 開始執行&quot;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;func2 結束執行&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">func1</span>()</span><br><span class="line"><span class="comment">// func1 開始執行</span></span><br><span class="line"><span class="comment">// func2 開始執行</span></span><br><span class="line"><span class="comment">// func2 結束執行</span></span><br><span class="line"><span class="comment">// func1 結束執行</span></span><br></pre></td></tr></table></figure>

<p>Call Stack 看起來會像 :<br><img src="/JavaScript-%E5%9F%B7%E8%A1%8C%E7%92%B0%E5%A2%83-Execution-Context-%E8%88%87%E5%91%BC%E5%8F%AB%E5%A0%86%E7%96%8A-Call-Stack/call_stack.jpg" alt="Call Stack"></p>
<p>執行流程 :</p>
<ol>
<li>首先處於全域執行環境(Global Execution Context)的程式會先進入 stack。</li>
<li>func1 被呼叫，放入 stack 的最上方，並執行函式。執行 func1 過程中呼叫 func2，停止執行 func1。</li>
<li>func2 被呼叫，將其放入 stack 的最上方，並執行函式。執行結束後將函式從 stack 中移除。</li>
<li>從 func1 停止位置繼續執行程式，完成後從 stack 中移除。</li>
<li>程式執行完畢，便將全域執行環境從 stack 中移除。</li>
</ol>
<blockquote>
<p>若 Call Stack 堆疊過高，超出記憶體所分配的空間，會導致 <strong>stack overflow</strong> 的問題。</p>
</blockquote>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://www.udemy.com/course/wilson-full-stack-web-development/">Wilson Ren - 2023 網頁全端開發</a><br><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - 提升(Hoisting)與暫時死區(TDZ)</title>
    <url>/JavaScript-%E6%8F%90%E5%8D%87-Hoisting-%E8%88%87%E6%9A%AB%E6%99%82%E6%AD%BB%E5%8D%80-TDZ/</url>
    <content><![CDATA[<p>JavaScript 在編譯階段，會掃描宣告的變數及函式，後儲存在 variable object 裡，使它們可以在宣告前被存取。</p>
<span id="more"></span>

<h1 id="提升-Hoisting"><a href="#提升-Hoisting" class="headerlink" title="提升(Hoisting)"></a>提升(Hoisting)</h1><p>JavaScript 在執行程式碼之前(編譯階段)，會先掃描程式中宣告的變數，並將它們儲存在變數環境物件(variable environment object)中，使某些類型的變數在宣告之前允許被存取。</p>
<table>
  <tr>
    <td></td>
    <td align="center">提升</td>
    <td align="center">原始值</td>
    <td align="center">作用域</td>
  </tr>
  <tr>
    <td align="center">函式宣告(function declaration)</td>
    <td align="center">⭕</td>
    <td align="center">實際函式</td>
    <td align="center">區塊作用域</td>
  </tr>
  <tr>
    <td align="center">var 宣告的變數</td>
    <td align="center">⭕</td>
    <td align="center">undefined</td>
    <td align="center">函式作用域</td>
  </tr>
  <tr>
    <td align="center">let / const 宣告的變數</td>
    <td align="center">⭕</td>
    <td align="center">&lt;uninitialized&gt;, TDZ</td>
    <td align="center">區塊作用域</td>
  </tr>
  <tr>
    <td align="center">函式表達式(function expression)、箭頭函式(arrow function)</td>
    <td align="center" colspan="3">跟據 var 宣告或 let / const 宣告而不同</td>
  </tr>
</table>

<h2 id="let-與-const-的提升"><a href="#let-與-const-的提升" class="headerlink" title="let 與 const 的提升"></a>let 與 const 的提升</h2><p>以 let 或 const 宣告的變數也會提升，但提升後的行為與 var 變數不同，初始值被設定為 unintialized，因此在宣告前存取變數會拋出 <code>ReferenceError: Cannot access &#39;a&#39; before initialization</code> 的錯誤。</p>
<p>程式範例 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// ReferenceError: Cannot access &#x27;a&#x27; before initialization</span></span><br><span class="line">  <span class="keyword">let</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<h2 id="為什麼需要提升"><a href="#為什麼需要提升" class="headerlink" title="為什麼需要提升 ?"></a>為什麼需要提升 ?</h2><ol>
<li>在任何地方呼叫函式，不一定要先宣告後呼叫。</li>
<li>函式可以互相呼叫。</li>
</ol>
<h2 id="提升如何運作"><a href="#提升如何運作" class="headerlink" title="提升如何運作 ?"></a>提升如何運作 ?</h2><p>當呼叫一個函式時，即產生一個執行環境(Execution Context，以下簡稱 EC)，每個 EC 會有相對應的 variable object(以下簡稱 VO)，在 EC 中宣告的變數及函式都會儲存在 VO 中，若是函式，參數也會儲存到 VO 裡。</p>
<p>在進入 EC 時，JS 引擎會依照以下順序將變數儲存到 VO 中 :</p>
<p>對於函式的參數，會被儲存為 VO 中的屬性，若是沒有傳值，會被初始化為 undefined :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a, b, c</span>) &#123;&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<p>那 VO 會像 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="literal">undefined</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>對於函式宣告，同樣會儲存在 VO 裡面，值為函式的回傳值 :<br>假如 VO 中已有同名屬性，就會將其值覆蓋，</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p>所以 VO 會像 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="keyword">function</span> a</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後是變數宣告，同樣存在 VO 裡面，值設為 undefined :<br>若 VO 中已存在同名屬性，值不會改變。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>

<p>因此 VO 會像 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後總結一下，當程式執行進入 EC，會依照順序做三件事 :</p>
<ol>
<li>將參數存入 VO 並設定值，若無傳值則為 undefined。</li>
<li>將函式宣告存入 VO，若已有同名屬性則將其值覆蓋。</li>
<li>將變數宣告存入 VO，若已有同名屬性則將其忽略。</li>
</ol>
<h1 id="暫時死區-TDZ"><a href="#暫時死區-TDZ" class="headerlink" title="暫時死區(TDZ)"></a>暫時死區(TDZ)</h1><p>Temporal Dead Zone。指在變數「提升之後」及「賦值之前」的期間。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ---- firstName 的暫時死區 ----</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(firstName) <span class="comment">// ReferenceError: Cannot access &#x27;firstName&#x27; before initialization</span></span><br><span class="line"><span class="comment">// ----------------------------</span></span><br><span class="line"><span class="keyword">const</span> firstName = <span class="string">&quot;ABen&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color) <span class="comment">// ReferenceError: color is not defined</span></span><br></pre></td></tr></table></figure>

<p>從上面的程式碼中可以看出，因為 JS 引擎在程式執行前會先掃描程式碼中的變數，進而知道變數尚未初始化，所以若在變數宣告之前存取變數，引擎會將暫時死區中的變數值設為 uninitialized。當程式執行到宣告變數的地方，離開該變數的暫時死區，才可以被存取。</p>
<h2 id="為什麼需要暫時死區"><a href="#為什麼需要暫時死區" class="headerlink" title="為什麼需要暫時死區 ?"></a>為什麼需要暫時死區 ?</h2><ol>
<li>避免在宣告前使用變數。</li>
<li>為了實作 <strong>const</strong>。<ul>
<li>假如沒有暫時死區，若在以 const 宣告變數前存取該變數，那這個變數就會像以 var 宣告的變數一樣，初始值為 undefined，如此一來就違背 const 為常量的定義。</li>
</ul>
</li>
</ol>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://blog.techbridge.cc/2018/11/10/javascript-hoisting/">huli - 我知道你懂 hoisting，可是你了解到多深？</a><br><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - this ?</title>
    <url>/JavaScript-this/</url>
    <content><![CDATA[<p>在 JavaScript 中，<code>this</code> 指的是對目前執行環境的 ThisBinding。而在多數情況下，<code>this</code> 會因為函式的呼叫方式而有所不同。</p>
<span id="more"></span>

<h1 id="關於-this"><a href="#關於-this" class="headerlink" title="關於 this"></a>關於 this</h1><ul>
<li>呼叫函式即生成 <code>this</code>，指向當前函式執行環境。</li>
<li><code>this</code> 非靜態值，影響它的因素為函式的呼叫方法。</li>
<li>多數情況下，<code>this</code> 代表呼叫函式的物件。</li>
</ul>
<table>
<thead>
<tr>
<th align="center">呼叫方法</th>
<th align="center">this</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Method</td>
<td align="center">呼叫函式的物件</td>
</tr>
<tr>
<td align="center">Simple function call</td>
<td align="center">undefined(嚴格模式) &#x2F; window(瀏覽器) &#x2F; global(Node.js)</td>
</tr>
<tr>
<td align="center">Arrow function</td>
<td align="center">父級函式的 <code>this</code> (lexical this)</td>
</tr>
<tr>
<td align="center">Event listener</td>
<td align="center">添加事件的 DOM 元素</td>
</tr>
<tr>
<td align="center"><code>call</code>、<code>apply</code>、<code>bind</code></td>
<td align="center">指定綁定的物件</td>
</tr>
</tbody></table>
<h2 id="以方法形式-Method-呼叫函式"><a href="#以方法形式-Method-呼叫函式" class="headerlink" title="以方法形式(Method)呼叫函式"></a>以方法形式(Method)呼叫函式</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;ABen&quot;</span>,</span><br><span class="line">  <span class="attr">year</span>: <span class="number">2021</span>,</span><br><span class="line">  <span class="attr">calcAge</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2023</span> - <span class="variable language_">this</span>.<span class="property">year</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">aben.<span class="title function_">calcAge</span>() <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<p>上面以 aben 物件呼叫 calcAge 方法，<code>this</code> 即指向 aben 物件，所以 <code>this.year</code> 就等於 2021。</p>
<h2 id="直接呼叫函式-Simple-function-call"><a href="#直接呼叫函式-Simple-function-call" class="headerlink" title="直接呼叫函式(Simple function call)"></a>直接呼叫函式(Simple function call)</h2><p>在嚴格模式下， <code>this</code> 為 <code>undefined</code>。在非嚴格模式，瀏覽器中 <code>this</code> 為 <code>window</code>，Node.js 中 <code>this</code> 為 <code>global</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// obj</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> boo = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// window</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">boo</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<p>上面程式中雖然 boo 函式是在 obj 物件的 foo 方法中被呼叫，但因為 boo 函式中沒有特別指明 <code>this</code>，所以預設綁定為 <code>window</code>。</p>
<p>所以 <strong>this 代表的是呼叫函式的物件，而非函式本身</strong>。</p>
<p>而為了使 boo 函式的 <code>this</code> 綁定為 obj 物件，在較舊的程式碼中通常會宣告 <code>self</code> 變數儲存 foo 函式的 <code>this</code> :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// obj</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> self = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">const</span> boo = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(self) <span class="comment">// obj</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">boo</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<p>而在 ES6 之後的方法為使用箭頭函式 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// obj</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">boo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// obj</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">boo</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<h2 id="箭頭函式-Arrow-function"><a href="#箭頭函式-Arrow-function" class="headerlink" title="箭頭函式(Arrow function)"></a>箭頭函式(Arrow function)</h2><p>箭頭函式本身沒有 <code>this</code>，它的 <code>this</code> 必須從父級函式或父級作用域取得。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">boo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// obj</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">boo</span>()</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<p>上面程式碼中因為 boo 函式為箭頭函式，所以 <code>this</code> 為從父級函式 foo 中所取得，指向 obj 物件。</p>
<p>陷阱範例 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">foo</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// window</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>

<p>雖然上面程式中以 obj 呼叫 foo 函式，但因為 foo 函式為箭頭函式，所以從父級作用域取得的 <code>this</code> 為 <code>window</code>。</p>
<p>特別注意，建立物件使用的 <code>&#123;&#125;</code> 不具有區塊作用域 ! 所以 foo 函式的父級作用域為全域作用域。</p>
<p>因此<strong>永遠不要使用箭頭函式作為物件的方法</strong>。</p>
<h2 id="事件監聽-Event-listener"><a href="#事件監聽-Event-listener" class="headerlink" title="事件監聽(Event listener)"></a>事件監聽(Event listener)</h2><p>事件監聽中的 <code>this</code> 為綁定事件的 DOM 元素。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>點我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> btnEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#btn&quot;</span>)</span><br><span class="line"></span><br><span class="line">btnEl.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// &lt;button id=&quot;btn&quot;&gt;點我&lt;/button&gt;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>特別注意，若回調函式為箭頭函式，則 <code>this</code> 為從父級作用域也就是全域作用域取得之 <code>window</code>。</p>
<h2 id="bind-與-call-x2F-apply"><a href="#bind-與-call-x2F-apply" class="headerlink" title="bind 與 call &#x2F; apply"></a>bind 與 call &#x2F; apply</h2><p>使用 <code>bind</code>、<code>call</code>、<code>apply</code> 來強制綁定 <code>this</code>。</p>
<h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><p>借用已建立的函式來創建新的函式，並將指定的物件綁訂為新函式的 <code>this</code> :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">age</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newFunc = getAge.<span class="title function_">bind</span>(aben)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">newFunc</span>()) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<p>也可以在創建新函式的同時預先傳入參數 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">sum</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>) <span class="comment">// window</span></span><br><span class="line">  <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> newFunc = add.<span class="title function_">bind</span>(<span class="variable language_">this</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">newFunc</span>(<span class="number">1</span>)) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<h3 id="call-x2F-apply"><a href="#call-x2F-apply" class="headerlink" title="call &#x2F; apply"></a>call &#x2F; apply</h3><p>使用給定的物件呼叫函式，並將 <code>this</code> 綁定為該物件。</p>
<p>使用 <code>call</code> :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;ABen&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callName</span>(<span class="params">age, breed</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is a <span class="subst">$&#123;age&#125;</span>-year-old <span class="subst">$&#123;breed&#125;</span> breed dog.`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">callName.<span class="title function_">call</span>(aben, <span class="number">2</span>, <span class="string">&quot;mixed&quot;</span>) <span class="comment">// ABen is a 2-year-old mixed breed dog.</span></span><br></pre></td></tr></table></figure>

<p>使用 <code>apply</code> :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;ABen&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callName</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is a <span class="subst">$&#123;args[<span class="number">0</span>]&#125;</span>-year-old <span class="subst">$&#123;args[<span class="number">1</span>]&#125;</span> breed dog.`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">callName.<span class="title function_">apply</span>(aben, [<span class="number">2</span>, <span class="string">&quot;mixed&quot;</span>]) <span class="comment">// ABen is a 2-year-old mixed breed dog.</span></span><br></pre></td></tr></table></figure>

<p>兩者差別在於傳遞參數的類型，<code>call</code> 為一般參數形式傳遞，<code>apply</code> 則是陣列形式傳遞。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><p><a href="https://kuro.tw/posts/2017/10/12/What-is-THIS-in-JavaScript-%E4%B8%8A/">Kuro - What’s THIS in JavaScript ? </a><br><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript - 原始類型(Primitive)與物件類型(Object)</title>
    <url>/JavaScript-%E5%8E%9F%E5%A7%8B%E9%A1%9E%E5%9E%8B-Primitive-%E8%88%87%E7%89%A9%E4%BB%B6%E9%A1%9E%E5%9E%8B-Object/</url>
    <content><![CDATA[<p>原始類型(Primitive)與物件類型(Object)的差別在於兩者儲存的位置以及儲存的值，原始類型存於 Call Stack 中且儲存實際值，物件類型存於 Heap 中且儲存對物件的參考地址。</p>
<span id="more"></span>

<h1 id="原始類型-Primitive"><a href="#原始類型-Primitive" class="headerlink" title="原始類型(Primitive)"></a>原始類型(Primitive)</h1><p>在 JavaScript 中的原始數據類型有 :</p>
<ul>
<li>String</li>
<li>Number</li>
<li>Boolean</li>
<li>undefined</li>
<li>null</li>
<li>BigInt</li>
<li>Symbol</li>
</ul>
<h2 id="call-by-value"><a href="#call-by-value" class="headerlink" title="call by value"></a>call by value</h2><p>原始數據類型操縱的值為實際的賦值(call by value) :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> age = <span class="number">2</span></span><br><span class="line"><span class="keyword">let</span> oldAge = age</span><br><span class="line">age = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age) <span class="comment">// 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(oldAge) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<p>上面程式碼中因為宣告的變數是原始數據類型，所以儲存於 Call Stack 中，首先宣告 <code>age</code> 變數，JS 以變數名稱創建唯一的標識符(Identifier)，然後分配一塊記憶體並提供記憶體位址(Address)，最後將賦值(Value) <code>2</code> 存到記憶體中。</p>
<p>第二步宣告 <code>oldAge</code> 等於 <code>age</code>，JS 先創建標識符，後分配到另一記憶體位置，再將 <code>age</code> 的值存入記憶體。</p>
<p>最後，將 <code>age</code> 重新賦值為 <code>3</code>，JS 通過唯一的標識符，取得儲存 <code>age</code> 的記憶體位址，再將原來的 <code>2</code> 改成 <code>3</code>。</p>
<p>在 JS 引擎中 :<br><img src="/JavaScript-%E5%8E%9F%E5%A7%8B%E9%A1%9E%E5%9E%8B-Primitive-%E8%88%87%E7%89%A9%E4%BB%B6%E9%A1%9E%E5%9E%8B-Object/primitive_in_engine.webp" alt="原始類型儲存方式"></p>
<h1 id="物件類型-Object"><a href="#物件類型-Object" class="headerlink" title="物件類型(Object)"></a>物件類型(Object)</h1><p>在 JavaScript 中的物件類型有 :</p>
<ul>
<li>Object</li>
<li>Function</li>
<li>Array</li>
</ul>
<h2 id="call-by-reference"><a href="#call-by-reference" class="headerlink" title="call by reference"></a>call by reference</h2><p>物件類型操縱的值為對物件的參考地址(call by reference) :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> black = aben</span><br><span class="line">black.<span class="property">age</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;black:&quot;</span>, black) <span class="comment">// &#123;age: 3&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;aben:&quot;</span>, aben) <span class="comment">// &#123;age: 3&#125;</span></span><br></pre></td></tr></table></figure>

<p>上面程式碼中，首先宣告 <code>aben</code> 物件，此物件會直接儲存在 Heap 裡面，JS 在 Call Stack 中創建唯一標識符 <code>aben</code>，分配記憶體空間，而裡面儲存的值為對 Heap 中物件記憶體位址的參考(reference)。</p>
<p>再來，宣告 <code>black</code> 物件等於 <code>aben</code> 物件，JS 同樣創建唯一標識符，分配記憶體空間，同樣儲存 Heap 中 <code>aben</code> 物件記憶體位址的參考，也就是說 <code>black</code> 與 <code>aben</code> 都指向同一物件。</p>
<p>最後 <code>black</code> 物件修改 <code>age</code> 值，因為 <code>black</code> 與 <code>aben</code> 實際上都指向同一物件，所以最終兩者都改為 <code>3</code>。</p>
<p>在 JS 引擎中 :<br><img src="/JavaScript-%E5%8E%9F%E5%A7%8B%E9%A1%9E%E5%9E%8B-Primitive-%E8%88%87%E7%89%A9%E4%BB%B6%E9%A1%9E%E5%9E%8B-Object/object_in_engine.webp" alt="物件類型的儲存方式"></p>
<h2 id="call-by-sharing"><a href="#call-by-sharing" class="headerlink" title="call by sharing"></a>call by sharing</h2><p>讓作為參數傳入的物件與函式中的參數物件共享同一物件。</p>
<p>看看下面的範例 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> aben = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeAge</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  obj = &#123;</span><br><span class="line">    <span class="attr">age</span>: <span class="number">3</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">changeAge</span>(aben)) <span class="comment">// &#123;age: 3&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(aben) <span class="comment">// &#123;age: 2&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>aben</code> 物件竟然還是原來的值，若物件類型是 call by reference 的話，<code>aben</code> 應該要大一歲才對。</p>
<p>這是因為當 <code>aben</code> 物件作為參數傳入函式時，是讓函數中的 <code>obj</code> 參數與 <code>aben</code> 共享一個物件，若是使用 <code>obj.age</code> 的方式重新賦值，那 <code>aben</code> 的年齡確實會改變，但是實際上在函式中卻是將一個新的物件賦值給 <code>obj</code> 參數，這樣 <code>obj</code> 與 <code>aben</code> 就指向不同的物件，也就是說函式執行後另外創建了一個物件，因此 <code>aben</code> 的年齡並沒有改變。</p>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://www.udemy.com/course/the-complete-javascript-course/">Jonas Schmedtmann - The Complete JavaScript Course 2023: From Zero to Expert!</a></li>
<li><a href="https://hulitw.medium.com/variable-and-frontdesk-a53a0440af3c">從博物館寄物櫃理解變數儲存模型</a></li>
<li><a href="https://pjchender.blogspot.com/2016/03/javascriptby-referenceby-value.html">[筆記] 談談 JavaScript 中 by reference 和 by value 的重要觀念</a></li>
<li><a href="https://ithelp.ithome.com.tw/articles/10191057">重新認識 JavaScript: Day 05 JavaScript 是「傳值」或「傳址」？</a></li>
<li><a href="https://medium.com/@mengchiang000/js%E5%9F%BA%E6%9C%AC%E8%A7%80%E5%BF%B5-call-by-value-%E9%82%84%E6%98%AFreference-%E5%8F%88%E6%88%96%E6%98%AF-sharing-22a87ca478fc">JS 基本觀念：call by value 還是 reference 又或是 sharing?</a></li>
</ul>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
