<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Backend - API 的靜態頁面</title>
    <url>/2023/06/08/Backend-API%E7%9A%84%E9%9D%9C%E6%85%8B%E9%A0%81%E9%9D%A2/</url>
    <content><![CDATA[<p>當訪問 API url 時所展示的頁面，用於測試 API 是否可以正常訪問。</p>
<span id="more"></span>

<h1 id="API-的靜態頁面"><a href="#API-的靜態頁面" class="headerlink" title="API 的靜態頁面"></a>API 的靜態頁面</h1><p>安裝 Express :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure>

<h2 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h2><p>在 server.js 中提供靜態頁面，並設置 root 路由。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="root-js"><a href="#root-js" class="headerlink" title="root.js"></a>root.js</h2><p>root 路由中響應 index.html 檔案。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/root.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 響應 index.html 檔案</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;^/$|/index(.html)?&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;index.html&quot;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h2><p>訪問 API 展示 index.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>techNotes API<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 因為 server.js 中有提供 &#x27;/public&#x27; 靜態檔案，所以可以直接找到 style.css --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="404-html"><a href="#404-html" class="headerlink" title="404.html"></a>404.html</h2><p>訪問未知 url 展示 404.html。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- views/404.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Sorry!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The resource you have requested does not exist.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Database</title>
    <url>/2023/06/08/Backend-Database/</url>
    <content><![CDATA[<p>建立 MongoDB Atlas Database ，使用 MongoDB，設定 Models 管理、儲存資料。</p>
<span id="more"></span>

<h1 id="env"><a href="#env" class="headerlink" title=".env"></a>.env</h1><p>安裝 dotenv，用於管理環境變數 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i dotenv</span><br></pre></td></tr></table></figure>

<p>在 server.js 中引入 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="comment">// As early as possible in your application.</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br></pre></td></tr></table></figure>

<p>創建 .env 檔，設定環境變數。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NODE_ENV = development</span><br><span class="line">DATABASE_URI = mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</span><br></pre></td></tr></table></figure>

<h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><h2 id="建立資料庫"><a href="#建立資料庫" class="headerlink" title="建立資料庫"></a>建立資料庫</h2><p><a href="https://www.mongodb.com/cloud/atlas/lp/try4?utm_source=google&utm_campaign=search_gs_pl_evergreen_atlas_core-high-int_prosp-brand_gic-null_apac-tw_ps-all_desktop_eng_lead&utm_term=mongodb%20atlas&utm_medium=cpc_paid_search&utm_ad=e&utm_ad_campaign_id=19638446771&adgroup=144342468903&cq_cmp=19638446771&gad=1&gclid=CjwKCAjw-IWkBhBTEiwA2exyO-W4mhTJ8AVnaRVqQF-w5iIbrhSRQL-VSsydB5Dwwbq0JPe39YzEFxoC4kcQAvD_BwE/" title="MongoDB Atlas">MongoDB Atlas</a> 建立 Database，取得 connection string: <code>mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.zntifa9.mongodb.net/&lt;databasename&gt;?retryWrites=true&amp;w=majority</code></p>
<h2 id="建立-Models"><a href="#建立-Models" class="headerlink" title="建立 Models"></a>建立 Models</h2><p>安裝 mongoose :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i mongoose</span><br></pre></td></tr></table></figure>

<p>創建 User Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// models/User.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> userSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">roles</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: [<span class="title class_">String</span>],</span><br><span class="line">    <span class="attr">default</span>: [<span class="string">&quot;Employee&quot;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">active</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;User&quot;</span>, userSchema)</span><br></pre></td></tr></table></figure>

<p>安裝 @typegoose&#x2F;auto-increment，用於自增項 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @typegoose/auto-increment</span><br></pre></td></tr></table></figure>

<p>創建 Note Model。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AutoIncrementID</span> = <span class="built_in">require</span>(<span class="string">&quot;@typegoose/auto-increment&quot;</span>).<span class="property">AutoIncrementID</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> noteSchema = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">user</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: mongoose.<span class="property">Schema</span>.<span class="property">Types</span>.<span class="property">ObjectId</span>,</span><br><span class="line">      <span class="attr">ref</span>: <span class="string">&quot;User&quot;</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">title</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">text</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">completed</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">ticket</span>: <span class="title class_">Number</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">timestamps</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">noteSchema.<span class="title function_">plugin</span>(<span class="title class_">AutoIncrementID</span>, &#123; <span class="attr">field</span>: <span class="string">&quot;ticket&quot;</span>, <span class="attr">startAt</span>: <span class="number">500</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;Note&quot;</span>, noteSchema)</span><br></pre></td></tr></table></figure>

<h3 id="連接資料庫"><a href="#連接資料庫" class="headerlink" title="連接資料庫"></a>連接資料庫</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/dbConnection.js</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">connectDB</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> mongoose.<span class="title function_">connect</span>(process.<span class="property">env</span>.<span class="property">DATABASE_URI</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = connectDB</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - Middleware</title>
    <url>/2023/06/08/Backend-Middleware/</url>
    <content><![CDATA[<p>Middleware : 中介軟體，在發出 HTTP 請求後，至應用程式收到回應前，處理特定用途的程式。</p>
<span id="more"></span>

<h1 id="Middleware"><a href="#Middleware" class="headerlink" title="Middleware"></a>Middleware</h1><p>安裝 date-fns 與 uuid :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i date-fns uuid</span><br></pre></td></tr></table></figure>

<h2 id="logger-js"><a href="#logger-js" class="headerlink" title="logger.js"></a>logger.js</h2><p>創建 logger.js，紀錄請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/logger.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; format &#125; = <span class="built_in">require</span>(<span class="string">&quot;date-fns&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">v4</span>: uuid &#125; = <span class="built_in">require</span>(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> fsPromises = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="property">promises</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logEvent</span> = <span class="keyword">async</span> (<span class="params">message, logFileName</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> dateTime = <span class="title function_">format</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&quot;yyyyMMdd\tHH:mm:ss&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> logItem = <span class="string">`<span class="subst">$&#123;dateTime&#125;</span>\t<span class="subst">$&#123;uuid()&#125;</span>\t<span class="subst">$&#123;message&#125;</span>\n`</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 若 logs 檔案不存在，則創建 logs</span></span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))) &#123;</span><br><span class="line">      <span class="keyword">await</span> fsPromises.<span class="title function_">mkdir</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">await</span> fsPromises.<span class="title function_">appendFile</span>(</span><br><span class="line">      path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;logs&quot;</span>, logFileName),</span><br><span class="line">      logItem</span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logger</span> = (<span class="params">req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成請求紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(<span class="string">`<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>, <span class="string">&quot;reqLog.log&quot;</span>)</span><br><span class="line">  <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  logEvent,</span><br><span class="line">  logger,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="errorHandler-js"><a href="#errorHandler-js" class="headerlink" title="errorHandler.js"></a>errorHandler.js</h2><p>創建 errorHandler.js，處理錯誤並記錄。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/errorHandler.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./logger&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">errorHandler</span> = (<span class="params">err, req, res, next</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 生成錯誤紀錄</span></span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.name&#125;</span>: <span class="subst">$&#123;err.message&#125;</span>\t<span class="subst">$&#123;req.method&#125;</span>\t<span class="subst">$&#123;req.url&#125;</span>\t<span class="subst">$&#123;req.headers.origin&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;errLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> status = res.<span class="property">statusCode</span> ? res.<span class="property">statusCode</span> : <span class="number">500</span> <span class="comment">// server error</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">status</span>(status)</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: err.<span class="property">message</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = errorHandler</span><br></pre></td></tr></table></figure>

<h2 id="cookie-parser"><a href="#cookie-parser" class="headerlink" title="cookie-parser"></a>cookie-parser</h2><p>安裝 cookie-parser，用於解析 cookie :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cookie-parser</span><br></pre></td></tr></table></figure>

<h2 id="CORS"><a href="#CORS" class="headerlink" title="CORS"></a>CORS</h2><p>安裝 cors，用於解決跨域問題 :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i cors</span><br></pre></td></tr></table></figure>

<p>創建 allowedOrigins.js，設定允許的 url。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/allowedOrigins.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = [</span><br><span class="line">  <span class="comment">// 部署前須修改</span></span><br><span class="line">  <span class="string">&quot;http://localhost:5173&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = allowedOrigins</span><br></pre></td></tr></table></figure>

<p>創建 corsOptions.js，設定 cors 的 options。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/corsOptions.js</span></span><br><span class="line"><span class="keyword">const</span> allowedOrigins = <span class="built_in">require</span>(<span class="string">&quot;./allowedOrigins&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> corsOptions = &#123;</span><br><span class="line">  <span class="attr">origin</span>: <span class="function">(<span class="params">origin, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">indexOf</span>(origin) !== -<span class="number">1</span> || !origin) &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Not allowed by CORS&quot;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">credentials</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">optionsSuccessStatus</span>: <span class="number">200</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = corsOptions</span><br></pre></td></tr></table></figure>

<h2 id="啟用-Middleware"><a href="#啟用-Middleware" class="headerlink" title="啟用 Middleware"></a>啟用 Middleware</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 errorHandler</span></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Backend - API Controllers &amp; Routers</title>
    <url>/2023/06/09/Backend-API-Controllers-Routers/</url>
    <content><![CDATA[<p>設置 API Controllers 及 Routers 處理前端請求，並回應響應數據。</p>
<span id="more"></span>

<h1 id="Controllers"><a href="#Controllers" class="headerlink" title="Controllers"></a>Controllers</h1><p>安裝 bcrypt，用於 hash 密碼。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i bcrypt</span><br></pre></td></tr></table></figure>

<h2 id="usersController-js"><a href="#usersController-js" class="headerlink" title="usersController.js"></a>usersController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/usersController.js</span></span><br><span class="line"><span class="keyword">const</span> bcrypt = <span class="built_in">require</span>(<span class="string">&quot;bcrypt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all users</span></span><br><span class="line"><span class="comment">// @route GET /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllUsers</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> users = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">select</span>(<span class="string">&quot;-password&quot;</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!users) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No users found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">json</span>(users)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new user</span></span><br><span class="line"><span class="comment">// @route POST /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password, roles &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!username || !password) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// hash password</span></span><br><span class="line">  <span class="keyword">const</span> hashedPwd = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>) <span class="comment">// salt rounds</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判斷是否提供 roles</span></span><br><span class="line">  <span class="keyword">const</span> userObject =</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) || !roles.<span class="property">length</span></span><br><span class="line">      ? &#123; username, <span class="attr">password</span>: hashedPwd &#125;</span><br><span class="line">      : &#123; username, <span class="attr">password</span>: hashedPwd, roles &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">create</span>(userObject)</span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`New user <span class="subst">$&#123;username&#125;</span> created`</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid user data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update user</span></span><br><span class="line"><span class="comment">// @route PATCH /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, username, password, roles, active &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    !id ||</span><br><span class="line">    !username ||</span><br><span class="line">    !<span class="title class_">Array</span>.<span class="title function_">isArray</span>(roles) ||</span><br><span class="line">    !roles.<span class="property">length</span> ||</span><br><span class="line">    <span class="keyword">typeof</span> active !== <span class="string">&quot;boolean&quot;</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">      .<span class="title function_">status</span>(<span class="number">400</span>)</span><br><span class="line">      .<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields except password are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 username</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findOne</span>(&#123; username &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate username&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  user.<span class="property">username</span> = username</span><br><span class="line">  user.<span class="property">roles</span> = roles</span><br><span class="line">  user.<span class="property">active</span> = active</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (password) &#123;</span><br><span class="line">    <span class="comment">// hash password</span></span><br><span class="line">    user.<span class="property">password</span> = <span class="keyword">await</span> bcrypt.<span class="title function_">hash</span>(password, <span class="number">10</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedUser = <span class="keyword">await</span> user.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">`<span class="subst">$&#123;updatedUser.username&#125;</span> updated`</span> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Delete user</span></span><br><span class="line"><span class="comment">// @route DELETE /users</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteUser</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User ID Required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">user</span>: id &#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User has assigned notes&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 確認 user 存在</span></span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;User not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> user.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Username <span class="subst">$&#123;result.username&#125;</span> with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllUsers,</span><br><span class="line">  createNewUser,</span><br><span class="line">  updateUser,</span><br><span class="line">  deleteUser,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="notesController-js"><a href="#notesController-js" class="headerlink" title="notesController.js"></a>notesController.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// controllers/notesController.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Note</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/Note&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">User</span> = <span class="built_in">require</span>(<span class="string">&quot;../models/User&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Get all notes</span></span><br><span class="line"><span class="comment">// @route GET /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getAllNotes</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> notes = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!notes.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;No notes found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> notesWithUser = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(</span><br><span class="line">    notes.<span class="title function_">map</span>(<span class="keyword">async</span> (note) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> user = <span class="keyword">await</span> <span class="title class_">User</span>.<span class="title function_">findById</span>(note.<span class="property">user</span>).<span class="title function_">lean</span>().<span class="title function_">exec</span>()</span><br><span class="line">      <span class="keyword">return</span> &#123; ...note, <span class="attr">username</span>: user.<span class="property">username</span> &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(notesWithUser)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Create new note</span></span><br><span class="line"><span class="comment">// @route POST /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createNewNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user, title, text &#125; = req.<span class="property">body</span></span><br><span class="line">  <span class="keyword">if</span> (!user || !title || !text) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">    .<span class="title function_">collation</span>(&#123; <span class="attr">locale</span>: <span class="string">&quot;en&quot;</span>, <span class="attr">strength</span>: <span class="number">2</span> &#125;)</span><br><span class="line">    .<span class="title function_">lean</span>()</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (duplicate) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">create</span>(&#123; user, title, text &#125;)</span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;New note created&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Invalid note data received&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @desc Update note</span></span><br><span class="line"><span class="comment">// @route PATCH /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">updateNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id, user, title, text, completed &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id || !user || !title || !text || <span class="keyword">typeof</span> completed !== <span class="string">&quot;boolean&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;All fields are required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 檢查重複 title</span></span><br><span class="line">  <span class="keyword">const</span> duplicate = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findOne</span>(&#123; title &#125;)</span><br><span class="line">  <span class="keyword">if</span> (duplicate &amp;&amp; duplicate?.<span class="property">_id</span>.<span class="title function_">toString</span>() !== id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">409</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Duplicate note title&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  note.<span class="property">user</span> = user</span><br><span class="line">  note.<span class="property">title</span> = title</span><br><span class="line">  note.<span class="property">text</span> = text</span><br><span class="line">  note.<span class="property">completed</span> = completed</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> updatedNote = <span class="keyword">await</span> note.<span class="title function_">save</span>()</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(<span class="string">`&#x27;<span class="subst">$&#123;updatedNote.title&#125;</span>&#x27; updated`</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// @desc Delete note</span></span><br><span class="line"><span class="comment">// @route DELETE /notes</span></span><br><span class="line"><span class="comment">// @access Private</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">deleteNote</span> = <span class="keyword">async</span> (<span class="params">req, res</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">body</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!id) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note ID required&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> note = <span class="keyword">await</span> <span class="title class_">Note</span>.<span class="title function_">findById</span>(id).<span class="title function_">exec</span>()</span><br><span class="line">  <span class="keyword">if</span> (!note) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;Note not found&quot;</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> note.<span class="title function_">deleteOne</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> reply = <span class="string">`Note &#x27;<span class="subst">$&#123;result.title&#125;</span>&#x27; with ID <span class="subst">$&#123;result._id&#125;</span> deleted`</span></span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">json</span>(reply)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  getAllNotes,</span><br><span class="line">  createNewNote,</span><br><span class="line">  updateNote,</span><br><span class="line">  deleteNote,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Routers"><a href="#Routers" class="headerlink" title="Routers"></a>Routers</h1><h2 id="userRoutes-js"><a href="#userRoutes-js" class="headerlink" title="userRoutes.js"></a>userRoutes.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/userRoutes.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> usersController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/usersController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(usersController.<span class="property">getAllUsers</span>)</span><br><span class="line">  .<span class="title function_">post</span>(usersController.<span class="property">createNewUser</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(usersController.<span class="property">updateUser</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(usersController.<span class="property">deleteUser</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h2 id="noteRouter-js"><a href="#noteRouter-js" class="headerlink" title="noteRouter.js"></a>noteRouter.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// routes/noteRouters.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> notesController = <span class="built_in">require</span>(<span class="string">&quot;../controllers/notesController&quot;</span>)</span><br><span class="line"></span><br><span class="line">router</span><br><span class="line">  .<span class="title function_">route</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">  .<span class="title function_">get</span>(notesController.<span class="property">getAllNotes</span>)</span><br><span class="line">  .<span class="title function_">post</span>(notesController.<span class="property">createNewNote</span>)</span><br><span class="line">  .<span class="title function_">patch</span>(notesController.<span class="property">updateNote</span>)</span><br><span class="line">  .<span class="title function_">delete</span>(notesController.<span class="property">deleteNote</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router</span><br></pre></td></tr></table></figure>

<h1 id="server-js"><a href="#server-js" class="headerlink" title="server.js"></a>server.js</h1><p>安裝 express-async-errors，用於處理異步錯誤，不需編寫 <code>try/catch</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i express-async-errors</span><br></pre></td></tr></table></figure>

<p>啟用 Routers。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// server.js</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;dotenv&quot;</span>).<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&quot;cors&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>)</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;express-async-errors&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; logger, logEvent &#125; = <span class="built_in">require</span>(<span class="string">&quot;./middleware/logger&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> errorHandler = <span class="built_in">require</span>(<span class="string">&quot;./middleware/errorHandler&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> corsOptions = <span class="built_in">require</span>(<span class="string">&quot;./config/corsOptions&quot;</span>)</span><br><span class="line"><span class="keyword">const</span> connectDB = <span class="built_in">require</span>(<span class="string">&quot;./config/dbConnection&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3500</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 連接資料庫</span></span><br><span class="line"><span class="title function_">connectDB</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 logger middleware</span></span><br><span class="line">app.<span class="title function_">use</span>(logger)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cors</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析 json</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 cookie-parser</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供靜態頁面</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;/public&quot;</span>)))</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/root&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Routers</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/users&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/userRoutes&quot;</span>))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/notes&quot;</span>, <span class="built_in">require</span>(<span class="string">&quot;./routes/noteRoutes&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收未知 url，並回應 404 頁面</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;html&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&quot;views&quot;</span>, <span class="string">&quot;404.html&quot;</span>))</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (req.<span class="title function_">accepts</span>(<span class="string">&quot;json&quot;</span>)) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&quot;404 Not Found&quot;</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">type</span>(<span class="string">&quot;txt&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;404 Not Found&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(errorHandler)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connected to MongoDB&quot;</span>)</span><br><span class="line">  app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB 連接失敗</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;error&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">  <span class="title function_">logEvent</span>(</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;err.no&#125;</span>: <span class="subst">$&#123;err.code&#125;</span>\t<span class="subst">$&#123;err.syscall&#125;</span>\t<span class="subst">$&#123;err.hostname&#125;</span>`</span>,</span><br><span class="line">    <span class="string">&quot;mongoErrLog.log&quot;</span></span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Backend</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Express.js</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS - Grid</title>
    <url>/2023/06/17/CSS-Grid/</url>
    <content><![CDATA[<p>不同於 Flex 一維「由上到下」的排版方式，Grid 為二維的 CSS 格線系統，可以定義容器區塊中的 row 及 column，並將元素依照格線規則設置任意的排列布局。</p>
<span id="more"></span>

<h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>定義結構 :</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;A&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;B&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;C&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;D&quot;</span>&gt;</span>D<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>設置固定的 <code>grid-template-rows</code> 與 <code>grid-template-columns</code>，在限制的區域範圍內布局。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span> auto;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-template-areas</span>:</span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B1 B3 B4 B4&quot;</span></span><br><span class="line">    <span class="string">&quot;B2 B2 B2 B2&quot;</span>;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.A</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B1;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d4d2d5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.B</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B2;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfafa6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.C</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B3;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#aa968a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.D</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: B4;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6e6a6f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<iframe src="https://codepen.io/fan94105/embed/bGQdGgg?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h2 id="進階用法"><a href="#進階用法" class="headerlink" title="進階用法"></a>進階用法</h2><p>設置 <code>grid-auto-rows</code> 與 <code>grid-auto-columns</code>，當布局超出範圍時則自動生成格線。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">2px</span> solid <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: <span class="number">1</span>fr;</span><br><span class="line">  <span class="attribute">grid-auto-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.A</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">1</span>/<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#d4d2d5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.B</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">2</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#bfafa6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.C</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">2</span>/<span class="number">4</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">3</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#aa968a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.D</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: <span class="number">4</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">grid-column</span>: <span class="number">3</span>/<span class="number">6</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#6e6a6f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<iframe src="https://codepen.io/fan94105/embed/gOQpbVd?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h1 id="CSS-Grid-屬性"><a href="#CSS-Grid-屬性" class="headerlink" title="CSS Grid 屬性"></a>CSS Grid 屬性</h1><p>內容參考 <a href="https://css-tricks.com/snippets/css/complete-guide-grid/#prop-grid-gap">A Complete Guide to CSS Grid</a>。</p>
<h2 id="Grid-Container"><a href="#Grid-Container" class="headerlink" title="Grid Container"></a>Grid Container</h2><h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><p>設定 grid 容器。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid | inline-grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-template-rows-amp-grid-template-columns"><a href="#grid-template-rows-amp-grid-template-columns" class="headerlink" title="grid-template-rows &amp; grid-template-columns"></a>grid-template-rows &amp; grid-template-columns</h3><p>設定 template 中 rows 與 columns 數量及大小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: ... ...;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: ... ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-template-area"><a href="#grid-template-area" class="headerlink" title="grid-template-area"></a>grid-template-area</h3><p>搭配 Grid Item 的 <code>grid-area</code> 名稱，定義 Grid Item 在 template 上的位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template</span>-area:</span><br><span class="line">    <span class="string">&quot;header header header&quot;</span></span><br><span class="line">    <span class="string">&quot;main main main&quot;</span></span><br><span class="line">    <span class="string">&quot;footer footer footer&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item-a</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: header;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-b</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: main;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.item-c</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: footer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-auto-rows-amp-grid-auto-columns"><a href="#grid-auto-rows-amp-grid-auto-columns" class="headerlink" title="grid-auto-rows &amp; grid-auto-columns"></a>grid-auto-rows &amp; grid-auto-columns</h3><p>不明確指定 rows 與 columns 的數量及大小，而使用自動生成的 grid 網格。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-columns</span>: ...;</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="grid-auto-flow"><a href="#grid-auto-flow" class="headerlink" title="grid-auto-flow"></a>grid-auto-flow</h3><p>設定 Grid Items 的排列方向。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-auto-flow</span>: row | column | row dense | column dense;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>dense</code> : 使較小的項目先填入網格中。可能改變項目顯示順序，不利於 accessibility。</li>
</ul>
<h3 id="gap"><a href="#gap" class="headerlink" title="gap"></a>gap</h3><p>設定 Grid Items 之間的間隔。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">gap</span>: &lt;grid-row-gap&gt; &lt;grid-column-gap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-items"><a href="#justify-items" class="headerlink" title="justify-items"></a>justify-items</h3><p>設定 Grid Items 在網格中的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  justify-items: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>stretch</code> : 預設值，填滿網格。</li>
</ul>
<h3 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h3><p>設定 Grid Items 在網格中的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-items"><a href="#place-items" class="headerlink" title="place-items"></a>place-items</h3><p>同時設定 <code>align-items</code> 與 <code>justify-items</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  place-items: &lt;align-items&gt; &lt;justify-items&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h3><p>設定整體網格在 Grid Container 中的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: start | end | center | stretch | space-around | space-between</span><br><span class="line">    | space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="align-content"><a href="#align-content" class="headerlink" title="align-content"></a>align-content</h3><p>設定整體網格在 Grid Container 中的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: start | end | center | stretch | space-around | space-between |</span><br><span class="line">    space-evenly;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-content"><a href="#place-content" class="headerlink" title="place-content"></a>place-content</h3><p>同時設定 <code>align-content</code> 與 <code>justify-content</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  place-<span class="attribute">content</span>: &lt;align-content&gt; &lt;justify-content&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Grid-Items"><a href="#Grid-Items" class="headerlink" title="Grid Items"></a>Grid Items</h2><h3 id="grid-row-amp-grid-column"><a href="#grid-row-amp-grid-column" class="headerlink" title="grid-row &amp; grid-column"></a>grid-row &amp; grid-column</h3><p>設定 row 與 column 的起始即結束位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-row</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;</span><br><span class="line">  <span class="attribute">grid-column</span>: &lt;start-line&gt; / &lt;end-line&gt; | &lt;start-line&gt; / span &lt;value&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>span</code> : 表示跨越幾個面。</li>
<li>可以以負數表示，<code>-1</code> 為最後一條線。</li>
<li>當沒有設定結束位置時，預設為跨越一個面。</li>
</ul>
<h3 id="grid-area"><a href="#grid-area" class="headerlink" title="grid-area"></a>grid-area</h3><p>設定 Grid Item 的名稱，也可以作為 <code>grid-row-start</code>+<code>grid-column-start</code>+<code>grid-row-end</code>+<code>grid-column-end</code> 的簡寫。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: &lt;name&gt; | &lt;row-start&gt; / &lt;column-start&gt; / &lt;row-end&gt; / &lt;column-end&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="justify-self"><a href="#justify-self" class="headerlink" title="justify-self"></a>justify-self</h3><p>設定 Grid Item 在網格內的主軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  justify-self: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="align-self"><a href="#align-self" class="headerlink" title="align-self"></a>align-self</h3><p>設定 Grid Item 在網格內的次軸對齊。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: start | end | center | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="place-self"><a href="#place-self" class="headerlink" title="place-self"></a>place-self</h3><p>同時設定 <code>align-self</code> 與 <code>justify-self</code>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  place-self: &lt;align-self&gt; &lt;justify-self&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Special-Units-amp-Function"><a href="#Special-Units-amp-Function" class="headerlink" title="Special Units &amp; Function"></a>Special Units &amp; Function</h1><h2 id="fr-units"><a href="#fr-units" class="headerlink" title="fr units"></a>fr units</h2><p>代表剩餘空間的一部分。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">3</span>fr;</span><br></pre></td></tr></table></figure>

<p>上例表示設定兩欄，將空間分為 4 等份，第一欄分配一等份，因此寬度為總網格寬的 1&#x2F;4，第二欄分配三等份，寬度為總網格寬的 3&#x2F;4。</p>
<h2 id="min-content-amp-max-content"><a href="#min-content-amp-max-content" class="headerlink" title="min-content &amp; max-content"></a>min-content &amp; max-content</h2><p>網格大小依內容空間改變。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">grid-template-rows</span>: max-content min-content;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>min-content</code> : 依內容中最長單字的尺寸為整體尺寸。</li>
<li><code>max-content</code> : 依內容的最大尺寸為整體尺寸。</li>
</ul>
<h2 id="fit-content"><a href="#fit-content" class="headerlink" title="fit-content()"></a>fit-content()</h2><p>設定尺寸為 <code>min-content</code> 到給定參數之間的大小。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">fit-content</span>(<span class="number">150px</span>);</span><br></pre></td></tr></table></figure>

<p>上例 <code>fit-content(150px)</code>，表示最終渲染尺寸為 <code>min-content ~ 150px</code> 之間。<br>但若 <code>fit-content()</code> 中的值比 <code>max-content</code> 大，則最終渲染尺寸為 <code>min-content ~ max-content</code> 之間。</p>
<h2 id="minmax"><a href="#minmax" class="headerlink" title="minmax()"></a>minmax()</h2><p>設定尺寸的最小值與最大值。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">minmax</span>(min, max);</span><br></pre></td></tr></table></figure>

<h2 id="repeat"><a href="#repeat" class="headerlink" title="repeat()"></a>repeat()</h2><p>設定重複的尺寸值。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">grid-template-rows</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等同於 */</span></span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">5</span>, <span class="number">1</span>fr);</span><br><span class="line"></span><br><span class="line"><span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(auto-fit, <span class="built_in">minmax</span>(<span class="number">250px</span>, <span class="number">1</span>fr));</span><br></pre></td></tr></table></figure>

<ul>
<li><code>auto-fill</code> : 自動填滿軌道。</li>
<li><code>auto-fit</code> : 延展每一個 Grid Item，填滿軌道。</li>
</ul>
<p><code>auto-fill</code> 與 <code>auto-fit</code> 比較 :  </p>
<iframe src="https://codepen.io/fan94105/embed/abQOyLO?default-tab=css,result&theme-id=dark" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<h1 id="Grid-Garden"><a href="#Grid-Garden" class="headerlink" title="Grid Garden"></a>Grid Garden</h1><p>用來學習 CSS Grid 的 <a href="https://cssgridgarden.com/#zh-tw">遊戲</a>。</p>
]]></content>
      <categories>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>grid</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React Redux &amp; RTK Query</title>
    <url>/2023/06/17/Frontend-React-Redux-RTK-Query/</url>
    <content><![CDATA[<p>使用 Redux 管理 App 中的數據，並藉由 RTK Query 向後端 API 發送請求獲取並快取數據。</p>
<span id="more"></span>

<p>安裝 React Redux 和 Redux Toolkit。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @reduxjs/toolkit react-redux</span><br></pre></td></tr></table></figure>

<h1 id="React-Redux-amp-RTK-Query"><a href="#React-Redux-amp-RTK-Query" class="headerlink" title="React Redux &amp; RTK Query"></a>React Redux &amp; RTK Query</h1><h2 id="apiSlice-js"><a href="#apiSlice-js" class="headerlink" title="apiSlice.js"></a>apiSlice.js</h2><p>建立 apiSlice.js ，集中管理向後端 API 發送請求的方法 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/api/apiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApi, fetchBaseQuery &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query/react&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> apiSlice = <span class="title function_">createApi</span>(&#123;</span><br><span class="line">  <span class="attr">baseQuery</span>: <span class="title function_">fetchBaseQuery</span>(&#123; <span class="attr">baseUrl</span>: <span class="string">&quot;http://localhost:3500&quot;</span> &#125;),</span><br><span class="line">  <span class="attr">tagTypes</span>: [<span class="string">&quot;Note&quot;</span>, <span class="string">&quot;User&quot;</span>],</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;&#125;),</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="store-js"><a href="#store-js" class="headerlink" title="store.js"></a>store.js</h2><p>建立 store 並定義 reducer :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// app/store.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; configureStore &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; setupListeners &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit/query&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;./api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">configureStore</span>(&#123;</span><br><span class="line">  <span class="attr">reducer</span>: &#123;</span><br><span class="line">    [apiSlice.<span class="property">reducerPath</span>]: apiSlice.<span class="property">reducer</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">middleware</span>: <span class="function">(<span class="params">getDefaultMiddleware</span>) =&gt;</span></span><br><span class="line">    <span class="title function_">getDefaultMiddleware</span>().<span class="title function_">concat</span>(apiSlice.<span class="property">middleware</span>),</span><br><span class="line">  <span class="attr">devTools</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 啟用 refetchOnFocus 與 refetchOnReconnect</span></span><br><span class="line"><span class="title function_">setupListeners</span>(store.<span class="property">dispatch</span>)</span><br></pre></td></tr></table></figure>

<p>將 store 提供給 App :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Provider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-redux&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;./app/store&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;/* 向 App 提供 store */&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Provider</span> <span class="attr">store</span>=<span class="string">&#123;store&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="usersApiSlice-js-amp-notesApiSlice-js"><a href="#usersApiSlice-js-amp-notesApiSlice-js" class="headerlink" title="usersApiSlice.js &amp; notesApiSlice.js"></a>usersApiSlice.js &amp; notesApiSlice.js</h2><p>usersApiSlice.js，處理與 user 相關的請求。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/usersApiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSelector, createEntityAdapter &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供數據標準化方法</span></span><br><span class="line"><span class="keyword">const</span> usersAdapter = <span class="title function_">createEntityAdapter</span>(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成空的 &#123;ids: [], entities: &#123;&#125;&#125; 物件</span></span><br><span class="line"><span class="keyword">const</span> initialState = usersAdapter.<span class="title function_">getInitialState</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> usersApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getUsers</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedUsers = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          user.<span class="property">id</span> = user.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> user</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> usersAdapter.<span class="title function_">setAll</span>(initialState, loadedUsers)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useGetUsersQuery &#125; = usersApiSlice</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成新的 selector，並回傳 query 結果物件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> selectUsersResult = usersApiSlice.<span class="property">endpoints</span>.<span class="property">getUsers</span>.<span class="title function_">select</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建 memoized selector</span></span><br><span class="line"><span class="keyword">const</span> selectUsersData = <span class="title function_">createSelector</span>(</span><br><span class="line">  selectUsersResult,</span><br><span class="line">  <span class="function">(<span class="params">usersResult</span>) =&gt;</span> usersResult.<span class="property">data</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 selector</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">selectAll</span>: selectAllUsers,</span><br><span class="line">  <span class="attr">selectById</span>: selectUserById,</span><br><span class="line">  <span class="attr">selectIds</span>: selectUserIds,</span><br><span class="line">&#125; = usersAdapter.<span class="title function_">getSelectors</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> <span class="title function_">selectUsersData</span>(state) ?? initialState)</span><br></pre></td></tr></table></figure>

<p>notesApiSlice.js，處理與 note 相關的請求。程式碼與 usersApiSlice.js 相同，將 user 改為 note 即可。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/notesApiSlice.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createSelector, createEntityAdapter &#125; <span class="keyword">from</span> <span class="string">&quot;@reduxjs/toolkit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; apiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/api/apiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提供數據標準化方法</span></span><br><span class="line"><span class="keyword">const</span> notesAdapter = <span class="title function_">createEntityAdapter</span>(&#123;</span><br><span class="line">  <span class="comment">// 數據排序</span></span><br><span class="line">  <span class="attr">sortComparer</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span></span><br><span class="line">    a.<span class="property">completed</span> === b.<span class="property">completed</span> ? <span class="number">0</span> : a.<span class="property">completed</span> ? <span class="number">1</span> : -<span class="number">1</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成空的 &#123;ids: [], entities: &#123;&#125;&#125; 物件</span></span><br><span class="line"><span class="keyword">const</span> initialState = notesAdapter.<span class="title function_">getInitialState</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notesApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getNotes</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedNotes = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">note</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          note.<span class="property">id</span> = note.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> note</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> notesAdapter.<span class="title function_">setAll</span>(initialState, loadedNotes)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123; useGetNotesQuery &#125; = notesApiSlice</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成新的 selector，並回傳 query 結果物件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> selectNotesResult = notesApiSlice.<span class="property">endpoints</span>.<span class="property">getNotes</span>.<span class="title function_">select</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創建 memoized selector</span></span><br><span class="line"><span class="keyword">const</span> selectNotesData = <span class="title function_">createSelector</span>(</span><br><span class="line">  selectNotesResult,</span><br><span class="line">  <span class="function">(<span class="params">notesResult</span>) =&gt;</span> notesResult.<span class="property">data</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成 selector</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">selectAll</span>: selectAllNotes,</span><br><span class="line">  <span class="attr">selectById</span>: selectNoteById,</span><br><span class="line">  <span class="attr">selectIds</span>: selectNoteIds,</span><br><span class="line">&#125; = notesAdapter.<span class="title function_">getSelectors</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> <span class="title function_">selectNotesData</span>(state) ?? initialState)</span><br></pre></td></tr></table></figure>

<h3 id="內容說明"><a href="#內容說明" class="headerlink" title="內容說明"></a>內容說明</h3><ol>
<li>調用 <code>createEntityAdapter</code> 為數據提供標準化方法。</li>
<li>由 <code>usersAdapter.getInitialState()</code> 生成空的 <code>&#123;ids: [], entities:&#123;&#125;&#125;</code> 物件。</li>
<li>由 <code>apiSlice.injectEndpoints()</code> 創建 <code>usersApiSlice</code> 並設定 endpoints。<ul>
<li><code>transformResponse</code> 中設定 <code>usersAdapter</code> 數據。</li>
</ul>
</li>
<li>為了創建 memoized selector，以 <code>usersApiSlice.endpoints.getNotes.select()</code> 生成新的 selector，並回傳 query 結果物件。</li>
<li><code>createSelector</code> 創建 memoized selector。</li>
<li><code>usersAdapter.getSelector()</code> 取得預設的 selector。</li>
</ol>
<h1 id="使用-RTK-Query"><a href="#使用-RTK-Query" class="headerlink" title="使用 RTK Query"></a>使用 RTK Query</h1><p>安裝 react-spinners :</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i react-spinners</span><br></pre></td></tr></table></figure>

<h2 id="展示-Users"><a href="#展示-Users" class="headerlink" title="展示 Users"></a>展示 Users</h2><h3 id="UsersList-jsx"><a href="#UsersList-jsx" class="headerlink" title="UsersList.jsx"></a>UsersList.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/UsersList.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">User</span> <span class="keyword">from</span> <span class="string">&quot;./User&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">UsersList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="attr">data</span>: users,</span><br><span class="line">    isLoading,</span><br><span class="line">    isSuccess,</span><br><span class="line">    isError,</span><br><span class="line">    error,</span><br><span class="line">  &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">pollingInterval</span>: <span class="number">60000</span>, <span class="comment">// 輪詢間隔(ms)</span></span><br><span class="line">    <span class="attr">refetchOnFocus</span>: <span class="literal">true</span>, <span class="comment">// 是否在獲取焦點時重新加載數據</span></span><br><span class="line">    <span class="attr">refetchOnMountOrArgChange</span>: <span class="literal">true</span>, <span class="comment">// 是否每次都重新加載數據，false 正常使用快取</span></span><br><span class="line">    <span class="attr">refetchOnReconnect</span>: <span class="literal">true</span>, <span class="comment">// 是否在重新連接時重新加載數據</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>&#123;error?.data.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ids &#125; = users</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tableContent = ids?.<span class="property">length</span></span><br><span class="line">      ? ids.<span class="title function_">map</span>(<span class="function">(<span class="params">userId</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">User</span> <span class="attr">key</span>=<span class="string">&#123;userId&#125;</span> <span class="attr">userId</span>=<span class="string">&#123;userId&#125;</span> /&gt;</span></span>)</span><br><span class="line">      : <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">className</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">thead</span> <span class="attr">className</span>=<span class="string">&quot;table__thead&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Username</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Roles</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Edit</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>&#123;tableContent&#125;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">UsersList</span></span><br></pre></td></tr></table></figure>

<h3 id="User-jsx"><a href="#User-jsx" class="headerlink" title="User.jsx :"></a>User.jsx :</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/User.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">User</span> = (<span class="params">&#123; userId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; user &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">user</span>: data?.<span class="property">entities</span>[userId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (user) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/users/<span class="subst">$&#123;userId&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> userRolesString = user.<span class="property">roles</span>.<span class="title function_">toString</span>().<span class="title function_">replaceAll</span>(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;, &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> cellStatus = user.<span class="property">active</span> ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;table__cell--inactive&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;user.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span>&#123;userRolesString&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">table__cell</span> $&#123;<span class="attr">cellStatus</span>&#125;`&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">User</span></span><br></pre></td></tr></table></figure>

<h2 id="展示-Notes"><a href="#展示-Notes" class="headerlink" title="展示 Notes"></a>展示 Notes</h2><h3 id="NotesList-jsx"><a href="#NotesList-jsx" class="headerlink" title="NotesList.jsx"></a>NotesList.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NotesList.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Note</span> <span class="keyword">from</span> <span class="string">&quot;./Note&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NotesList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;</span><br><span class="line">    <span class="attr">data</span>: notes,</span><br><span class="line">    isLoading,</span><br><span class="line">    isSuccess,</span><br><span class="line">    isError,</span><br><span class="line">    error,</span><br><span class="line">  &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">pollingInterval</span>: <span class="number">15000</span>, <span class="comment">// 輪詢間隔(ms)</span></span><br><span class="line">    <span class="attr">refetchOnFocus</span>: <span class="literal">true</span>, <span class="comment">// 是否在獲取焦點時重新加載數據</span></span><br><span class="line">    <span class="attr">refetchOnMountOrArgChange</span>: <span class="literal">true</span>, <span class="comment">// 是否每次都重新加載數據，false 正常使用快取</span></span><br><span class="line">    <span class="attr">refetchOnReconnect</span>: <span class="literal">true</span>, <span class="comment">// 是否在重新連接時重新加載數據</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> content</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isLoading) &#123;</span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isError) &#123;</span><br><span class="line">    content = <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;errmsg&quot;</span>&gt;</span>&#123;error?.data.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ids &#125; = notes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> tableContent = ids?.<span class="property">length</span></span><br><span class="line">      ? ids.<span class="title function_">map</span>(<span class="function">(<span class="params">noteId</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Note</span> <span class="attr">key</span>=<span class="string">&#123;noteId&#125;</span> <span class="attr">noteId</span>=<span class="string">&#123;noteId&#125;</span> /&gt;</span></span>)</span><br><span class="line">      : <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    content = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">className</span>=<span class="string">&quot;table&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">thead</span> <span class="attr">className</span>=<span class="string">&quot;table__thead&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Status</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Created</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Updated</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Title</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Owner</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">className</span>=<span class="string">&quot;table__th&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;col&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Edit</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>&#123;tableContent&#125;<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NotesList</span></span><br></pre></td></tr></table></figure>

<h3 id="Note-jsx"><a href="#Note-jsx" class="headerlink" title="Note.jsx :"></a>Note.jsx :</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/Note.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faPenToSquare &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Note</span> = (<span class="params">&#123; noteId &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[noteId],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (note) &#123;</span><br><span class="line">    <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">      <span class="attr">day</span>: <span class="string">&quot;numeric&quot;</span>,</span><br><span class="line">      <span class="attr">month</span>: <span class="string">&quot;long&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleEdit</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">`/dash/notes/<span class="subst">$&#123;noteId&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">className</span>=<span class="string">&quot;table__row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell note__status&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;note.completed ? (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--completed&quot;</span>&gt;</span>Completed<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ) : (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;note__status--open&quot;</span>&gt;</span>Open<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.title&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span>&#123;note.username&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">className</span>=<span class="string">&quot;table__cell&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleEdit&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPenToSquare&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Note</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React App</title>
    <url>/2023/06/17/Frontend-React-App/</url>
    <content><![CDATA[<p>後端 API 建立完成後，即開始建構前端頁面，使用 React Router 搭建網頁的基本路由，並完成使用者登入後所展示的頁面。</p>
<span id="more"></span>

<h1 id="React-Router"><a href="#React-Router" class="headerlink" title="React Router"></a>React Router</h1><p>安裝 react-router-dom。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i react-router-dom</span><br></pre></td></tr></table></figure>

<p>main.jsx 建立 Router 模板 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// main.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom/client&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> <span class="keyword">as</span> <span class="title class_">Router</span>, <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.jsx&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">App</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p>App.jsx 建構網站路由 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>

<h1 id="Dash-頁面"><a href="#Dash-頁面" class="headerlink" title="Dash 頁面"></a>Dash 頁面</h1><p>安裝 <a href="https://fontawesome.com/v5/docs/web/use-with/react">Font Awesome</a> 的 React Component，在頁面中加入 icon。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i @fortawesome/fontawesome-svg-core</span><br><span class="line">npm i @fortawesome/free-solid-svg-icons</span><br><span class="line">npm i @fortawesome/react-fontawesome</span><br></pre></td></tr></table></figure>

<p>使用者登入後展示的頁面 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashLayout.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashHeader</span> <span class="keyword">from</span> <span class="string">&quot;./DashHeader&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashFooter</span> <span class="keyword">from</span> <span class="string">&quot;./DashFooter&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashLayout</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-layout border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">DashHeader</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">DashFooter</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashLayout</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的 Header 組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashHeader.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashHeader</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">header</span> <span class="attr">className</span>=<span class="string">&quot;dash-header flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__title&quot;</span>&gt;</span>techNotes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">nav</span> <span class="attr">className</span>=<span class="string">&quot;dash-header__nav&quot;</span>&gt;</span>&#123;/* nav buttons */&#125;<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashHeader</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的子組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Welcome.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Welcome</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">  <span class="keyword">const</span> today = <span class="keyword">new</span> <span class="title class_">Intl</span>.<span class="title class_">DateTimeFormat</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;full&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;).<span class="title function_">format</span>(date)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">className</span>=<span class="string">&quot;welcome&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;today&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;link&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/notes&quot;</span>&gt;</span>View techNotes<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/dash/users&quot;</span>&gt;</span>View User Settings<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Welcome</span></span><br></pre></td></tr></table></figure>

<p>Dash 頁面的 Footer 組件 :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// components/DashFooter.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faHouse &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate, useLocation &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DashFooter</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; pathname &#125; = <span class="title function_">useLocation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onGoHomeClicked</span> = (<span class="params"></span>) =&gt; <span class="title function_">navigate</span>(<span class="string">&quot;/dash&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> goHomeButton = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">if</span> (pathname !== <span class="string">&quot;/dash&quot;</span>) &#123;</span><br><span class="line">    goHomeButton = (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Home&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;onGoHomeClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faHouse&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">className</span>=<span class="string">&quot;dash-footer flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;goHomeButton&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>Current User:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>Status:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DashFooter</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>React Router</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend - React Form with Redux &amp; RTK Query</title>
    <url>/2023/06/20/Frontend-React-Form-with-Redux-RTK-Query/</url>
    <content><![CDATA[<p>建立完善 CRUD HTTP 請求方法，透過 RTK Query 發出 HTTP 請求，完成 user 及 note 編輯頁面與功能。</p>
<span id="more"></span>

<h1 id="Redux-amp-RTK-Query"><a href="#Redux-amp-RTK-Query" class="headerlink" title="Redux &amp; RTK Query"></a>Redux &amp; RTK Query</h1><h2 id="usersApiSlice-js"><a href="#usersApiSlice-js" class="headerlink" title="usersApiSlice.js"></a>usersApiSlice.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/usersApiSlice.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> usersApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getUsers</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedUsers = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          user.<span class="property">id</span> = user.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> user</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> usersAdapter.<span class="title function_">setAll</span>(initialState, loadedUsers)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">addNewUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialUserData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialUserData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">updateUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialUserData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialUserData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">deleteUser</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">&#123; id &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/users&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          id,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;User&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  useGetUsersQuery,</span><br><span class="line">  useAddNewUserMutation,</span><br><span class="line">  useUpdateUserMutation,</span><br><span class="line">  useDeleteUserMutation,</span><br><span class="line">&#125; = usersApiSlice</span><br></pre></td></tr></table></figure>

<h2 id="notesApiSlice-js"><a href="#notesApiSlice-js" class="headerlink" title="notesApiSlice.js"></a>notesApiSlice.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/notesApiSlice.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> notesApiSlice = apiSlice.<span class="title function_">injectEndpoints</span>(&#123;</span><br><span class="line">  <span class="attr">endpoints</span>: <span class="function">(<span class="params">builder</span>) =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">getNotes</span>: builder.<span class="title function_">query</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">validateStatus</span>: <span class="function">(<span class="params">response, result</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> response.<span class="property">status</span> === <span class="number">200</span> &amp;&amp; !result.<span class="property">isError</span></span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="comment">// 將 query 回應物件改為標準化物件</span></span><br><span class="line">      <span class="attr">transformResponse</span>: <span class="function">(<span class="params">responseData</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> loadedNotes = responseData.<span class="title function_">map</span>(<span class="function">(<span class="params">note</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 為了 ids，設置 id</span></span><br><span class="line">          note.<span class="property">id</span> = note.<span class="property">_id</span></span><br><span class="line">          <span class="keyword">return</span> note</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> notesAdapter.<span class="title function_">setAll</span>(initialState, loadedNotes)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">providesTags</span>: <span class="function">(<span class="params">result, error, arg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result?.<span class="property">ids</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> [</span><br><span class="line">            &#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;,</span><br><span class="line">            ...result.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> (&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, id &#125;)),</span><br><span class="line">          ]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">addNewNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialNoteData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialNoteData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: <span class="string">&quot;LIST&quot;</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">updateNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">initialNoteData</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123;</span><br><span class="line">          ...initialNoteData,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">deleteNote</span>: builder.<span class="title function_">mutation</span>(&#123;</span><br><span class="line">      <span class="attr">query</span>: <span class="function">(<span class="params">&#123; id &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/notes&quot;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">        <span class="attr">body</span>: &#123; id &#125;,</span><br><span class="line">      &#125;),</span><br><span class="line">      <span class="attr">invalidatesTags</span>: <span class="function">(<span class="params">result, err, arg</span>) =&gt;</span> [&#123; <span class="attr">type</span>: <span class="string">&quot;Note&quot;</span>, <span class="attr">id</span>: arg.<span class="property">id</span> &#125;],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;),</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> &#123;</span><br><span class="line">  useGetNotesQuery,</span><br><span class="line">  useAddNewNoteMutation,</span><br><span class="line">  useUpdateNoteMutation,</span><br><span class="line">  useDeleteNoteMutation,</span><br><span class="line">&#125; = notesApiSlice</span><br></pre></td></tr></table></figure>

<h1 id="RTK-Quert-Subscriptions"><a href="#RTK-Quert-Subscriptions" class="headerlink" title="RTK Quert Subscriptions"></a>RTK Quert Subscriptions</h1><p>實現數據即時更新的功能。當伺服器端的數據變化時，將自動更新用戶端數據，使應用程式可以實時獲取最新數據，無需手動刷新頁面。</p>
<h2 id="Prefetch-jsx"><a href="#Prefetch-jsx" class="headerlink" title="Prefetch.jsx"></a>Prefetch.jsx</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/auth/Prefetch.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Outlet</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&quot;../../app/store&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; notesApiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../notes/notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; usersApiSlice &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Prefetch</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    store.<span class="title function_">dispatch</span>(</span><br><span class="line">      notesApiSlice.<span class="property">util</span>.<span class="title function_">prefetch</span>(<span class="string">&quot;getNotes&quot;</span>, <span class="string">&quot;notesList&quot;</span>, &#123; <span class="attr">force</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    )</span><br><span class="line">    store.<span class="title function_">dispatch</span>(</span><br><span class="line">      usersApiSlice.<span class="property">util</span>.<span class="title function_">prefetch</span>(<span class="string">&quot;getUsers&quot;</span>, <span class="string">&quot;usersList&quot;</span>, &#123; <span class="attr">force</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">    )</span><br><span class="line">  &#125;, [])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Outlet</span> /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Prefetch</span></span><br></pre></td></tr></table></figure>

<h1 id="React-Form"><a href="#React-Form" class="headerlink" title="React Form"></a>React Form</h1><p>建立與 user 和 note 的新增與編輯頁面。</p>
<h2 id="roles-js"><a href="#roles-js" class="headerlink" title="roles.js"></a>roles.js</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// config/roles.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">ROLES</span> = &#123;</span><br><span class="line">  <span class="title class_">Employee</span>: <span class="string">&quot;Employee&quot;</span>,</span><br><span class="line">  <span class="title class_">Manager</span>: <span class="string">&quot;Manager&quot;</span>,</span><br><span class="line">  <span class="title class_">Admin</span>: <span class="string">&quot;Admin&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="新增-User"><a href="#新增-User" class="headerlink" title="新增 User"></a>新增 User</h2><h3 id="NewUserForm-jsx"><a href="#NewUserForm-jsx" class="headerlink" title="NewUserForm.jsx"></a>NewUserForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/NewUserForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useAddNewUserMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">ROLES</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../config/roles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">USER_REGEX</span> = <span class="regexp">/^[A-z]&#123;3,20&#125;$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PWD_REGEX</span> = <span class="regexp">/^[A-z0-9!@#$%]&#123;4,12&#125;$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewUserForm</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [addNewUser, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useAddNewUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validUsername, setValidUsername] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validPassword, setValidPassword] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [roles, setRoles] = <span class="title function_">useState</span>([<span class="string">&quot;Employee&quot;</span>])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidUsername</span>(<span class="variable constant_">USER_REGEX</span>.<span class="title function_">test</span>(username))</span><br><span class="line">  &#125;, [username])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidPassword</span>(<span class="variable constant_">PWD_REGEX</span>.<span class="title function_">test</span>(password))</span><br><span class="line">  &#125;, [password])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setRoles</span>([])</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUsernameChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onPasswordChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onRolesChanged</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> values = <span class="title class_">Array</span>.<span class="title function_">from</span>(</span><br><span class="line">      e.<span class="property">target</span>.<span class="property">selectedOptions</span>, <span class="comment">//HTMLCollection</span></span><br><span class="line">      <span class="function">(<span class="params">option</span>) =&gt;</span> option.<span class="property">value</span></span><br><span class="line">    )</span><br><span class="line">    <span class="title function_">setRoles</span>(values)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave =</span><br><span class="line">    [roles.<span class="property">length</span>, validUsername, validPassword].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveUserClicked</span> = <span class="keyword">async</span> (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addNewUser</span>(&#123; username, password, roles &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable constant_">ROLES</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">role</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;role&#125;</span> <span class="attr">value</span>=<span class="string">&#123;role&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;role&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validUserClass = !validUsername ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validPwdClass = !validPassword ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validRolesClass = !<span class="title class_">Boolean</span>(roles.<span class="property">length</span>)</span><br><span class="line">    ? <span class="string">&quot;form__input--incomplete&quot;</span></span><br><span class="line">    : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;error?.data?.message&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;onSaveUserClicked&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>New User<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span> <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span> <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Username: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[3-20 letters]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validUserClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUsernameChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Password: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[4-12 chars incl. !@#$%]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validPwdClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onPasswordChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;roles&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ASSIGNED ROLES:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__select</span> $&#123;<span class="attr">validRolesClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">multiple</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;3&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;roles&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onRolesChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;options&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewUserForm</span></span><br></pre></td></tr></table></figure>

<h2 id="編輯-User"><a href="#編輯-User" class="headerlink" title="編輯 User"></a>編輯 User</h2><h3 id="EditUser-jsx"><a href="#EditUser-jsx" class="headerlink" title="EditUser.jsx"></a>EditUser.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/EditUser.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./EditUserForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditUser</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = <span class="title function_">useParams</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; user &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">user</span>: data?.<span class="property">entities</span>[id],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!user) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">EditUserForm</span> <span class="attr">user</span>=<span class="string">&#123;user&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditUser</span></span><br></pre></td></tr></table></figure>

<h3 id="EditUserForm-jsx"><a href="#EditUserForm-jsx" class="headerlink" title="EditUserForm.jsx"></a>EditUserForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/users/EditUserForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave, faTrashCan &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useUpdateUserMutation, useDeleteUserMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">ROLES</span> &#125; <span class="keyword">from</span> <span class="string">&quot;../../config/roles&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">USER_REGEX</span> = <span class="regexp">/^[A-z]&#123;3,20&#125;$/</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PWD_REGEX</span> = <span class="regexp">/^[A-z0-9!@#$%]&#123;4,12&#125;$/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditUserForm</span> = (<span class="params">&#123; user &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [updateUser, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useUpdateUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [</span><br><span class="line">    deleteUser,</span><br><span class="line">    &#123; <span class="attr">isSuccess</span>: isDelSuccess, <span class="attr">isError</span>: isDelError, <span class="attr">error</span>: delerror &#125;,</span><br><span class="line">  ] = <span class="title function_">useDeleteUserMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [username, setUsername] = <span class="title function_">useState</span>(user.<span class="property">username</span>)</span><br><span class="line">  <span class="keyword">const</span> [validUsername, setValidUsername] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [password, setPassword] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [validPassword, setValidPassword] = <span class="title function_">useState</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> [roles, setRoles] = <span class="title function_">useState</span>(user.<span class="property">roles</span>)</span><br><span class="line">  <span class="keyword">const</span> [active, setActive] = <span class="title function_">useState</span>(user.<span class="property">active</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidUsername</span>(<span class="variable constant_">USER_REGEX</span>.<span class="title function_">test</span>(username))</span><br><span class="line">  &#125;, [username])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">setValidPassword</span>(<span class="variable constant_">PWD_REGEX</span>.<span class="title function_">test</span>(password))</span><br><span class="line">  &#125;, [password])</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess || isDelSuccess) &#123;</span><br><span class="line">      <span class="title function_">setUsername</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setPassword</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setRoles</span>([])</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/users&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, isDelSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUsernameChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUsername</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onPasswordChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setPassword</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onRolesChanged</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> values = <span class="title class_">Array</span>.<span class="title function_">from</span>(</span><br><span class="line">      e.<span class="property">target</span>.<span class="property">selectedOptions</span>,</span><br><span class="line">      <span class="function">(<span class="params">option</span>) =&gt;</span> option.<span class="property">value</span></span><br><span class="line">    )</span><br><span class="line">    <span class="title function_">setRoles</span>(values)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onActiveChanged</span> = (<span class="params"></span>) =&gt; <span class="title function_">setActive</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveUserClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (password) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span>, username, password, roles, active &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span>, username, roles, active &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDeleteUserClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteUser</span>(&#123; <span class="attr">id</span>: user.<span class="property">id</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> canSave</span><br><span class="line">  <span class="keyword">if</span> (password) &#123;</span><br><span class="line">    canSave =</span><br><span class="line">      [roles.<span class="property">length</span>, validUsername, validPassword].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    canSave = [roles.<span class="property">length</span>, validUsername].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> options = <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable constant_">ROLES</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">role</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;role&#125;</span> <span class="attr">value</span>=<span class="string">&#123;role&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;role&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError || isDelError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validUserClass = !validUsername ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validPwdClass =</span><br><span class="line">    password &amp;&amp; !validPassword ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validRolesClass = !<span class="title class_">Boolean</span>(roles.<span class="property">length</span>)</span><br><span class="line">    ? <span class="string">&quot;form__input--incomplete&quot;</span></span><br><span class="line">    : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = (error?.<span class="property">data</span>.<span class="property">message</span> || delerror?.<span class="property">data</span>.<span class="property">message</span>) ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Edit User<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveUserClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onDeleteUserClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faTrashCan&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Username: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[3-20 letters]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validUserClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;username&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUsernameChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Password: <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">&quot;nowrap&quot;</span>&gt;</span>[4-12 chars incl. !@#$%]<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validPwdClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;password&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onPasswordChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;user-active&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ACTIVE:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;user-active&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;user-active&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">checked</span>=<span class="string">&#123;active&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onActiveChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span> <span class="attr">htmlFor</span>=<span class="string">&quot;roles&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ASSIGNED ROLES:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;roles&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__select</span> $&#123;<span class="attr">validRolesClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">multiple</span>=<span class="string">&#123;true&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;3&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;roles&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onRolesChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;options&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditUserForm</span></span><br></pre></td></tr></table></figure>

<h2 id="新增-Note"><a href="#新增-Note" class="headerlink" title="新增 Note"></a>新增 Note</h2><h3 id="NewNote-jsx"><a href="#NewNote-jsx" class="headerlink" title="NewNote.jsx"></a>NewNote.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NewNote.jsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNoteForm</span> <span class="keyword">from</span> <span class="string">&quot;./NewNoteForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewNote</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; users &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">users</span>: data?.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> data?.<span class="property">entities</span>[id]),</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!users?.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">NewNoteForm</span> <span class="attr">users</span>=<span class="string">&#123;users&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewNote</span></span><br></pre></td></tr></table></figure>

<h3 id="NewNoteForm-jsx"><a href="#NewNoteForm-jsx" class="headerlink" title="NewNoteForm.jsx"></a>NewNoteForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/NewNoteForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useAddNewNoteMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">NewNoteForm</span> = (<span class="params">&#123; users &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [addNewNote, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useAddNewNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [title, setTitle] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">const</span> [userId, setUserId] = <span class="title function_">useState</span>(users[<span class="number">0</span>].<span class="property">id</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess) &#123;</span><br><span class="line">      <span class="title function_">setTitle</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setText</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setUserId</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTitleChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setTitle</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTextChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setText</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUserIdChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUserId</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave = [title, text, userId].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">addNewNote</span>(&#123; title, text, <span class="attr">user</span>: userId &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> usersOptions = users.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;user.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;user.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;user.username&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  ))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTitleClass = !title ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTextClass = !text ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = error?.<span class="property">data</span>.<span class="property">message</span> ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>New Note<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-title&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Title:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTitleClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTitleChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-text&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Text:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTextClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;text&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTextChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          USER:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__select&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;userId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUserIdChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;usersOptions&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NewNoteForm</span></span><br></pre></td></tr></table></figure>

<h2 id="編輯-Note"><a href="#編輯-Note" class="headerlink" title="編輯 Note"></a>編輯 Note</h2><h3 id="EditNote-jsx"><a href="#EditNote-jsx" class="headerlink" title="EditNote.jsx"></a>EditNote.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNote.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useParams &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SyncLoader</span> <span class="keyword">from</span> <span class="string">&quot;react-spinners/SyncLoader&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useGetNotesQuery &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useGetUsersQuery &#125; <span class="keyword">from</span> <span class="string">&quot;../users/usersApiSlice&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNoteForm</span> <span class="keyword">from</span> <span class="string">&quot;./EditNoteForm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNote</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; id &#125; = <span class="title function_">useParams</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; note &#125; = <span class="title function_">useGetNotesQuery</span>(<span class="string">&quot;notesList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">note</span>: data?.<span class="property">entities</span>[id],</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> &#123; users &#125; = <span class="title function_">useGetUsersQuery</span>(<span class="string">&quot;usersList&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">selectFromResult</span>: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      <span class="attr">users</span>: data?.<span class="property">ids</span>.<span class="title function_">map</span>(<span class="function">(<span class="params">id</span>) =&gt;</span> data?.<span class="property">entities</span>[id]),</span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!note || !users.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SyncLoader</span> <span class="attr">color</span>=<span class="string">&quot;#d9d9d9&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = <span class="language-xml"><span class="tag">&lt;<span class="name">EditNoteForm</span> <span class="attr">note</span>=<span class="string">&#123;note&#125;</span> <span class="attr">users</span>=<span class="string">&#123;users&#125;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNote</span></span><br></pre></td></tr></table></figure>

<h3 id="EditNoteForm-jsx"><a href="#EditNoteForm-jsx" class="headerlink" title="EditNoteForm.jsx"></a>EditNoteForm.jsx</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// features/notes/EditNoteForm.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useNavigate &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123; faSave, faTrashCan &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useUpdateNoteMutation, useDeleteNoteMutation &#125; <span class="keyword">from</span> <span class="string">&quot;./notesApiSlice&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">EditNoteForm</span> = (<span class="params">&#123; note, users &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [updateNote, &#123; isLoading, isSuccess, isError, error &#125;] =</span><br><span class="line">    <span class="title function_">useUpdateNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [</span><br><span class="line">    deleteNote,</span><br><span class="line">    &#123; <span class="attr">isSuccess</span>: isDelSuccess, <span class="attr">isError</span>: isDelError, <span class="attr">error</span>: delerror &#125;,</span><br><span class="line">  ] = <span class="title function_">useDeleteNoteMutation</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> navigate = <span class="title function_">useNavigate</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> [title, setTitle] = <span class="title function_">useState</span>(note.<span class="property">title</span>)</span><br><span class="line">  <span class="keyword">const</span> [text, setText] = <span class="title function_">useState</span>(note.<span class="property">text</span>)</span><br><span class="line">  <span class="keyword">const</span> [completed, setCompleted] = <span class="title function_">useState</span>(note.<span class="property">completed</span>)</span><br><span class="line">  <span class="keyword">const</span> [userId, setUserId] = <span class="title function_">useState</span>(note.<span class="property">user</span>)</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isSuccess || isDelSuccess) &#123;</span><br><span class="line">      <span class="title function_">setTitle</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setText</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">setUserId</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">      <span class="title function_">navigate</span>(<span class="string">&quot;/dash/notes&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, [isSuccess, isDelSuccess, navigate])</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTitleChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setTitle</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onTextChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setText</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onCompletedChanged</span> = (<span class="params"></span>) =&gt; <span class="title function_">setCompleted</span>(<span class="function">(<span class="params">prev</span>) =&gt;</span> !prev)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onUserIdChanged</span> = (<span class="params">e</span>) =&gt; <span class="title function_">setUserId</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> canSave = [title, text, userId].<span class="title function_">every</span>(<span class="title class_">Boolean</span>) &amp;&amp; !isLoading</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onSaveNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (canSave) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">updateNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span>, title, text, completed, <span class="attr">user</span>: userId &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDeleteNoteClicked</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">deleteNote</span>(&#123; <span class="attr">id</span>: note.<span class="property">id</span> &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> created = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">createdAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> updated = <span class="keyword">new</span> <span class="title class_">Date</span>(note.<span class="property">updatedAt</span>).<span class="title function_">toLocaleString</span>(<span class="string">&quot;zh-TW&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">dateStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">    <span class="attr">timeStyle</span>: <span class="string">&quot;medium&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> usersOptions = users.<span class="title function_">map</span>(<span class="function">(<span class="params">user</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">key</span>=<span class="string">&#123;user.id&#125;</span> <span class="attr">value</span>=<span class="string">&#123;user.id&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;user.username&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  ))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errClass = isError || isDelError ? <span class="string">&quot;errmsg&quot;</span> : <span class="string">&quot;offscreen&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTitleClass = !title ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">const</span> validTextClass = !text ? <span class="string">&quot;form__input--incomplete&quot;</span> : <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> errContent = (error?.<span class="property">data</span>.<span class="property">message</span> || delerror?.<span class="property">data</span>.<span class="property">message</span>) ?? <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> content = (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">className</span>=<span class="string">&#123;errClass&#125;</span>&gt;</span>&#123;errContent&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">className</span>=<span class="string">&quot;form&quot;</span> <span class="attr">onSubmit</span>=<span class="string">&#123;(e)</span> =&gt;</span> e.preventDefault()&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__title-row&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Edit Note #&#123;note.ticket&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__action-buttons&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Save&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onSaveNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">disabled</span>=<span class="string">&#123;!canSave&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faSave&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">className</span>=<span class="string">&quot;icon-button&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">title</span>=<span class="string">&quot;Delete&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">onClick</span>=<span class="string">&#123;onDeleteNoteClicked&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faTrashCan&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-title&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Title:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTitleClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;title&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">autoComplete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;title&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTitleChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-text&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Text:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">textarea</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&#123;</span>`<span class="attr">form__input</span> $&#123;<span class="attr">validTextClass</span>&#125;`&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;text&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onTextChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">htmlFor</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__label form__checkbox-container&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          Completed:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-completed&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">checked</span>=<span class="string">&#123;completed&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onCompletedChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">htmlFor</span>=<span class="string">&quot;note-username&quot;</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          USER:</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">select</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;form__select&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">name</span>=<span class="string">&quot;username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">id</span>=<span class="string">&quot;note-username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;userId&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;onUserIdChanged&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;usersOptions&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__divider&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Created:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;created&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;form__label&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            Updated:</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;updated&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> content</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditNoteForm</span></span><br></pre></td></tr></table></figure>

<h2 id="App-jsx"><a href="#App-jsx" class="headerlink" title="App.jsx"></a>App.jsx</h2><p>設定 route :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// App.jsx</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Routes</span>, <span class="title class_">Route</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./App.css&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;./components/Layout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Public</span> <span class="keyword">from</span> <span class="string">&quot;./components/Public&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Login&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Prefetch</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Prefetch&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DashLayout</span> <span class="keyword">from</span> <span class="string">&quot;./components/DashLayout&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;./features/auth/Welcome&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UsersList</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/UsersList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditUser</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/EditUser&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewUserForm</span> <span class="keyword">from</span> <span class="string">&quot;./features/users/NewUserForm&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NotesList</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NotesList&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/EditNote&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NewNote</span> <span class="keyword">from</span> <span class="string">&quot;./features/notes/NewNote&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Routes</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Layout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Public</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;login&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Login</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Route</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Prefetch</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">          &#123;/* Dash */&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;dash&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">DashLayout</span> /&gt;</span>&#125;&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">Welcome</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;/* Users */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">UsersList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditUser</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewUserForm</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">            &#123;/* Notes */&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">index</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NotesList</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;:id&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">EditNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">&quot;new&quot;</span> <span class="attr">element</span>=<span class="string">&#123;</span>&lt;<span class="attr">NewNote</span> /&gt;</span>&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;/* End Dash */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Routes</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MERN</category>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>React</tag>
        <tag>Redux</tag>
        <tag>RTK Query</tag>
      </tags>
  </entry>
</search>
